2012-10-26 21:16  chl

	* smtpctl.c: add a new uptime.human entry in stats, derived from
	  uptime, but displayed in a human readable fashion:

	  uptime=123456 uptime.human=1d10h17m36s

	  ok gilles@

2012-10-25 20:14  eric

	* ioev.c: Handle the case where writev() fails with EAGAIN.  In
	  theory it cannot happen, but it seems that kqueue triggers the
	  event sometimes, even if the socket is not immediatly writeable.
	  Temporary workaround it while the real issue is being
	  investigated.

	  ok gilles@ chl@

2012-10-25 16:06  eric

	* mfa.c: send the semantically correct msg when RCPT fails, even if
	  the exact value does not matter.

	  spotted by chl@

	  ok gilles@ chl@

2012-10-25 11:51  eric

	* mda.c, queue.c: Make the mda request the message fd from the
	  queue when needed, instead of pushing the fd with the envelope.
	  This allows the mda to deal itself with session limits.
	  Envelopes are sent at full rate to the mda, which buffers them on
	  per-user queues, or sends them back for rescheduling if it
	  already has too many pending envelopes.  Delivery sessions are
	  created (within per- user and global limits) to drain the queues.

	  This makes the server handle envelope bursts more efficiently.

	  ok gilles@

2012-10-22 23:58  chl

	* queue_fsqueue.c: switch from {open,read,close}() to
	  {fopen,fread,fclose}() in fsqueue_envelope_load(), also fix a
	  potential fd leak.

	  ok gilles@ eric@

2012-10-17 19:14  eric

	* mda.c: rename field msg -> evp.

	  ok gilles@

2012-10-17 18:39  eric

	* smtpd.8, smtpd.c: Document the -P option.  While there, remove
	  reference to -T, it's incomplete, subject to changes and
	  internal.

	  feedback from jmc@

	  ok gilles@

2012-10-17 10:38  eric

	* smtpctl.8: consistency fix: we use "envelope-id" everywhere.

	  ok gilles@

2012-10-16 18:47  jmc

	* smtpd.conf.5: consistent macros; Tim van der Molen

2012-10-16 14:02  eric

	* smtpd.h: MAX_RULEBUFFER_LEN is too small, bump it.

	  discussed with gilles@

2012-10-16 13:10  eric

	* lka_session.c: Prevent a possible buffer overflow in
	  lka_expand_format() that can lead to a server crash, and let the
	  smtp session fail if that happens.

	  spotted by todd@, discussed with eric@ and chl@

	  commited for gilles@

2012-10-16 00:47  jmc

	* smtpctl.8: tweak previous; ok eric

2012-10-15 20:32  eric

	* control.c, smtpctl.8, smtpd.c: implement and document "smtpctl
	  stop"

	  ok gilles@

2012-10-15 19:54  eric

	* smtpd.c: use shorter names for process titles.

	  ok gilles@ chl@

2012-10-14 22:18  eric

	* mda.c: As discussed with gilles@, actually impose the per-user
	  limit regardless of the delivery method.  Bump the limit a bit.

	  requested by and ok gilles@

2012-10-14 20:50  eric

	* mda.c: Limit the number of per-user mda (external program)
	  deliveries that can be running at the same time. It prevents a
	  user from consuming all mda "slots" with a long-running filter in
	  his .forward file.  Other delivery types are not affected.

	  ok gilles@ chl@

2012-10-14 20:45  eric

	* queue.c: When pushing too many envelopes to the mda at once, we
	  can hit a filedesc exhaustion situation that kills the server.
	  For now, put a safe limit on the number of envelopes sent by the
	  queue process to the mda.

	  ok gilles@ chl@

2012-10-14 16:26  halex

	* ssl.c: enforce different permissions on different files in
	  ssl_load_file()

	  with gilles and eric, tested by me and gilles

	  ok gilles@

2012-10-14 15:31  chl

	* lka_session.c, queue.c: substitute wrong comas into semicolons

	  ok gilles@ eric@

2012-10-14 15:22  gilles

	* smtpctl.8: mistakenly removed an ".Xr smtpd 8"

	  spotted by jmc@

2012-10-14 14:05  gilles

	* smtpd.conf.5: replace 'plain' with 'file' as the backend source
	  name for map_file.c

2012-10-14 13:59  gilles

	* map_stdio.c: missing from previous commit, byebye map_stdio.c

	  ok eric@ and chl@

2012-10-14 13:58  gilles

	* control.c, lka.c, map.c, map_db.c, map_file.c, map_static.c,
	  parse.y, parser.c, parser.h, smtpctl.8, smtpctl.c, smtpd.c,
	  smtpd.h: introduce map_file.c which will deprecate map_stdio.c

	  The idea is to have a file-backed map but to have smtpd(8) cache
	  the maps so that it cannot be partially read if edited while mail
	  is received. The file is read and converted to a static map
	  (map_static.c), changes aren't visible to smtpd until an
	  explicit: smtpctl update map	which reads file, builds a new
	  static map and invalidates the former.

	  partial-read issue discussed with beck@ and halex@ idea to
	  convert internally to a static map by eric@

	  diff ok eric@ and chl@

2012-10-14 13:47  gilles

	* smtpctl.8: smtpctl show runqueue no longer exists, it's been that
	  way for a while

2012-10-13 23:38  gilles

	* lka_session.c: missing header

2012-10-13 23:33  gilles

	* lka_session.c: in aliases expansion, we can avoid requesting
	  parent for ~user/.forward, if we check that user is a system user
	  first before sending the imsg

2012-10-13 11:44  gilles

	* makemap.c: when makemap is executed in sendmail mode, check if
	  ".db" is part of the filename and imply it otherwise so that the
	  following works:

		  makemap hash /etc/mail/aliases < aliases

2012-10-13 10:01  eric

	* aliases.c, lka.c, lka_session.c, map.c, ruleset.c: Make
	  map_lookup() and make_compare() set errno on failure to
	  distinguish between "no match" and "internal error" (e.g. missing
	  or broken db file).  Adapt alias expansion and ruleset matching
	  code to check for such errors, in which case the current
	  processing is aborted, and a temporary failure is reported to the
	  smtp session.

	  ok gilles@

2012-10-12 10:51  eric

	* envelope.c, smtpd.h: Extend the "retry" field to 16 bits.  The
	  new quadratic retry formula makes the maximum retry delay a bit
	  to small on 8 bits.

	  ok gilles@ chl@

2012-10-11 23:55  gilles

	* smtpd.c: - if argc / argv not empty after getopt() loop, display
	  usage

2012-10-11 23:52  gilles

	* mta.c: - no need to assign a separator to the last route flag
	  since we're not	  going to use it

2012-10-11 23:51  gilles

	* mfa_session.c: - no need to set imsg_type to IMSG_MFA_CLOSE when
	  we're not going to answer   to SMTP ..

2012-10-11 23:47  gilles

	* envelope.c: - remove dead store

	  spotted by clang

2012-10-11 23:43  gilles

	* map.c, smtpd.h: - map_create() takes a map_src not a map_kind

	  ok eric@ and chl@

2012-10-11 23:34  gilles

	* compress_gzip.c: - char * -> unsigned char *

	  spotted by clang, ok eric@ and chl@

2012-10-11 23:24  gilles

	* mta_session.c, smtp_session.c: - ssize_t -> size_t

	  spotted with clang, ok eric@ and chl@

2012-10-11 23:14  gilles

	* lka_session.c, parse.y, ruleset.c, smtpd.conf.5, smtpd.h: -
	  replace "from all" and "for all" with "from any" and "for any"

	  ok eric@, chl@

2012-10-10 22:29  gilles

	* smtpd.h: F_BACKUP and ROUTE_BACKUP must be sync-ed for now,
	  otherwise smtpd won't work as a backup MX ...

	  bug experienced by todd, verified and analyzed by eric

2012-10-10 21:39  gilles

	* parser.c, parser.h, smtpctl.8, smtpctl.c, smtpd.h, util.c: teach
	  smtpctl how to display envelopes and messages using their id.
	  this allows an admin to inspect the queue without having to
	  manually extract bucket and find the path to an envelope or
	  message.

	  diff by Sunil Nimmagadda <sunil@poolp.org>

	  ok eric@, chl@ and I

2012-10-10 21:38  eric

	* ioev.c, ioev.h, mta_session.c: io_connect() can take an optional
	  address to bind() before connecting.

	  ok gilles@

2012-10-10 20:02  eric

	* expand.c, lka_session.c, smtpd.h: For each alias node, mark if it
	  has been expanded from an alias map or from a .forward file.
	  Local deliveries for files and filters expanded from an alias map
	  are run as user _smtpd.

	  issue reported by tood@

	  ok gilles@ todd@

2012-10-10 19:57  eric

	* mta.c: show the port number for a relay if specified.

	  ok gilles@

2012-10-10 08:02  jmc

	* smtpd.conf.5: a SMTP -> an SMTP;

2012-10-09 23:33  eric

	* lka_session.c: make "relay ... as ..." work again.  It's been
	  zapped by mistake.

	  spotted by todd@

	  ok gilles@

2012-10-09 22:33  gilles

	* parse.y, smtp_session.c, smtpd.conf.5, smtpd.h: - allow a listen
	  statement to impose tls on its clients; - make listen statements
	  impose authentication if 'auth' is specified and    to make it
	  optional if 'auth-optional' is specified; - sync documentation
	  accordingly

	  with ideas and input from beck@ and halex@, ok eric@

2012-10-09 22:32  eric

	* ssl.c: Reject ssl key/certs/CA/DH files if their
	  ownership/permissions are not correct (uid 0, no rights for g/o).

	  Initial diff by Sunil Nimmagadda.

	  ok gilles@ chl@

2012-10-09 20:28  gilles

	* smtpd.conf.5: fix listen examples to not use an interface

2012-10-09 15:39  eric

	* queue_backend.c: fix a FILE* leak when using compression.

	  ok gilles@

2012-10-08 22:35  gilles

	* parse.y, smtpd.conf.5, smtpd.h: disk space is cheap but we still
	  want to limit the default size of a body to a sane default for
	  everyone.

2012-10-08 21:45  gilles

	* makemap.c: when building a db map, always lowercase the key
	  before a lookup in makemap

	  smtpd already does it, but this allows spotting a cycle at
	  makemap time, so user isn't surprised at runtime.

	  while at it, be more tolerant when user specifies
	  /etc/mail/aliases instead of /etc/mail/aliases.db

2012-10-08 10:46  eric

	* dns.c: skip RR if type is not MX.  Use hostname if the list of MX
	  is empty after the loop.

	  spotted by huku at grhack.net

	  ok gilles@

2012-10-07 19:21  eric

	* smtpd.h, waitq.c: Implement a simple wait queue API.	The idea is
	  to allow multiple "waiters" to wait on the same "tag" for a
	  deferred result.

	  A waiter is a callback and a void *argument.	The first waiter
	  (the one for which waitq_wait() returns true) is supposed to run
	  some code that leads to waitq_run() being run, which will destroy
	  that waitq and call all callbacks in turn.

	  Not used at the moment, but will be soon.

	  ok gilles@ chl@

2012-10-07 18:57  gilles

	* makemap.c: We need to provide a sendmail-like interface to
	  makemap so that some tools that assume sendmail do not break ...
	  add support for reading map source from stdin, for specifying the
	  DBTYPE of a map, and teach OUR makemap to emulate sendmail
	  interface.

	  ok eric@

2012-10-07 17:46  chl

	* bounce.c, mta_session.c, smtp.c, smtp_session.c, smtpd.h, util.c:
	  convert iobuf_queue()'s to iobuf_fqueue(). (idea from gilles@)
	  introduce iobuf_xinit() and iobuf_xfqueue(). (idea from eric@)

	  ok gilles@

2012-10-07 16:55  gilles

	* mta.c: bump max number of connections to a route from 5 to 10,
	  the limit is too low as experienced by myself and another user.

	  discussed with and ok eric@

2012-10-05 09:00  jmc

	* smtpd.conf.5: further tweak the maps description; ok gilles

2012-10-05 08:25  jmc

	* smtpd.conf.5: tweak previous; ok gilles

2012-10-04 21:49  gilles

	* parse.y, smtpd.conf.5: default map source to S_PLAIN, this allows
	  us to simplify smtpd.conf:  map aliases source plain
	  "/etc/mail/aliases" can be reduced to:	 map aliases
	  "/etc/mail/aliases"

2012-10-04 20:25  eric

	* smtpd.c: delay the call to log_debug() for displaying the
	  backends used until the "real" debug mode is set.

	  ok gilles@ chl@

2012-10-04 14:17  todd

	* util.c: change to from=<...>, to=<...> instead of to=<...> for
	  logging from gilles@ ok eric@

2012-10-03 23:44  gilles

	* dns.c: when requesting MX entries, the result can be appear in
	  random orders.

	  the logic for inserting them in a lka session when acting as
	  backup MX did not take account for one specific case that could
	  lead to an early exit without smtpd getting a chance to detect
	  the entry corrsponds to itself.

	  in such case, a backup MX woud try to connect to itself and
	  bounce in the loop detection code ... or it would sometimes work.

2012-10-03 21:42  gilles

	* lka_session.c, smtpd.h: we reintroduced a bug that was fixed 2
	  years ago with the aliases rewrite:

	  During the entire expansion process, a username may be larger
	  than MAXLOGNAME because it may be an alias going through another
	  expansion.  We should use a buffer that's large enough to fit a
	  mailaddr user-part so we avoid hitting a truncation check leading
	  to a fatal().

	  ok eric@, ok chl@

2012-10-03 20:09  gilles

	* lka_session.c: - add a EXPAND_DEPTH define for ... expansion
	  depth - bump the expansion depth from 5 to 10 - add the current
	  node depth to log_debug()

	  ok eric@, ok chl@

2012-10-03 19:58  gilles

	* delivery_filename.c, delivery_maildir.c, delivery_mbox.c,
	  delivery_mda.c, smtpd.c, smtpd.h: disallow root deliveries for
	  "deliver to filename" and "deliver to mda" rules, we only allow
	  them for mbox and maildir though users should really create a
	  root alias ...

	  discussed with eric@ and chl@, ok both

2012-10-03 18:43  chl

	* bounce.c, mta_session.c, smtp.c: don't try to cope with
	  iobuf_init() failure, make it fatal() instead.

	  from eric@ input

	  ok gilles@

2012-10-02 14:37  chl

	* bounce.c, mta_session.c, smtp.c: check iobuf_init() return value.

	  ok gilles@ eric@

2012-09-30 19:25  chl

	* mta_session.c, parse.y: use xmalloc(), xcalloc() and xmemdup()
	  helpers

	  ok gilles@

2012-09-30 16:28  gilles

	* lka.c, lka_session.c, parse.y, smtpd.h: - add decision to the
	  rule so that we can actually perform a reject match	ie:

		  reject from 192.168.1.0/24 for domain "openbsd.org"
		  accept from 192.168.0.0/16 for domain "openbsd.org"
	  deliver to mbox

	  it was documented but not working.

	  ok eric@ & chl@

2012-09-30 00:16  chl

	* smtp.c: use xstrdup() helper

	  ok eric@ gilles@

2012-09-29 13:02  eric

	* mfa.c, mfa_session.c, smtpd.h: some mfa_session cleanups.

	  - move mfa_session() prototype to smtpd.h - make mfa session use
	  a tree - make static functions static - merge mfa_session_init()
	  into mfa_session()

	  ok chl@

2012-09-29 12:35  eric

	* lka.c, lka_session.c, smtpd.h: finally remove rule member from
	  struct envelope.

	  "wow!" gilles@

2012-09-29 12:32  eric

	* parse.y, smtpd.h: Remove support for "as user" for local
	  deliveries.  It's not documented and not implemented.

	  ok gilles@

2012-09-28 19:28  eric

	* smtpd.c, smtpd.h: some smtpd.{c,h} cleanups:

	  - move struct child to smtpd.c - make it use a tree keyed on the
	  pid - change child_add to take the title directly as a const char
	  * - remove useless child_lookup() and child_del() - remove
	  CHILD_INVALID

	  ok chl@ gilles@

2012-09-28 16:03  chl

	* lka.c, mta.c: use xmemdup() and xcalloc() helpers

	  ok eric@

2012-09-28 15:40  eric

	* mda.c, smtpd.h: Move mda_session to mda.c, and make it use a tree
	  instead of a list, but still use uint32_t keys since ithe key is
	  used as peerid in msg.

	  ok gilles@

2012-09-28 14:00  eric

	* control.c, smtpd.h: smtpd.h/control.c cleanups:

	  - move session_socket_* prototypes under util.c - move struct
	  ctl_conn in control.c - make static functions static - remove
	  unused functions - call unlink() in control_shutdown() - make
	  control_close() take a ctl_conn * instead of a fd

	  ok chl@ gilles@

2012-09-27 22:34  chl

	* enqueue.c, makemap.c, map_stdio.c: use xstrdup() helper

	  ok eric@ gilles@

2012-09-27 21:50  eric

	* scheduler_ramqueue.c: When merging messages from an update,
	  decrement the message counter if the message already exists in
	  the main queue, otherwise it's counted twice.

	  ok gilles@

2012-09-27 21:43  eric

	* mta_session.c: fatal -> fatalx

2012-09-27 20:57  eric

	* expand.c, lka_session.c, smtpd.h: clarify the alias expansion
	  code.

	  The session manages a list of nodes to process. A node has a link
	  to the parent node from which it has been expanded, and a link to
	  the rule that led to its creation. Depending on its type and the
	  associated rule, each node is either "expanded" to create new
	  nodes or "submitted" to create a final envelope.  Nodes which
	  have already been seen, either processed or not, are discarded to
	  avoid loops.

	  The expansion process is bootstrapped by creating an
	  EXPAND_ADDRESS node from the original dest, with no rule and no
	  parent.  It is done when all nodes have been expanded or if an
	  error occurs before.	The expand depth is limited 5 levels.  The
	  whole expansion fails if the limit is reached.

	  While there, make sure that only one .forward file is queried at
	  a time, and only append the subfolder tag in the maildir case.

	  Fixe issues with some virtual map setups where the dest would get
	  mixed up, and make the whole expansion process generally easier
	  to follow.

	  ok chl@ gilles@

2012-09-27 19:58  chl

	* map_db.c, mfa.c: simplify calloc() + strlcpy()/memcpy() dance
	  with xmemdup() use xcalloc() helper remove newly unused variable

	  ok gilles@ eric@

2012-09-27 19:47  chl

	* config.c, control.c, dns.c, forward.c, map_static.c, map_stdio.c,
	  mda.c, stat_ramstat.c: use xmalloc()/xcalloc() helpers

	  while there unify usage of log_trace() in ramstat_set()

	  ok gilles@ eric@

2012-09-27 14:26  chl

	* enqueue.c: simplify malloc() + strlcpy() dance with xstrdup()

	  ok gilles@ eric@

2012-09-26 23:06  chl

	* bounce.c: fix memory leak in case of fdopen() failure

	  ok eric@ gilles@

2012-09-26 21:52  eric

	* envelope.c, lka_session.c, mda.c, smtpd.h, util.c: Stop using the
	  delivery_data union (field "to") in delivery_mda.  It's confusing
	  and not necessary as it's only used for "buffer".  Instead, just
	  add a "buffer" member in the structure and rename "as_user" to
	  "user".

	  The delivery_data union becomes an anonymous union in expandnode,
	  which is the only other place where it's used.

	  ok gilles@

2012-09-26 18:19  jmc

	* smtpd.8: last stage of rfc changes, using consistent Rs/Re
	  blocks, and moving the references into a STANDARDS section;

2012-09-26 14:28  eric

	* map.c: maps must be numbered from 1 up, as 0 means "no map".

	  ok gilles@

2012-09-26 11:49  halex

	* parse.y: fix double free() issue in error paths

	  ok eric@ gilles@

2012-09-26 11:43  eric

	* util.c: log final user and method used for local deliveries.

	  ok gilles@

2012-09-25 19:38  eric

	* smtpd.h, user_pwd.c: make const arguments const, and static
	  functions static.

	  ok chl@

2012-09-25 17:36  eric

	* util.c: need inttypes.h

	  from millert@

2012-09-24 10:56  eric

	* lka_session.c: spaces -> tabs

2012-09-21 21:37  eric

	* aliases.c, expand.c, forward.c, lka_session.c, smtpd.h: Do not
	  pass the username to forwards_get() which does not have to care
	  about this.  Instead, set the username on the expand context, and
	  copy it on the expand nodes as they are inserted.

	  ok gilles@

2012-09-21 18:40  eric

	* aliases.c, expand.c, forward.c, lka_session.c, map_db.c,
	  map_static.c, map_stdio.c, smtpd.h: wrap expandtree into a
	  "struct expand".

	  ok gilles@

2012-09-21 15:23  eric

	* lka_session.c, smtpd.h: move struct lka_session definition in
	  lka_session.c

	  ok gilles@

2012-09-21 14:33  eric

	* mda.c, mta.c, mta_session.c, queue.c, smtpd.h, util.c: Add a
	  log_envelope() function that log envelope status in a uniform
	  way.	It automagically adds an rcpt=<user@domain> field if "dest"
	  differs from the original "rcpt". The function takes an "extra"
	  parameter that allows to add some specific info depending on the
	  context.

	  ok gilles@

2012-09-21 12:22  eric

	* lka.c, lka_session.c, map.c, map_db.c, map_static.c, map_stdio.c,
	  ruleset.c, smtpd.h, util.c: Move ruleset_match() prototype to
	  smtpd.h and make the envelope const.	Adapt a lot of functions in
	  chain to use const args where required.

	  ok gilles@

2012-09-20 16:28  eric

	* aliases.c, forward.c, smtpd.h, util.c: constify parameters that
	  are supposed to be const.

	  ok gilles@

2012-09-20 11:27  eric

	* mda.c: envelope type is necessarily D_MDA here.

	  ok chl@

2012-09-19 22:08  eric

	* smtpctl.c: use lower case for envelope fields.

	  requested by gilles@

2012-09-19 21:40  eric

	* lka.c, mfa.c: Set envelope expirancy in lka before sending the
	  envelope to mfa.  The goal is to eventually have only the lka see
	  the rules.

	  ok gilles@ chl@

2012-09-19 20:20  eric

	* envelope.c, queue.c, smtp.c, smtpctl.c, smtpd.h: Remove
	  DF_ENQUEUE flag. It is mostly unused and logically broken.
	  Ignore it in existing envelopes until it gets completely dropped.
	   Change "smtpctl show queue" to display the address family of the
	  envelope source instead of the ENQUEUE flag.

	  ok gilles@

2012-09-19 14:59  eric

	* aliases.c, forward.c, makemap.c, map_db.c, map_static.c,
	  map_stdio.c: expandnodes must be bzero()'d before parsing to be
	  sure there is no bogus data left on return, since the RB compare
	  functions uses memcmp().  While there, remove all calls to
	  bzero() before alias_parse().

	  ok gilles@

2012-09-19 14:45  eric

	* aliases.c, expand.c, forward.c, makemap.c, map_db.c,
	  map_static.c, map_stdio.c: rename variables for consistency

	  ok gilles@

2012-09-19 13:57  eric

	* lka.c, smtpd.h: remove IS_RELAY and IS_MAILBOX macros.

	  ok gilles@

2012-09-19 12:10  eric

	* aliases.c, lka_session.c, smtpd.h: Remove aliases_exists() and
	  aliases_virtual_exists(). The corresponding *_get() functions can
	  be called directly.

	  ok gilles@

2012-09-19 11:06  eric

	* aliases.c, expand.c, forward.c, lka_session.c, map_db.c,
	  map_static.c, map_stdio.c, smtpd.h: start cleaning the expansion
	  code:

	  - change expandtree_* prefix to expand_ for better readability
	  and	because the structure might change at some point - rename
	  <>_free_nodes() to <>_free() - remove unused <>_remove_node() -
	  refcounting has no purpose at all; just remove it as well as the
	   decrement/increment functions, and replace the latter with
	  <>_insert - expandnode flags is only used to know if it's been
	  processed or not,   don't make it a flag but a simple field with
	  clear name.

	  ok gilles@ chl@

2012-09-18 17:35  eric

	* expand.c, lka_session.c: make use of expandtree_free_nodes() in
	  lka_session_destroy().  change to a simpler implementation for it
	  while there.

	  ok gilles@

2012-09-18 16:23  eric

	* lka_session.c, mta.c, smtpd.h, util.c: - add xmemdup() helper.  -
	  remove useless block in switch.

	  ok gilles@

2012-09-18 15:42  eric

	* lka.c, lka_session.c, smtpd.h: simple lka cleanups:

	  - fix lka* function prototypes in smtpd.h - make static functions
	  static - merge lka_session_init() into lka_session() - make
	  lka_session.c use tree.c to store sessions

	  ok gilles@

2012-09-18 15:13  eric

	* smtpd.h: this structure is not useful and ill-named. remove it.

	  ok gilles@

2012-09-18 14:54  eric

	* aliases.c: a few cleanups: - make static functions static - pass
	  const char * rather than char * when we mean that - make
	  parse_alias() more straightforward

	  ok gilles@

2012-09-18 14:13  eric

	* lka_session.c, smtpd.h: remove C_NET. it's not used and there is
	  no plan for it at the moment.

	  ok gilles@

2012-09-17 22:19  eric

	* map.c, parse.y, smtpd.h: Add map_create() and map_add() helpers.
	  Simplify the config parser by a great deal.

	  While there, rename the default "localhost" map to "<localhost>"
	  to make it look more internal, and create a single "<anyhost>"
	  map referenced by "from all" rules, instead of creating a dynamic
	  one for each of them.

	  ok gilles@ chl@

2012-09-17 20:44  gilles

	* lka_session.c, smtpd.conf.5: Fix format expansion in smtpd.conf,
	  it has confused a lot of people and it turns out documentation
	  got it wrong. This commit changes formats and doc, it makes
	  situation saner:

	     %A = user part of sender address
	     %D = domain part of sender address

	     %a = user part of recipient address
	     %d = domain part of recipient address
	     %u = unix account of recipient

	  ok eric@

2012-09-17 20:36  eric

	* smtp.c: increment the session counter when a session is created.
	  fix a bug where local sessions were not accounted for.

	  ok gilles@

2012-09-17 10:32  eric

	* smtp.c: fix pasto

	  prompted by gilles@

2012-09-17 07:46  jmc

	* forward.5: various tweaks; ok gilles

2012-09-16 21:16  gilles

	* smtp.c: we need to ensure we have at least two descriptors
	  per-client accepted, or we will hit an imsg_read() fatal (EAGAIN)
	  when a client sends DATA, and we don't have a descriptor for it.

2012-09-16 18:54  chl

	* smtpd.c, smtpd.h: now that log_imsg() is only used in smtpd.c,
	  set it as static.

	  ok gilles@

2012-09-16 18:43  chl

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, scheduler.c,
	  smtp.c, smtpd.c: Factorize log_imsg() in imsg_dispatch() instead
	  of in each imsg_callback()'s and put it out of profiling, so it's
	  not accounted.

	  While there, for PROC_PARENT: - set smtpd_process for PROC_PARENT
	  - use setproctitle() like other processes

	  ok gilles@

2012-09-16 17:55  chl

	* compress_backend.c, compress_gzip.c, smtpd.h: silent warnings

	  reported by ajacoutot@

	  ok gilles@ ajacoutot@

2012-09-16 13:53  gilles

	* delivery_maildir.c, smtpd.h, util.c: replace BSD-licensed
	  mkdir_p() with ISC-licensed mkdirs(), this allows us to avoid a
	  dual-licensed util.c for no reason

	  ok chl@

2012-09-16 12:48  eric

	* thread_private.h: remove the thread_private hack.

	  ok chl@ gilles@

2012-09-15 17:12  eric

	* envelope.c, parse.y, ruleset.c, smtp.c, util.c: When enqueueing
	  from the local socket, the input address is faked as "::1".  This
	  is confusing and even broken, as systems running with ipv6
	  disabled on lo0 will not be able to enqueue mails using the local
	  socket.

	  So instead, use AF_LOCAL and print it as "local" in
	  envelopes/maps.  Add it to the "localhost" and "all" maps
	  accordingly, and fix the ruleset matching.

	  ok gilles@ chl@

2012-09-14 21:22  eric

	* smtp_session.c, smtpd.h, ssl.c: Remove s_ssl from the smtp
	  session since it is duplicated in the io struct.  Change
	  ssl_session_init to ssl_smtp_init and make it simpler:  only
	  create an SSL* from the SSL_CTX* passed as parameter, so it does
	  not have to know about the struct session itself.  Kill some dead
	  prototypes while there.

	  ok chl@ gilles@

2012-09-14 21:20  eric

	* ioev.c: When printing ioev, do not segfault if there is no
	  associated iobuf.  Also give info about the cipher if there is an
	  ssl context.

	  ok chl@ gilles@

2012-09-14 19:35  jmc

	* aliases.5: tweak the description of "value" somewhat; ok gilles

2012-09-14 18:38  eric

	* smtp.c: Check limits before allocating the session.  While there,
	  move smtp_resume() in the if block; it makes more sense.

	  ok gilles@

2012-09-14 08:27  jmc

	* aliases.5: restructure this page somewhat, and make it read
	  better; ok gilles

2012-09-12 20:56  gilles

	* forward.5: reword a bit

2012-09-12 20:50  gilles

	* aliases.5: - document that aliases lookups are folded to
	  lowercase - also document that we strip the address extensions
	  before aliases lookups

2012-09-12 20:36  gilles

	* forward.5: missed a word :-)

2012-09-12 20:34  gilles

	* forward.5: - e-mail -> email , as discussed with jmc@ on
	  aliases(5) - reword first paragraph - $HOME -> ~/

2012-09-12 20:30  gilles

	* forward.5: - reword paragraph on ~/.forward permissions

2012-09-12 19:56  gilles

	* aldap.c, aldap.h, ber.c, ber.h, map_ldap.c, map_ldap.h: after a
	  bit of discussion we decided to remove these for now, we'll
	  reintroduce later when the support is ready ... after our first
	  release.

	  prompted by and ok eric@

2012-09-12 19:53  gilles

	* aliases.5, forward.5: - we lacked man pages for the aliases and
	  forward file formats rewrote from   scratch using the sendmail
	  pages as a base.

	  with a bit of rewording by jmc@, we'll improve further in base

2012-09-11 21:19  gilles

	* scheduler_backend.c: - simplify scheduler_compute_schedule by
	  making it a quadratic delaying.    no more if/else, we derive the
	  delay from the retry count. works for    qmail, should work for
	  us too.

	  ok eric@

2012-09-11 18:24  eric

	* mta_session.c: Initialize fd correctly.  This fixes a lot of
	  problems.

	  ok gilles@

2012-09-11 17:05  eric

	* mta_session.c: remove the session entry from the search tree when
	  it's dead.

	  ok gilles@

2012-09-11 14:47  eric

	* mfa_session.c, smtpd.c: log the process name and place when
	  calling fatal().

	  ok gilles@

2012-09-11 10:37  eric

	* scheduler.c, scheduler_ramqueue.c, smtpd.h: Rework the scheduler
	  internals.  Fix some scheduling loop issues and handle envelope
	  scheduling/expiration better.

	  ok gilles@

2012-09-10 16:22  eric

	* queue.c: nasty typo.

	  ok gilles@

2012-09-08 15:58  chl

	* parse.y: remove unused header

	  ok gilles@

2012-09-03 23:28  chl

	* smtpfilter.c: fix the example filter to match current API by
	  using enum filter_status return value instead of plain int

	  ok todd@ gilles@

2012-09-02 14:21  chl

	* envelope.c: remove warning

	  asked by gilles@

	  ok gilles@

2012-09-01 18:25  gilles

	* smtpd.h: remove unused flag

2012-09-01 18:09  gilles

	* crypto_backend.c, parse.y, queue_backend.c, smtpd.c,
	  smtpd.conf.5, smtpd.h: - remove crypto_backend - remove support
	  for encrypted queue, it will be reintroduced later after
	  pouring more thinking into it

	  if you had it enabled, flush your queue before updating

2012-09-01 00:40  fgsch

	* crypto_backend.c: Use EVP_MAX_MD_SIZE for the key size for now as
	  discussed on icb.

2012-08-31 00:38  chl

	* compress_gzip.c, crypto_backend.c: increase fread()/fwrite()
	  buffer from 8k to 16k

	  ok gilles@

2012-08-31 00:06  gilles

	* parser.c, parser.h, smtpctl.c: - rename show_envelope() to
	  show_queue_envelope() - remove SHOW_RUNQUEUE it was a noop since
	  runqueues have been removed	years ago from smtpd

2012-08-30 23:59  chl

	* crypto_backend.c, smtpd.h: change crypto_setup() prototype to use
	  const char * instead of uint8_t *

	  while there do some KNF: - change 8 spaces to tab - add/remove
	  some missing/extra space after if's

	  ok gilles@

2012-08-30 21:33  chl

	* compress_backend.c, compress_gzip.c, queue_backend.c, smtpd.h:
	  switch compress_backend to use FILE * instead of file
	  descriptors, like crypto_backend

	  ok gilles@

2012-08-30 21:28  chl

	* queue_backend.c: fix uninitialized variable which can be reach in
	  case of failure.

	  ok gilles@

2012-08-30 20:25  gilles

	* aldap.c, aldap.h, ber.c, ber.h, map.c, map_ldap.c, map_ldap.h,
	  parse.y, smtpd.h: - import latest aldap.[ch] and ber.[ch] from
	  ypldap - revive map_ldap.c by updating it to the current API

	  diff by Mathieu Masson who played puzzle with an oooold changeset
	  of mine, this import is to let us work on it in tree, it won't
	  work as is.

	  idea ok eric@ and chl@

2012-08-30 20:19  eric

	* queue_fsqueue.c: when reloading the envelopes from disk, skip
	  envelopes that are more recent than the startup time, since they
	  are already known to the scheduler.

	  ok gilles@

2012-08-30 20:16  eric

	* mta.c, mta_session.c: - correctly free the task if all rcpt where
	  rejected - fix refcounting - add some stat counters

	  ok gilles@ chl@

2012-08-29 20:36  naddy

	* parse.y, smtpd.conf.5: switch the default queue encryption to
	  AES-128 I'm committing this on behalf of gilles@

2012-08-29 20:10  jmc

	* smtpd.conf.5: tweak previous;

2012-08-29 18:48  gilles

	* smtpd.conf.5: obvious, but document that change of any encryption
	  parameter *requires* queue to be emptied first.

2012-08-29 18:26  gilles

	* compress_backend.c, crypto_backend.c, mta.c, parse.y,
	  queue_backend.c, smtp.c, smtpd.c, smtpd.conf.5, smtpd.h:
	  Introduce the crypto_backend API and provide support for...
	  encrypted queue using the new API. By default, OpenSMTPD does not
	  provide queue encryption, but it can be enabled with "queue
	  encryption [args]" and will transparently encrypt/decrypt
	  envelopes/messages as they hit the queue.

	  By default, it will use Blowfish in CBC mode with a different
	  random IV for each envelope and message. User provided key is
	  expanded using sha256 but a different cipher and digest may be
	  specified in smtpd.conf

	  Queue encryption is compatible with compression and if both
	  options are set it will do them in correct order and
	  transparently.

	  tested by chl@, a few users and myself ok chl@ and I

2012-08-28 16:03  chl

	* smtpd.h: remove encrypt.c prototypes leftovers

	  ok gilles@

2012-08-28 09:52  chl

	* encrypt.c: This file isn't and won't be used --> delete it.

	  ok gilles@

2012-08-27 13:59  chl

	* util.c: don't call ckdir() on each mktmpfile() call.

	  ok gilles@

2012-08-26 19:08  eric

	* queue_fsqueue.c: sane rewrite of the disk-queue traversal code,
	  and log bogus files found in there.  fixes issues reported by
	  many.

	  ok gilles@

2012-08-26 18:35  gilles

	* smtpd.c: correctly check compress_backend_lookup() to avoid a
	  NULL deref

2012-08-26 15:55  gilles

	* smtpd.conf.5: - document queue compression

2012-08-26 15:38  gilles

	* compress_backend.c, compress_gzip.c, compress_zlib.c, parse.y: -
	  use the same compression algorithm, gzip, for message file and
	  envelopes - rename compress_zlib.c to compress_gzip.c

	  with this commit it is possible to inspect a compressed queue
	  with gzcat :)

2012-08-26 13:52  gilles

	* compress_zlib.c, smtpd.c, smtpd.h, util.c: - define
	  ZLIB_BUFFER_SIZE instead of hardcoding 8192 - check gzdopen()
	  failure - call gzclose() whenever a failure occurs after
	  gzdopen() - simplify slightly some checks in compress/uncompress
	  - create PATH_TEMPORARY in /var/spool/smtpd, chmod 700, owned by
	  _smtpd - compress_zlib should use PATH_TEMPORARY instread of /tmp
	  as we're	 chrooted and this will otherwise lead to a fatal()

	  ok chl@

2012-08-26 13:21  gilles

	* compress_zlib.c, queue_backend.c: - remove unused variable -
	  comment variables unused at this time

2012-08-26 12:17  chl

	* compress_backend.c, compress_zlib.c, encrypt.c: Add missing RCS
	  Id.

	  Reminded by jasper@

	  ok gilles@ eric@

2012-08-26 01:35  chl

	* compress_backend.c, compress_zlib.c, encrypt.c, parse.y,
	  queue_backend.c, smtpd.c, smtpd.h, util.c: Add compress_backend,
	  allowing compression of messages and envelopes in the queue.	To
	  use it, just add "queue compress" in smtpd.conf. For now, only
	  zlib is used.

	  lots of feedback from eric@ and gilles@

	  ok eric@ gilles@

2012-08-26 00:52  eric

	* lka.c: lka must not start servicing requests until it has
	  received its full config from parent.  Disable imsg from other
	  processes until then.  Fix some races when the mta tries to
	  lookup an auth map too early, for example.

	  ok gilles@ chl@

2012-08-26 00:03  gilles

	* control.c, queue.c, scheduler.c, smtp.c, smtpd.h, util.c: - add
	  myself to the copyright in control.c, i've done quite a few
	  changes there in the last few years ;-) - get rid of availdesc():
	  getdtablecount() is so much more reliable - get rid of
	  env->sc_maxconn, we can be much smarter with getdtablecount()
	  and getdtablesize() - disable accept when we hit the control
	  process fd reserve - disable accept when we fail - enable accept
	  when we're back below the limit

	  this is not the full fd exhaustion diff, i'll merge changes from
	  relayd tomorrow, this was only required to get rid of the
	  env->sc_maxconn and availdesc() mess

	  "reads alright" eric@

2012-08-25 23:33  gilles

	* smtp.c, smtpd.h: - stop accepting clients if we hit our fd
	  reserve limit (or if we fail) - resume if we go below the fd
	  reserve

	  with feedback and ok eric@

2012-08-25 17:47  eric

	* scheduler_ramqueue.c: It's ok to try to rollback an update we
	  don't know about. It might happen if the message is aborted
	  before an envelope is sent to the scheduler.	In this case, just
	  ignore it.

	  ok gilles@ chl@

2012-08-25 17:39  gilles

	* smtpd.c, smtpd.h, user_pwd.c: - offline enqueue does not need to
	  use the user_backend API, it relies on       system users ... use
	  getpwuid() instead of ub->getbyuid() - since that was the only
	  caller, get rid of user_backend->getbyuid()

	  this is the first step towards removing the user_backend API and
	  making user lookups available through the maps API (yes, virtual
	  user support ;)

	  ok eric@, ok chl@

2012-08-25 13:38  gilles

	* smtpd.c, smtpd.h: - introduce TRACE_PROFILING - when smtpd starts
	  with -T profiling it will log_trace() some prof. info - when
	  smtpd starts with -T profstat, it will push them to stats API
	  with	   type STAT_TIMESPEC under key profiling.imsg.*

	  with this diff we can get live profiling of events with a very
	  minimal overhead :-)

	  ok chl@, ok eric@

2012-08-25 12:23  gilles

	* control.c, dns.c, mda.c, mta.c, queue.c, scheduler.c,
	  scheduler_ramqueue.c, smtp.c, smtp_session.c, smtpctl.c, smtpd.h,
	  stat_backend.c, stat_ramstat.c: - introduce struct stat_value -
	  statistics can now have a type (counter, timestamp, timeval,
	  timespec and	 possibly others in the future) - stat_increment()
	  / stat_decrement() now take an increment/decrement value   and
	  are at the moment only of type counter - stat_set() now takes a
	  stat_value - provide helpers to convert raw values to stat_value

	  ok eric@, ok chl@

	  while at it fix a rq_queue_dump() call using a bogus timestamp in
	  scheduler ramqueue.

2012-08-25 10:27  eric

	* mda.c: use duration_to_text() when logging delay, for
	  consistency.

	  ok gilles@ chl@

2012-08-25 10:17  eric

	* control.c: log pause/resume from the administrator to maillog.
	  suggested by Jan Stary.

	  ok gilles@ chl@

2012-08-24 23:24  eric

	* queue.c: log forced removal and expiration of envelopes to
	  maillog.  suggested by Jan Stary.

	  move queue loading notification to log_debug() while there.

	  ok gilles@

2012-08-24 21:51  eric

	* queue_backend.c: envelope_validate() don't take the evpid
	  anymore.

2012-08-24 20:46  eric

	* queue.c, scheduler.c, smtp_session.c: When an smtp session fails
	  and IMSG_QUEUE_REMOVE_MESSAGE is sent to the queue, also notify
	  the scheduler so it can rollback the current update.	Send only
	  the msgid while there.

	  ok gilles@

2012-08-24 20:26  eric

	* queue.c: Error out if queue_envelope_load() failed, rather than
	  sending crap to the mta/mda.

	  ok gilles@

2012-08-24 20:21  eric

	* scheduler.c: add stat counter for the number of envelopes
	  inflight.

	  ok gilles@

2012-08-24 15:21  chl

	* envelope.c, queue_backend.c, smtpd.h: In envelope ascii
	  dump/load: - remove loading of evpid.  - don't dump the msgid -
	  ignore msgid at load - remove now unused functions
	  ascii_{dump,load}_uint{32,64}_hex()

	  With inputs from eric@ and gilles@

	  ok gilles@ eric@

2012-08-24 15:16  chl

	* stat_ramstat.c: fix smtpctl show stats crash seen on -portable

	  reported by todd@

	  ok gilles@

2012-08-24 15:13  chl

	* queue_backend.c, queue_fsqueue.c, smtpd.h: Don't pass struct
	  envelope pointer in queue backend API, instead use envelope id
	  and an envelope ascii buffer.

	  ok eric@ gilles@

2012-08-24 14:29  eric

	* scheduler_backend.c, scheduler_ramqueue.c, smtpd.h: Remove the
	  rq_host and rq_batch structures from the ramqueue scheduler.	The
	  scheduler should only allow admin to schedule specific envelopes
	  by id, or msgid. More advanced scheduling (per
	  host/route/whatever) should be achieved using smtpctl schedule-id
	  and proper filtering on the queue, or using ad-hoc scheduler
	  backend and tools.

	  ok gilles@ chl@

2012-08-24 12:07  eric

	* queue_fsqueue.c: When creating an envelope, check if the message
	  is incoming or queued to decide the path for the envelope. Remove
	  the need to check the envelope type.

	  ok gilles@ chl@

2012-08-24 09:32  chl

	* scheduler_backend.c: fix assignment typo

	  ok eric@ gilles@

2012-08-23 18:10  todd

	* enqueue.c: enhance -v mode of 'sendmail' binary ok chl@

2012-08-23 15:16  todd

	* enqueue.c: fix multiple recipient support, from sunil on irc
	  tested by me, ok gilles@

2012-08-23 15:06  todd

	* enqueue.c: add -R to sendmail compat flags that do nothing (for
	  now) ok gilles@

2012-08-23 15:04  todd

	* enqueue.c: add -N for sendmail compat DSN support; unlimited for
	  now ok gilles@

2012-08-22 13:44  eric

	* mta.c: also need to compare backupname if set.

2012-08-22 00:22  jmc

	* smtpd.conf.5: tweak previous;

2012-08-21 22:19  eric

	* dns.c, envelope.c, lka_session.c, mta.c, mta_session.c, parse.y,
	  smtpd.conf.5, smtpd.h: Allow smtpd to work as a backup MX,
	  relaying only to MXs with higher priority in the DNS record. For
	  example:

	     accept for domain "foo.org" relay backup "mx3.foo.org"

	  will relay mails for "foo.org" using only hosts with higher
	  priority (i.e. lower value) than "mx3.foo.org", which is supposed
	  to be the current server.

	  If the specified backup MX is not found in the DNS record,
	  relaying works as normal.

	  ok gilles@

2012-08-21 22:07  eric

	* mta_session.c: Try to connect to the next host if an IO error
	  occurs before the mta is ready to send a mail.

	  ok gilles@

2012-08-21 17:14  eric

	* dns.c: Use TAILQ rather than array for mx list.

	  ok gilles@

2012-08-21 16:00  eric

	* dns.c: dns sessions don't use lookup. no need to store them in a
	  tree.

	  ok gilles@

2012-08-21 15:13  eric

	* mda.c, mta.c, mta_session.c, queue.c, scheduler.c, smtpd.c,
	  smtpd.h: Re-enable loop detection, but in mta and mda this time.

	  ok gilles@

2012-08-20 23:14  gilles

	* filter_api.h, smtpd.h: MAX_LINE_SIZE is supposed to define the
	  max length of a SMTP line ...  ... but SMTP_LINE_MAX *also*
	  defines it ... with a different value ...  and did I mention both
	  were too small anyway ?

	  quick fix until we kill one or the other: bump MAX_LINE_SIZE and
	  define SMTP_LINE_MAX to be MAX_LINE_SIZE. this fixes the
	  immediate issue while we decide which one bites the dust.

	  fixes the crashes and "line too long" errors spotted by todd@ ok
	  todd@, ok chl@

2012-08-20 20:18  eric

	* control.c, stat_backend.c: Do not send more bytes than necessary
	  with IMSG_STAT_*.  The INCREMENT and DECREMENT messages just
	  contain the key with the ending zero.  For IMSG_STAT_SET, the
	  value is found at the beginning of the message, and the rest is
	  the key.

	  ok gilles@

2012-08-20 20:15  gilles

	* smtpfilter.c: - fix the example filter to match current API

	  spotted by todd@ ;-)

2012-08-20 19:32  eric

	* stat_ramstat.c: start iterating from min, not root.

	  ok gilles@

2012-08-20 11:34  chl

	* scheduler.c: chroot scheduler in /var/empty instead of
	  /var/spool/smtpd now that eric@ fixed the initialization layer
	  violation

	  committing on behalf of gilles@

	  ok gilles@ chl@

2012-08-19 17:06  chl

	* scheduler.c, scheduler_ramqueue.c: fix smtpctl schedule-all and
	  schedule-id <msgid>

	  with help from eric@

	  ok eric@

2012-08-19 16:46  chl

	* scheduler_ramqueue.c: avoid crash when removing non-existing
	  envelope

	  from eric, ok eric@

	  cvs:
	  ----------------------------------------------------------------------

2012-08-19 16:16  chl

	* config.c, dns.c, enqueue.c, envelope.c, filter_api.c,
	  filter_api.h, lka_session.c, makemap.c, mda.c, mfa_session.c,
	  parse.y, parser.c, queue_backend.c, queue_fsqueue.c, smtp.c,
	  smtp_session.c, smtpctl.c, smtpd.c, smtpd.h, smtpfilter.c, ssl.c,
	  util.c: coding style: replace all occurences of u_int* with uint*

	  ok eric@

2012-08-19 14:56  eric

	* stats.c: kill dead file that must die.

	  ok chl@

2012-08-19 12:33  eric

	* scheduler_ramqueue.c: Let the scheduler return all schedulable
	  envelopes for the same message as a single batch. The route for
	  each envelope is sorted out by the mta properly, so they are
	  grouped as a single MAIL on each route.

	  ok gilles@ chl@

2012-08-19 12:32  chl

	* envelope.c, queue_fsqueue.c, smtpd.h: Kill
	  envelope_{dump,load}_file() and replace them with
	  envelope_{dump,load}_buffer().

	  with input from eric@

	  ok eric@

2012-08-19 12:28  eric

	* ioev.c: Add warnings on io errors to help diagnosis.

	  ok gilles@ chl@

2012-08-19 10:47  chl

	* smtpd.c: add missing IMSG_* in imsg_to_str()

	  ok eric@

2012-08-19 10:45  chl

	* smtpd.h: fix an issue where too long lines were not spot
	  properly.

	  issue reported by todd@

	  ok eric@

2012-08-18 22:52  eric

	* mta_session.c, queue.c, smtpd.h: zap struct mta_batch. Only pass
	  ids where needed.

	  ok gilles@

2012-08-18 20:18  gilles

	* control.c, dns.c, lka.c, queue.c, scheduler.c,
	  scheduler_ramqueue.c, smtp.c, smtp_session.c, smtpctl.c, smtpd.c,
	  smtpd.h, stat_backend.c, stat_ramstat.c, stats.c: - introduce
	  stat_backend, an API for pluggable statistic backends   >
	  statistics are no longer static structures in shared memory	>
	  statistics are only set, smtpd never uses them in its logic	>
	  each statistic is a key/value where key can be any (dynamic)
	  string - convert all uses of the former API to use the new one -
	  implement stat_ramstat that keeps non-persistent stats in ram
	  structure

	  ok eric@, ok chl@

2012-08-18 18:05  chl

	* smtp_session.c: Disallow empty domain/address sent after
	  HELO/EHLO command.

	  ok gilles@ eric@

2012-08-18 17:45  eric

	* mta.c, mta_session.c, smtpd.h: Major update of the mta internals.

	  Add a mta_route structure which describes a route through which
	  outgoing mails are to be sent.  This structure holds connection
	  parameters and limits.  When an envelope is received in a batch,
	  the route for it is looked up, and the envelope is added to the a
	  list of envelope to be sent for this message on that route: a
	  task.  When the batch is closed, each task is added to the list
	  of tasks for their respective route.

	  The routes are drained when new work can happen. The route will
	  create new mta sessions if necessary.  When a session is up and
	  ready, it picks the first pending task on the route if any.  In
	  the other case, it just closes the connection.

	  Errors on the connection are reported to the route, so that the
	  route could be flagged as broken.  Currently, three errors on a
	  an attempt to open a route is reported as a failure for all pen-
	  ding tasks.

	  ok gilles@

2012-08-18 17:39  eric

	* bounce.c: Limit the number of bounce sessions running at the same
	  time.  When committed, a bounce is put on a runnable list of
	  bounces. This list is drained to enqueue as much bounces as
	  possible within the limit.

	  This avoids DoS'ing the server when lots of bounces are enqueued
	  at startup.

	  While there, allow new envelopes to be added to a bounce until
	  the the very last moment (i.e. when the list of recipients is
	  written).

	  ok gilles@ chl@

2012-08-11 21:19  chl

	* scheduler_ramqueue.c: fix use after free

	  ok eric@

2012-08-11 21:18  chl

	* queue.c: Add missing header needed by PRI format string Add
	  missing header needed by time()

	  ok eric@

2012-08-11 14:43  eric

	* util.c: make sure generated id is never 0.

	  ok gilles@

2012-08-10 13:05  eric

	* mta_session.c, smtp_session.c, smtpd.h: Move mta and smtp
	  specific defines into their own files.  Some formatting cleanups
	  while there.

	  ok gilles@

2012-08-10 11:16  eric

	* control.c: code cleanup

	  ok gilles@

2012-08-09 21:16  eric

	* scheduler.c: Envelopes scheduled as "removed" are already deleted
	  from the scheduler.  Do not delete them twice.

2012-08-09 18:00  eric

	* bounce.c, queue.c, smtpd.h: Allow failure reports for different
	  recipients of the same message to be grouped into a single bounce
	  message.

	  The bounce structure keeps a list of envelopes.  For now, the
	  list is constructed by delaying the re-enqueuing of a bounce
	  envelope a bit, to wait for other bounces from the same message
	  to be part of the same report.

2012-08-09 14:19  eric

	* scheduler.c: dead prototype

2012-08-09 13:52  eric

	* bounce.c, smtpd.h: remove unused function and prototypes

2012-08-09 11:48  eric

	* bounce.c, lka_session.c, mda.c, mta_session.c, queue.c,
	  scheduler.c, smtp.c, smtpd.c, smtpd.h: Improve the message flows
	  to completely isolate operations on the queue backend within the
	  queue process.

	  The scheduler sends envelope ids to the queue process which loads
	  the envelope and forward the request to the agent responsible for
	  the delivery.  The result is sent by the agent to the queue which
	  updates the storage before notifying the scheduler.

	  Bounces are created and enqueued (from the client side) by the
	  queue process, rather than the scheduler.

	  ok gilles@

2012-08-08 19:33  eric

	* control.c, smtpctl.c, smtpd.h: remove useless defines

	  ok gilles@ chl@

2012-08-08 19:31  eric

	* dns.c, queue_fsqueue.c: cleanup some old debug traces

	  ok gilles@ chl@

2012-08-08 19:28  eric

	* smtpd.c: log received fd in log_imsg() if any

	  ok gilles@ chl@

2012-08-08 10:50  eric

	* bounce.c, queue.c, scheduler.c, scheduler_backend.c,
	  scheduler_ramqueue.c, smtpd.h, util.c: Improve the scheduler
	  backend API.

	  New envelopes are pushed into the scheduler through the insert()
	  commit() rollback() transactional interface functions.

	  Worklists are pulled from the scheduler through a single batch()
	  interface function, which returns a list of envelope ids and the
	  type of processing. Envelopes returned in this batch are said to
	  be "in-flight", as opposed to "pending". They are supposed to be
	  processed in some way, and either updated() or deleted() at some
	  point.

	  The schedule()/remove() functions are used to alter the internal
	  state of "pending" envelopes to make them schedulable.  The enve-
	  lopes will be part of a worklist on the next call to batch().

	  Rewrite the scheduler_ramqueue backend.

	  The initial queue loading in now done by the queue.

	  ok gilles@

2012-08-07 23:47  eric

	* smtpd.h, tree.c, util.c: Implement a set of tree_* functions for
	  storing arbitrary pointers in splay trees with uint64_t keys.
	  Also add x{m,c}alloc and xstrdup helpers.

	  ok gilles@

2012-08-07 22:36  eric

	* smtpctl.c: fix evpid parsing on 32bit archs

	  ok gilles@

2012-07-29 22:16  eric

	* mta_session.c: reset the session if no RCPT was accepted for the
	  batch.

	  ok gilles@

2012-07-29 19:33  eric

	* dns.c: fix bogus permfail when no MX is defined on a valid
	  domain.

	  ok gilles@

2012-07-29 19:21  gilles

	* aliases.c, lka_session.c, makemap.c, smtpd.h, util.c: - introduce
	  xlowercase() and allow lowercase() to fail gracefully - replace
	  all calls to lowercase() with calls to xlowercase() - in the
	  format string expansion, lowercase() all formats

	  we will have to reassess all calls to xlowercase() even though it
	  has never triggered as far as I know, we can probably gracefully
	  fail some of them.  right now we're just keeping former
	  behaviour.

	  this commit fixes issue reported by Hugo Osvaldo Barrera where a
	  %u format could lead to a delivery failure (ie:
	  GILLES@openbsd.org should be expanded to gilles, not GILLES ...
	  only for local deliveries).

	  ok chl@ on the idea, ok eric@ on the diff

2012-07-29 18:33  eric

	* lka_session.c, smtpd.h: get rid of A_INVALID.  little code
	  cleanup while here.

	  ok gilles@

2012-07-29 15:56  eric

	* mta.c, mta_session.c, smtpd.h: remove the session tree from the
	  global env and move it to mta_session.c, along with mta_relay and
	  mta_session definition.

	  ok gilles@

2012-07-28 14:06  chl

	* scheduler_backend.c: fix uninitialized field type in
	  scheduler_info struct.

	  found with valgrind on -portable.

	  ok gilles@

2012-07-19 00:04  eric

	* scheduler.c: make the scheduler less verbose by default.

	  suggested by Percy Piper.

	  ok gilles@

2012-07-16 08:00  jmc

	* smtpd.conf.5: sync the first example with the default conf file;
	  ok gilles

2012-07-16 07:56  jmc

	* smtpd.conf.5: don;t quote things unneccessarily; ok gilles

2012-07-15 20:42  gilles

	* smtpd.8: update examples:	   pkill sendmail ->
	  /etc/rc.d/sendmail stop	 smtpd -> /etc/rc.d/smtpd start

	  suggested by Seth Wright <seth@crosse.org>, ok chl@

2012-07-15 19:36  gilles

	* mta_session.c: when specifying a relay port that's not standart,
	  do not ntohs() the relay port as it will be done internally by
	  sa_set_port()

	  issue reported by Markus Bergkvist <markus@familjenbergkvist.net>

2012-07-15 19:04  gilles

	* smtpd.conf.5: fix example

	  submitted by Marcus Merighi <mcmer-openbsd@tor.at>

2012-07-12 15:01  eric

	* dnsdefs.h, dnsutil.h: remove unused files

	  ok gilles@

2012-07-12 10:51  chl

	* delivery_maildir.c, lka_session.c, smtpd.h, util.c: add support
	  for maildir tagging/folders.

	  ok gilles@ ok eric@ on previous versions of this patch

2012-07-12 00:16  chl

	* util.c: enable back = char in address localpart, that is
	  sometimes used by mailing lists.

	  ok gilles@ eric@

2012-07-11 19:20  chl

	* filter_api.h: Respect RFC 5321, section 4.5.3.1.: it reduces our
	  current max size for localpart, domainpart and text line.

	  The sizeof struct envelope goes from 8k to 6k.

	  ok gilles@ eric@

2012-07-11 19:20  chl

	* util.c: Don't respect RFC 5322, that allows some crazy characters
	  in email localpart, like !#$&'*/=?^`{|}~ ... and all the other
	  ones that can be double quoted, just refuse them.

	  ok gilles@ eric@

2012-07-11 01:21  chl

	* queue_backend.c, queue_fsqueue.c, smtpd.h: backout the: - remove
	  the /envelopes subdirectory, envelopes are at the same level than
	    the message file - kill PATH_ENVELOPES define

	  but keep the: - reduce the number of buckets from 0xfff to 0xff,
	  this avoid performances   of the queue to decrease when we start
	  having tons of buckets

	  ok eric@ gilles@

2012-07-10 18:11  chl

	* smtpd.h, util.c: accept address literal for the recipient domain.
	   while there, change valid_{local,domain}part() prototypes to use
	  const char *.

	  with input from gilles@ and eric@

	  ok gilles@ eric@

2012-07-10 13:13  gilles

	* scheduler.c, scheduler_ramqueue.c, smtpd.h: - simplify the
	  scheduler loop logic further, it is ridiculously simple now	and
	  I don't think we can do much better (at that level) :-p - always
	  break out of the handler after processing an envelope, this will
	   avoid a busy scheduler from not getting a chance to handle
	  SIGTERM/SIGINT   YES we can now ctrl-c a maaaaad scheduler !

	  ok eric@, ok chl@

2012-07-09 19:57  gilles

	* scheduler.c, smtpd.c, smtpd.h: - introduce
	  log_trace(TRACE_SCHEDULER, ...) - simplify a tiny tiny bit the
	  scheduler loop - no functional change (yet)

2012-07-09 14:16  eric

	* asr.c, asr.h, dname.c, dns.c, pack.c, print.c, res_random.c,
	  sockaddr.c, thread_private.h: move to the new resolver
	  implementation, with temporary glue to use the relevant files
	  from asr directly.

	  ok gilles@

2012-07-09 11:57  gilles

	* bounce.c, control.c, queue.c, runner.c, scheduler.c,
	  scheduler_backend.c, smtpctl.c, smtpd.c, smtpd.h: - runner is the
	  terminology we used back when we had runqueues, we no   longer
	  have them and runner is actually a scheduler so rename.  -
	  introduce scheduler_backend which does the same to scheduler than
	    queue_backend does to queue and map_backend does to maps -
	  remove all occurences of RUNNER and runner, replace them with
	  SCHEDULER   and scheduler

	  ok eric@, ok chl@

2012-07-09 10:08  gilles

	* queue_backend.c, queue_fsqueue.c, runner.c, smtpd.h: first step
	  of simplifying fsqueue:

	  - remove the /envelopes subdirectory, envelopes are at the same
	  level than   the message file - kill PATH_ENVELOPES define -
	  reduce the number of buckets from 0xfff to 0xff, this avoid
	  performances	 of the queue to decrease when we start having tons
	  of buckets

	  this diff introduces a change to the queue layout, you will want
	  to empty your queue before updating. more cleanup to come

	  ok eric@, ok chl@

2012-07-08 20:13  chl

	* queue.c, queue_backend.c, queue_fsqueue.c, runner.c, smtpd.c,
	  smtpd.h: remove enum queue_kind from queue_fsqueue.c.  incoming
	  messages are now always stored in /incoming, whatever the
	  queue_backend is.  remove QOP_FD_RW and fsqueue_message_fd_rw().
	  while there check return value of generated paths before calling
	  rmtree()

	  with advice from gilles@ and eric@

	  ok gilles@ eric@

2012-07-08 19:17  jmc

	* smtpd.conf.5: avoid line splitting; also, one an -> a

2012-07-08 17:48  gilles

	* parse.y, smtpd.conf.5, util.c: - plug text_to_relayhost() in
	  parse.y to support relay URLs.  - document the new URL syntax in
	  smtpd.conf.5 - replace starttls:// schema with tls://

	  Beware, "relay via" rules should now be expressed with a relay
	  URL:

		  accept [...] relay via "mx1.example.org" smtps port 465
	  becomes accept [...] relay via "smtps://mx1.example.org"

	  This will allow using mappings of relays with different protocols
	  and options.

	  Make sure to update your smtpd.conf if you relay via !

	  ok eric, ok chl

2012-07-08 15:42  gilles

	* auth_bsd.c: auth_bsd() is static

2012-07-02 19:00  eric

	* queue_backend.c, runner.c, scheduler.c, smtpctl.c, smtpd.c,
	  smtpd.h: Lookup queue and scheduler backends by name, rather than
	  enum.  Add a command-line option to specify the backend to use at
	  runtime.

	  ok gilles@

2012-07-02 15:22  eric

	* queue_fsqueue.c: make backend functions static.

	  ok gilles@

2012-07-02 12:32  eric

	* util.c: Sleeping here is definitely not what we want to do. Use a
	  cycling counter with some randomness to generate short-lived
	  unique ids.

	  ok gilles@

2012-06-20 22:45  eric

	* bounce.c, queue.c, queue_backend.c, queue_fsqueue.c, runner.c,
	  scheduler_ramqueue.c, smtpctl.c, smtpd.h: Finally get rid of the
	  queue_kind enum in the queue API. Keep that internally in fsqueue
	  backend for now, and let the fsqueue_message() and
	  fsqueue_envelope() dispatchers do the right thing.

	  Based on a diff by chl@

	  ok chl@ gilles@

2012-06-20 22:27  eric

	* runner.c: fix runner spinning on message loop.

	  ok gilles@

2012-06-18 12:21  chl

	* queue.c: fix potential use of uninitialized variable.

	  found with valgrind on -portable.

	  ok gilles@

2012-06-17 17:17  gilles

	* runner.c, scheduler.c, scheduler_ramqueue.c, smtpd.h: - introduce
	  struct scheduler_info and the scheduler_info() function to fill
	  a struct scheduler_info given a struct envelope - adapt the
	  scheduler API and the scheduler_ramqueue backend to use the new
	  struct scheduler_info instead of a struct envelope

	  idea discussed with eric@ and chl@, mechanical diff, no
	  functional change

2012-06-16 18:16  chl

	* filter.c, filter_api.c: rename filter.c --> filter_api.c (to be
	  consistent with upcoming changes)

	  prompted by and ok gilles@

2012-06-14 23:56  gilles

	* filter.c, filter.h, filter_api.c, filter_api.h, smtpd.h,
	  smtpfilter.c: - rename filter.h -> filter_api.h to be consistent
	  with upcoming changes

2012-06-14 22:59  gilles

	* sockaddr.c: - make sockaddr_as_fqdn() endian-safe

	  bug spotted by Jan Stary fix by eric@, committing this on his
	  behalf, ok gilles@

2012-06-08 13:34  chl

	* queue_backend.c: add missing header needed by time()

	  ok eric@ gilles@

2012-06-03 21:52  eric

	* envelope.c, queue_backend.c, smtpd.h: Do not store the envelope
	  id within the envelope, only the message id.	Make sure existing
	  envelopes can be properly loaded.

	  ok chl@ gilles@

2012-06-01 16:55  eric

	* smtp.c, smtpd.c: allow to pause some subsystems at startup.

	  ok gilles@ chl@

2012-06-01 13:42  eric

	* queue_backend.c, queue_fsqueue.c: on envelope creation, setup and
	  reset the relevant envelope fields in the wrapper function rather
	  than in individual backends.

	  ok gilles@

2012-06-01 12:46  chl

	* mta_session.c: use PRIu64 instead of llu in format string.

	  ok eric@

2012-06-01 12:40  chl

	* smtpd.h: remove unused fields

	  ok eric@

2012-06-01 11:24  eric

	* envelope.c, queue_fsqueue.c, smtpd.h: move envelope dump/load
	  functions to envelope.c

	  ok gilles@

2012-05-29 21:53  gilles

	* map.c, map_db.c, map_static.c, map_stdio.c, smtpd.h: - introduce
	  map_static.c as a backend to static maps in parse.y, this has
	  the benefit that we no longer have two code paths whenever we
	  deal with   maps, we can always use the backend mechanism.

	  I have not plugged this in yet, I'll do it in a later commit,
	  just get it out of my sandbox

2012-05-29 21:29  gilles

	* smtpd.h, util.c: - introduce text_to_relayhost() which converts
	  an url into a relayhost.    urls are of the form:
	  [schema://]host[:ip]

	  not used, yet other commits are following ;-)

2012-05-25 15:52  chl

	* ioev.c: remove unused variable

	  ok gilles@

2012-05-25 15:51  chl

	* delivery_filename.c, delivery_maildir.c, scheduler_ramqueue.c:
	  add missing header needed by time()

	  ok gilles@

2012-05-24 00:46  gilles

	* util.c: - introduce temp_inet_net_pton_ipv6() temporarily until
	  we have AF_INET6   support in inet_net_pton().

	  - in text_to_netaddr(), if we are handling an inet6 netmask AND
	  we have   inet_net_pton() that failed with EAFNOSUPPORT, THEN we
	  fallback to	this.

	  quick fix to unbreak setups that use inet6, a diff is floating to
	  have it supported at the right place.

2012-05-13 15:58  jmc

	* smtpd.conf.5: tweak previous; ok gilles

2012-05-13 15:57  jmc

	* makemap.8: replace tabs with spaces, to avoid markup problems; ok
	  gilles

2012-05-13 11:18  nicm

	* parser.c, smtpctl.c: Remove sizes entry so it doesn't appear as a
	  valid command in the "smtpctl show" output, and use errx rather
	  than err for the unknown message error.

	  ok gilles

2012-05-13 02:10  gilles

	* map.c, map_db.c, map_stdio.c, parse.y, ruleset.c, smtpd.h,
	  util.c: - cleanup parse.y by removing lots of code that should
	  not have been there,	 but in ruleset.c and util.c instead.

	  - introduce the new map_compare() map API call to allow iterating
	  over keys   and comparing them with provided key using provided
	  function. this allows   checking a partial key in a key set, very
	  useful for comparing an address   to a set of netmask.

	  - introduce new map kind K_NETADDR - implement K_NETADDR for
	  map_db and map_stdio - teach ruleset checking how to use the
	  map_compare() with K_NETADDR

	  we can now do the following:

	     map "srcaddr" source plain "/etc/mail/srcaddr.txt"

	     accept from map srcaddr for domain "openbsd.org" [...]

2012-05-12 23:49  gilles

	* makemap.8, parse.y, smtpd.conf.5, smtpd.h: - remove unused
	  sources S_EXT, S_DYN and S_EXT from enum map_src - continue
	  simplification of parse.y - remove "for network", if we ever need
	  it we can reimport, probably no   one knows of that undocumented
	  strange feature ;-) - change syntax for virtual domains
	  configuration:

		    accept for virtual vmap	  [...] <- wrong
		    accept for virtual map vmap   [...] <- right

	    the reason for this change is that we will soon implement relay
	  rules
	    through maps and that keeping that syntax would make it
	  inconsistent
	    with the other rules.

	  - update man pages for makemap and smtpd.conf to reflect changes

	  ok eric@, looks ok chl@

2012-05-12 20:41  gilles

	* parse.y, smtpd.conf.5, smtpd.h: - simplify a bit maps by removing
	  fields which are still unused years	after the initial ambitious
	  implementation: byebye map type & map flags

	  - simplify a bit parse.y by removing assignations to these
	  otherwise unused   fields

	  - remove the DNS map source, it may be a good idea, but we can
	  just add it	when we plan to implement it (if we do)

	  - make the { } options in map declaration, it's been annoying me
	  for a long   time now, this allows the following to work:

		 map "foobar" source plain "/etc/mail/foobar"

	  - update smtpd.conf.5 accordingly ;-)

2012-05-12 19:41  eric

	* mta_session.c, smtpd.h: Update the internal mta implementation so
	  that a session now has a list of messages to send to the remote
	  smtp server over the same connection. It's not currently used as
	  the scheduler/runner is not aware of this yet, and the imsg
	  protocol would need to be updated.

	  ok gilles@

2012-05-12 17:31  gilles

	* lka.c: - 'secret' -> 'credentials' in some logs - log_warn()
	  admin that a map that's needed by an envelope is no longer in
	  the configuration file

2012-05-12 17:29  gilles

	* lka.c, map_db.c, map_stdio.c, smtpd.h: - rename all occurences of
	  K_SECRET to K_CREDENTIALS - rename all occurences of struct
	  map_secret to map_credentials - do not fatal if the credentials
	  map has disappeared, instead make the   auth fail with a lookup
	  failure. the mail will be temporary failed so   it stays in queue
	  until admin fixes smtpd.conf, removes mail, or lets	it expires

2012-05-11 14:12  eric

	* mta.c, mta_session.c, smtpd.h: split the session logic off mta.c
	  into mta_session.c

	  ok gilles@

2012-05-11 10:15  eric

	* mta.c: set the status line and log envelope change in
	  mta_envelope_done().	get rid of mta_envelope_log() and makes the
	  code a little more straightforward.

	  ok gilles@

2012-05-08 13:52  eric

	* smtp_session.c: fix and re-enable connect notification to the
	  mfa.	filtering now occurs before setting up ssl on smtps
	  connections.

	  ok chl@ gilles@

2012-04-24 16:56  jmc

	* smtpd.conf.5: take a stab at documenting when arguments need
	  quoted, and valid macro characters;

	  prompted by a diff from robert peichaer org

	  thanks gilles and henning for feedback ok deraadt zinke

2012-04-21 14:45  gilles

	* aliases.c: i got the previous fix wrong, /etc/mail/aliases should
	  use SMTPD_USER privileges. while at it, also apply the same to
	  virtual domains.

2012-04-16 15:32  chl

	* parse.y: add missing header needed by str* and mem* functions

	  ok gilles@

2012-04-15 15:11  gilles

	* aliases.c: when using aliases, the *real* delivery user is not
	  set on expand nodes which prevents filters / filenames from
	  working from /etc/mail/aliases.  in aliases_get() during the rb
	  tree iteration, copy the username to the expand node.

	  diff from Christopher Zimmermann, thankkkks and sorry for the
	  delay

2012-04-15 14:12  chl

	* runner.c, scheduler_ramqueue.c, smtpctl.c: Remove dead
	  assignments and newly created unused variables.

	  Found by LLVM/Clang Static Analyzer.

	  ok gilles@

2012-04-14 15:31  eric

	* dns.c: improve readability

	  ok gilles@

2012-04-13 09:03  jmc

	* smtpd.conf.5: clarify "hostname"; from robert peichaer org ok
	  gilles

2012-04-07 16:11  jmc

	* smtpctl.8: grammar fix;

2012-03-30 18:48  chl

	* mta.c: increase timeout to 5m when connecting to a remote mail
	  server, as required by the RFC 5321 (section 4.5.3.2.1.)

	  ok gilles@

2012-03-27 14:53  eric

	* mta.c: Do not try STARTTLS if the server does not advertise
	  support for it (it apparently triggers very bizarre behaviour on
	  some servers). Also make sure we are not using AUTH over a clear
	  channel.

	  ok gilles@

2012-03-25 10:44  eric

	* mta.c: Do not fatal() when failing to connect to a relay.
	  Instead, drop the relay and try the next one.

	  ok gilles@

2012-03-19 21:38  gilles

	* runner.c: when a mailer daemon loop is detected, do not insert
	  new bounce in ramqueue

	  fixes an issue experienced by myself and Roman Kravchuck

	  ok eric@

2012-03-17 14:10  gilles

	* enqueue.c: llu -> PRIu64 in enqueue() to avoid warning in
	  portable

	  diff from Guillaume Leconte <guillaume.leconte@scality.com>

2012-03-14 00:07  gilles

	* scheduler_ramqueue.c: When moving back envelope from offload tree
	  to msg tree ... remove the envelope from offload tree not msg
	  tree, this corrupts the ramqueue in ways that I couldn't imagine
	  before wasting so many hours tracking it.

	  Fixes crash on my server under load, no crash after about 20K
	  mails processed from up to 150 concurrent sessions.

2012-03-08 00:22  gilles

	* aliases.c: - remove some map_find() calls that are no longer
	  needed, they are followed   by a map_lookup() call that does the
	  map_find() internally

	  spotted and diff by Mathieu <ptr.jetable@gmail.com>

2012-03-08 00:04  gilles

	* delivery_filename.c, delivery_maildir.c, delivery_mbox.c,
	  delivery_mda.c: - db.h not needed here, already removed by chl@
	  but I fscked up previous   commit ... remove again

2012-03-07 23:54  gilles

	* delivery_filename.c, delivery_maildir.c, delivery_mbox.c,
	  delivery_mda.c, queue_fsqueue.c, runner.c, scheduler_ramqueue.c,
	  smtpd.h: various reliability fixes:

	  - prevent queue_fsqueue from fatal() when it hits an ENOENT, it
	  can happen - change a bit the scheduler API to simplify it, fix
	  runner accordingly

	  - we can't remove msg/batch from ramqueue while envelope is
	  offloaded or	 it will cause a double, instead we add refcnt to
	  both msg/batch and   only free them when it hits 0

2012-02-09 08:47  jmc

	* smtpctl.8: correct argument names for "resume"; from Jan Stary ok
	  gilles

2012-02-04 18:11  chl

	* delivery_filename.c, delivery_maildir.c, delivery_mbox.c,
	  delivery_mda.c: remove unused header

	  ok gilles@

2012-02-02 17:52  eric

	* enqueue.c: Only use mime/line-split if the input message actually
	  contains a very long line.

	  ok gilles@ chl@

2012-02-01 21:30  eric

	* mta.c: When updating an envelope status, the update is immediatly
	  sent to the queue and the envelope discarded from the mta batch.
	  Also make sure that all condition leading to the MTA_DONE state
	  have properly set the status of all pending envelopes before. No
	  envelope should be left when entering that state.

	  Little cleanup while there: remove mta_message_status() and
	  rename remaining mta_message_*() to mta_envelope_* to avoid
	  confusion.

	  ok gilles@

2012-02-01 18:25  eric

	* iobuf.c: fix stupid mistake in buffer code

	  ok gilles@

2012-01-31 22:05  gilles

	* queue_fsqueue.c, runner.c, scheduler_ramqueue.c, smtp.c, smtpd.h:
	  fix an issue observed this week-end while flooding ajacoutot@ :

	  we keep track of available fd's to prevent scheduling of messages
	  if we know that we are going to fail. however, since the envelope
	  is not removed from the scheduler, it will be rescheduled right
	  away leading to a busy loop in the scheduler. we know flag the
	  mda/mta processes as BUSY and do not schedule envelopes that
	  target a BUSY process.

	  also, fix a potential bug that could lead to a use after free
	  when doing a batch/message/host traversal of schedulable
	  envelopes.

	  while at it fix misuse of env->sc_opts as env->sc_flags, was not
	  really causing any issue as the misuse was constant ...

2012-01-30 21:21  gilles

	* enqueue.c: do not encode headers, it breaks the resulting message

	  reported by eric@ and miod@ ok chl@

2012-01-30 11:02  chl

	* ioev.c, scheduler_ramqueue.c: Add missing header needed by PRI
	  format string

	  ok eric@ gilles@

2012-01-29 17:54  eric

	* queue_fsqueue.c: Remove message directories right away instead of
	  moving them to purge/.  Prevent hitting dir entry limits when
	  dealing with lots of mails.

	  ok gilles@

2012-01-29 17:51  eric

	* smtp_session.c: For some reason, all recipients are rejected if
	  the msg field is not initialized here. Fix it, but this requires
	  further investigation.

	  ok gilles@

2012-01-29 16:33  eric

	* smtp_session.c: disable connection filter hook for now. fixes
	  smtps.

	  ok gilles@

2012-01-29 12:37  eric

	* bounce.c, client.c, client.h, mta.c, smtp.c, smtp_session.c,
	  smtpd.h, ssl.c: Rewrite io code in smtp and mta using the
	  iobuf/ioev interface to have a better separation between io and
	  protocol logic.  As a side-effect, it fixes a couple of
	  long-standing issues in the io path, and hopefully add fresh ones
	  instead.  Kill client.c in the process.

	  ok gilles@

2012-01-29 11:42  eric

	* enqueue.c: fix warning

	  ok gilles@

2012-01-29 11:40  eric

	* queue_fsqueue.c: Quick fix to prevent two processes from using
	  the same temporary envelope file at the same time.

	  ok gilles@

2012-01-29 01:32  eric

	* iobuf.c, iobuf.h, ioev.c, ioev.h: Import generic network IO code.
	   The plan is to hide the boring details of IO operations such as
	  buffering or SSL, and provide a slightly nicer interface to the
	  protocol writer.

	  Not plugged to the rest of the code yet.

	  ok gilles@

2012-01-28 22:15  gilles

	* enqueue.c: ok, since we're already encoding =, let's just do full
	  quoted printable encoding, it's just a few additional lines ...

2012-01-28 19:13  gilles

	* enqueue.c: when enqueuing, check if a MUA did some MIME transfer
	  encoding, otherwise do quoted-printable transfer encoding so that
	  OpenSMTPD doesn't refuse to enqueue mails with long lines

	  ok eric@

2012-01-28 17:54  gilles

	* util.c: remove even more annoying debug logs

	  ok eric@

2012-01-28 17:52  gilles

	* smtpd.c: smtpd no longer needs to tell us that it forks a purge
	  process ever few seconds, we've seen it works and it has become
	  irritating :p

2012-01-28 17:50  gilles

	* runner.c, scheduler_ramqueue.c, smtpd.h: add optional display
	  handler to scheduler_backend, if not NULL the handler will be
	  called for each iteration of the runner

	  implement a display handler for scheduler_ramqueue to display the
	  entire ramqueue (hosttree, msgtree and linear queue) in log_debug

2012-01-28 16:11  eric

	* smtpd.h: remove useless state

	  ok gilles@

2012-01-28 12:33  gilles

	* ramqueue.c: no longer needed

2012-01-28 12:33  gilles

	* mta.c, queue.c, ramqueue.c, runner.c, scheduler.c,
	  scheduler_ramqueue.c, smtpctl.c, smtpd.h: - introduce the
	  scheduler_backend API - introduce the scheduler_ramqueue backend
	  - remove all occurences of ramqueue outside of the ramqueue
	  backend - teach runner how to use the new API

	  it is now possible to write custom schedulers !

	  ok eric@, ok chl@

2012-01-27 01:01  gilles

	* smtp_session.c: that log_debug is no longer needed

2012-01-27 00:59  gilles

	* smtp_session.c: in session_read_data() do NOT enable back read
	  event otherwise it will corrupt the session and cause a fatal.

	  reported by Roman Kravchuk, with this diff in OpenSMTPD survives
	  again the evil smtp_tester.py :-p

2012-01-27 00:18  gilles

	* smtp_session.c: Do not call session_respond() AND session_imsg()
	  from the same handler as they are exclusive. In the quit handler,
	  it will lead to a corrupted session as the F_QUIT is set and
	  session_respond() will kill the session before session_imsg() is
	  done.

	  For now, comment session_imsg(IMSG_MFA_QUIT) as we don't have
	  filters enabled anyways. The proper fix will be to have
	  session_imsg() called from the handler THEN upon return in smtp
	  process do the session_respond() call.

	  Fixes a segv reported by Roman Kravchuk. While at it, revert my
	  last commit in session_error() which was probably needed because
	  of this bug.

2012-01-26 13:31  eric

	* mta.c: Rewind the message fp before starting the SMTP dialog.  It
	  could have been read before during an aborted session on a
	  previous MX.

	  reported by Vianney Bouchaud <vianney@poolp.org>

	  ok gilles@

2012-01-24 13:20  eric

	* queue_fsqueue.c, smtpctl.c, smtpd.c, smtpd.h: Add a parameter to
	  the queue backend init() call to specify wether the call is
	  issued by smtpd or smtpctl.  In the latter case, only perform
	  sanity checks and do not touch directories.  A running server no
	  longer lose its "incoming/" directory each time smtpctl is
	  called...

	  ok gilles@

2012-01-21 20:50  gilles

	* smtp_session.c: in session_error(), do not call session_destroy()
	  when the F_WRITEONLY session flag is set, set F_QUIT instead.

	  fixes a "corrupted session" fatalx() that triggers when a client
	  disconnects after sending the end of message '.' but without
	  waiting for server to acknowledge.

	  reported by Roman Kravchuk <kravchuk.kp@gmail.com> a while ago,
	  could not reproduce until today.

2012-01-18 14:41  chl

	* filter.c, filter.h, mfa.c, mfa_session.c, smtp.c, smtp_session.c,
	  smtpd.c, smtpd.h: Add new filters callbacks for: - network events
	  (CONNECT/CLOSE) - commands (QUIT/RSET)

	  ok gilles@ eric@

2012-01-15 17:47  chl

	* envelope.c: Add ascii_{load,dump}_time() to properly deal with
	  time_t.

	  This fixes build warnings for portable smptd.

	  ok eric@ gilles@

2012-01-14 20:35  eric

	* queue_fsqueue.c: When moving a message to the corrupt/ directory,
	  give it an alternate name if there is already an entry with the
	  same name.

	  ok gilles@ chl@

2012-01-14 16:13  chl

	* queue_backend.c: Add missing header needed by PRI format string

	  ok gilles@ eric@

2012-01-14 13:56  eric

	* queue_fsqueue.c: Change fsqueue_*_path() to report success or
	  failure instead of fatal(). Make sure at init time that all paths
	  can contain envelopes, then these calls will never fail (provided
	  that buffers are always correctly sized, which is true
	  internally).

	  ok gilles@ chl@

2012-01-14 11:48  eric

	* queue_fsqueue.c: When creating a new message (in incoming/) make
	  sure that the msgid does not already exist in queue/ to prevent
	  possible collision on commit.

	  ok gilles@

2012-01-14 09:37  eric

	* queue_fsqueue.c: Add a fsqueue_message_path() function to build
	  path to message dir and use it where appropriate.

	  ok gilles@ chl@

2012-01-13 23:01  eric

	* queue_fsqueue.c: use a simpler way to get to the parent directory

	  ok gilles@

2012-01-13 22:58  eric

	* queue.c, queue_backend.c, queue_fsqueue.c, smtpd.h:
	  queue_message_purge() and queue_message_delete() are actually the
	  same thing. Remove queue_message_purge() in favor of
	  queue_message_delete and simplify fsqueue_message_delete()
	  implementation to move the message dir to purge/

	  ok gilles@

2012-01-13 15:27  eric

	* smtp.c, smtp_session.c, smtpd.h: remove the status field from
	  struct envelope, move it to the smtp session, and cleanup the
	  DS_* flags.

	  ok gilles@ chl@

2012-01-13 15:01  eric

	* mda.c, mta.c, queue.c, runner.c, smtpd.c, smtpd.h: Stop using
	  envelope->status to report delivery outcome to the runner/queue.
	  Instead, replace IMSG_QUEUE_MESSAGE_UPDATE with three messages:

	  - IMSG_QUEUE_DELIVERY_OK - IMSG_QUEUE_DELIVERY_TEMPFAIL -
	  IMSG_QUEUE_DELIVERY_PERMFAIL

	  1) it's less confusing as status is also used by smtp 2) it's
	  easier to see what happens just looking at imsg traces 3) it
	  makes the code path generally easier to follow 4) it's safer
	  because it enforces clear semantics and intent, whereas    the
	  status field is loosely defined and could carry bogus values.

	  ok gilles@ chl@

2012-01-13 11:53  chl

	* delivery.c: kill delivery_backend_lookup() proto as it is already
	  in smtpd.h

	  committed on behalf of gilles@

	  ok gilles@ chl@

2012-01-13 00:17  gilles

	* ramqueue.c, runner.c: we should never use
	  ramqueue_first_envelope() as a mean to determine the first
	  schedulable envelope otherwise we end up with nsched wrong ...

	  heck, let's kill ramqueue_first_envelope() and be done with it ;)

2012-01-12 23:59  eric

	* bounce.c, runner.c, smtpctl.c: The status field in the envelope
	  is confusing. Its only purpose is to notify the runner of what
	  happened with an envelope that has been scheduled.  It is not
	  part of the state of the envelope, and it is not even dumped.  So
	  it should only be set by mta/mda, checked by runner to decide
	  what to do with the envelope, and ignored everywhere else.

	  ok gilles@

2012-01-12 23:40  gilles

	* ramqueue.c, runner.c: the ramqueue filling at startup was busted,
	  it would load envelopes one by one instead of doing it
	  efficiently.

	  fix runner_timeout() and ramqueue_load() so that at startup smtpd
	  fills the ramqueue as long as there's no schedulable envelope in
	  it, interrupts filling if there is and resume once it's
	  scheduled.

	  bug spotted by Nathanael Rensel, bug fix by me w/ help from eric@
	  tested by eric@ and I

2012-01-12 23:00  gilles

	* ramqueue.c, runner.c: now that we no longer do a stateful
	  iteration on schedule queue, we need to make
	  ramqueue_next_envelope() aware of pauses in mda/mta. while at it
	  kill the pausing of bounces since they are reinjected in smtp and
	  end up paused by the mda/mta cases.

	  fixes an infinite loop observed by eric@ when pausing deliveries
	  and trying to interrupt smtpd while it attempts to fetch next
	  envelope :)

	  tested by eric@ and I, ok eric@

2012-01-12 21:59  eric

	* delivery_mbox.c, mda.c, smtpd.h: use mbox backend for mbox
	  delivery.

	  ok gilles@

2012-01-12 19:06  eric

	* control.c, parser.c, parser.h, smtp.c, smtpctl.c, smtpd.c,
	  smtpd.h: Remove dead code for config reloading for now. It is not
	  functionnal and confusing.

	  ok gilles@

2012-01-12 18:00  eric

	* queue_fsqueue.c: Add a fsqueue_envelope_dump_atomic() function
	  that writes an envelope to incoming/envelope.tmp before moving it
	  to its final destination.  This allows to make sure that
	  envelopes created directly in the queue (such as bounces) can't
	  let the queue in an inconsistent state if the program stops in
	  the middle of an envelope dump.

	  This also allow to simplify qwalk, since we don't put any
	  temporary contents anywhere in "walkable" queue dirs.

	  ok gilles@

2012-01-12 16:01  eric

	* envelope.c, smtpd.h, util.c: remove envelope_get_errormsg() and
	  move envelope_set_errormsg() to envelope.c

	  ok gilles@

2012-01-12 13:57  eric

	* smtp_session.c: alter line contents before writing it, rather
	  than after...

	  ok gilles@

2012-01-12 13:52  eric

	* smtpd.c: use absolute path as fts may chdir() during traversal.

	  ok gilles@

2012-01-12 00:25  eric

	* envelope.c: fix flags writing

	  ok gilles@

2012-01-11 23:55  gilles

	* ramqueue.c, smtpd.h: remove stateful iteration from ramqueue, if
	  we ever need to reintroduce it we'll do it, but it isn't used and
	  causes potential bugs

	  idea by Nathanael Rensel, diff by me, ok eric@

2012-01-11 23:40  gilles

	* ramqueue.c: in ramqueue_schedule(), do not reorder ramqueue
	  envelopes when forcing a reschedule of the entire queue as that
	  can lead to an infinite loop.

	  bug spotted and bugfix by Nathanael Rensen, thanks !

	  ok eric@

2012-01-11 23:25  gilles

	* queue_fsqueue_ascii.c: queue_fsqueue_ascii.c, you're not welcome
	  anymore

2012-01-11 23:24  gilles

	* envelope.c, queue_fsqueue.c, queue_fsqueue_ascii.c, smtpd.h:
	  implement an envelope_ascii API that's not tied to a specific
	  queue_backend simplify queue_fsqueue

2012-01-11 23:12  eric

	* mta.c: remove bogus call

	  ok gilles@

2012-01-11 22:22  eric

	* dns.c: Try to parse hostnames as IP addresses before resolving.
	  This allows relays to be given as IP address in the config file.

	  ok gilles@

2012-01-11 21:00  gilles

	* ssl.c: enable back CA support, just don't verify client ...

	  tested @ home

2012-01-11 18:46  eric

	* queue.c, queue_fsqueue.c, runner.c, smtpd.c, smtpd.h, util.c:
	  Simplify runner/queue by getting rid of Q_PURGE.  Instead, let
	  smtpd periodically clear the purge/ directory.  At init time, the
	  fsqueue backend simply moves the existing incoming/ dir in purge/
	  to discard aborted sessions.

	  ok gilles@ chl@

2012-01-11 18:28  eric

	* bounce.c: Finally remove the queue_message_update() function
	  which ended up being only called by bounce sessions, so most of
	  the code there was actually useless.	The envelope is directly
	  deleted or updated at the relevant place.

	  ok gilles@

2012-01-11 18:20  eric

	* dns.c: Improve error reporting.  Most errors during hostname
	  lookup are now correctly reported as temporary failures.

	  from Nathanael Rensen, tweaks by me.

2012-01-11 18:07  eric

	* smtpd.h: remove dead prototype

	  from Nathanael Rensen

	  ok gilles@

2012-01-11 18:05  eric

	* queue_fsqueue_ascii.c: fix typo

	  from Nathanael Rensen

	  ok gilles@

2011-12-27 18:13  eric

	* queue_fsqueue.c, smtpd.h: Q_BOUNCE is not used anymore

	  ok gilles@

2011-12-27 15:38  eric

	* bounce.c: Instead of using a separate "bounce" queue, create the
	  bounce envelope directly as an envelope of the bounced message,
	  just like "regular" envelopes.

	  ok gilles@

2011-12-23 13:10  eric

	* queue_backend.c, queue_fsqueue.c: On envelope creation, get the
	  message id in a saner way than the current confusing hack.

	  ok gilles@

2011-12-22 19:41  eric

	* queue_fsqueue.c: Add fqueue_envelope_path() function to create
	  path to envelopes.

	  ok chl@ gilles@

2011-12-21 22:10  chl

	* ssl.c: disable temporarily CA support, it prevents some remote
	  hosts from establishing a ssl session. will be investigated and
	  reenabled soon

	  asked and commited on behalf of gilles@

	  ok gilles@

2011-12-19 20:57  eric

	* queue_backend.c: fix/improve envelope_validate(): - return an
	  informative error string if the envelope is invalid.	- take the
	  envelope id as a parameter and make sure it matches.	- do not
	  expect the errorline to start with an SMTP response code,   as
	  this is not always the case: a temporary failure with mda would
	  cause the envelope to be marked as corrupted. Instead, just make
	  sure	 that all string fields are actual strings to prevent
	  overflows later.

	  ok gilles@ chl@

2011-12-18 23:55  chl

	* smtpd.h: Sync comments with latest cleanup changes

	  ok eric@

2011-12-18 23:53  chl

	* delivery_maildir.c: use #defined error()

	  ok eric@

2011-12-18 23:52  chl

	* smtpctl.c: Add missing header needed by PRI format string

	  ok eric@

2011-12-18 23:51  chl

	* util.c: remove unused header

	  ok eric@

2011-12-18 19:43  eric

	* mda.c, mta.c, util.c: - use envelope_set_errormsg() where
	  possible.  - make it use sizeof() rather than a hardcoded limit.

	  ok chl@ gilles@

2011-12-16 18:35  eric

	* queue_backend.c: simplify

	  ok chl@ gilles@

2011-12-15 20:51  eric

	* asr.c: better size check

2011-12-15 18:23  eric

	* enqueue.c: all leading dots must be duplicated.

	  ok gilles@

2011-12-15 00:08  eric

	* bounce.c, queue_shared.c, smtpd.h: finally kill queue_shared.c
	  and move what is left to bounce.c where it belongs.

	  ok gilles@

2011-12-14 23:28  eric

	* auth.c, auth_backend.c, auth_bsd.c, auth_pwd.c, smtpd.h: split
	  auth_backend.c for consistency

	  ok chl@ gilles@

2011-12-14 19:42  eric

	* queue_shared.c, smtpctl.c, smtpd.h: move show_queue() and related
	  functions from queue_shared.c to smtpctl.c

	  ok gilles@

2011-12-14 18:55  eric

	* queue_backend.c, queue_fsqueue.c, smtpd.h: make queue_fsqueue
	  backend consistent with the backend scheme.

	  ok gilles@

2011-12-14 18:51  eric

	* ssl.c: add missing prototype

	  ok gilles@

2011-12-14 00:55  gilles

	* smtp.c, smtpd.c, smtpd.conf.5, smtpd.h, ssl.c: *finally* make use
	  of certificate authority file if available !

	  bits from relayd, ok chl@, ok eric@

2011-12-14 00:00  eric

	* map_backend_db.c, map_backend_stdio.c, map_db.c, map_stdio.c:
	  rename files for consistency.

	  ok gilles@

2011-12-13 23:09  eric

	* map.c, map_backend.c: merge map_backend.c into map.c

	  ok gilles@

2011-12-13 23:04  eric

	* lka_session.c, smtpd.c, smtpd.h, user.c, user_backend.c,
	  user_pwd.c: split user_backend.c into user.c and user_pwd.c to be
	  consistent with the backend scheme. Also rename USER_GETPWNAM to
	  USER_PWD.

	  ok chl@ gilles@

2011-12-13 22:47  gilles

	* smtpd.conf.5: - man page had an example wrong

	  spotted and diff by Ptter J. Philipp <php@centroid.eu> a while
	  ago, thanks

2011-12-13 22:44  gilles

	* delivery.c, delivery_filename.c, delivery_maildir.c,
	  delivery_mbox.c, delivery_mda.c, lka_session.c, mda.c, parse.y,
	  queue_fsqueue_ascii.c, smtpd.c, smtpd.h: - introduce delivery
	  backend API (delivery.c) - move each delivery method to it's own
	  delivery backend - simplify smtpd.c accordingly - rename A_EXT ->
	  A_MDA since that's what we really do

	  ok eric@

2011-12-12 18:20  eric

	* smtp_session.c, smtpd.c, smtpd.h: add a session_enter_state()
	  function to change the state of an smtp session and allow those
	  state changes to be traced (add traces flags for upcoming changes
	  while there).

	  ok chl@ gilles@

2011-12-12 18:17  eric

	* smtp.c: display proc name rather than function name in debug
	  message

	  ok gilles@ chl@

2011-12-12 17:45  chl

	* lka_session.c, smtpd.h: remove comments about dead "struct
	  delivery"

	  "obvious ok" gilles@

2011-12-11 20:58  eric

	* client.c, smtpd.h, util.c: utility function for parsing and
	  validating SMTP response lines

	  ok gilles@

2011-12-11 18:02  eric

	* mta.c, smtpd.h: Make the mta code a bit more straightforward: -
	  fetch the ssl cert earlier on if needed - skip mta_pickup() when
	  handling the incoming fd

	  ok gilles@

2011-12-08 18:04  todd

	* parse.y: check for NULL ->ifa_addr, found the hard way by yours
	  truly on his phone ok chl@ & gilles@

2011-12-08 18:00  todd

	* lka_session.c, smtpd.c, smtpd.h, user_backend.c: rename struct
	  user to struct mta_user to avoid namespace conflict elsewhere ok
	  chl@ & gilles@

2011-11-28 23:13  chl

	* filter.c, filter.h, mfa_session.c: use STATUS_* filter codes,
	  instead of -1/0/1 hard coded values

	  ok gilles@

2011-11-28 21:29  chl

	* smtpd.h: fix STATE_COUNT count

	  ok eric@ gilles@

2011-11-23 14:48  chl

	* smtpctl.c: Fix Segmentation Fault when launching mailq(8)

	  Bug reported by Mark Patruck <mark at wrapped.cx>

	  ok gilles@ eric@

2011-11-21 19:57  eric

	* queue.c, queue_fsqueue.c, smtpd.h: get rid of the "enqueue/"
	  queue; use "incoming/" instead.

	  ok gilles@ chl@

2011-11-16 20:38  eric

	* runner.c, smtpd.h, util.c: remove unused functions

	  ok gilles@ chl@

2011-11-16 12:18  eric

	* smtpd.c, smtpd.h: Do not unlink an offline message until it has
	  been correctly enqueued.  While there, simplify the
	  offline_enqueue() function by doing all the sanity checks in the
	  forked process,  and remove all fatal(): on error, the offline
	  message is left untouched in the directory.  Also, get rid of the
	  path_starts_with() check since all paths to offline messages are
	  now constructed internally.

	  ok gilles@ chl@

2011-11-16 11:24  chl

	* filter.c, filter.h: fix obvious variable substitution mistake
	  change code type back to int8_t

	  ok gilles@

2011-11-16 00:22  gilles

	* filter.c, filter.h, filter_api.c: - change callback prototypes in
	  filter.c to allow stricter checks - introduce STATUS_WAITING,
	  filters will reroute async DNS queries through   LKA in a near
	  future - filter_api.c will contain our filter API (empty for now)
	  - Makefile to build libsmtpdfilter (not linked to the build,dev
	  stuff only)

2011-11-16 00:12  gilles

	* queue_fsqueue.c: wooooops defines missing from previous commit

2011-11-16 00:06  gilles

	* queue.c, queue_backend.c, queue_fsqueue.c, queue_shared.c,
	  ramqueue.c, runner.c, smtpctl.c, smtpd.h: Qwalk, our API to
	  linearly walk over the persistent queue, did not take the
	  queue_backend into account and assumed a filesystem with a
	  specific layout.

	  This commit does plenty of things:

	  - make qwalk an abstraction in the queue_backend API, and impose
	  queue   drivers to implement qwalk_open(), qwalk() and
	  qwalk_close();

	  - move previous qwalk_open(), qwalk() and qwalk_close() to the
	  fsqueue   driver since they were fsqueue specific ...

	  - make qwalk API work with msgid/evpid instead of pathnames since
	  we're   going to use the queue_backend API to load envelopes by
	  evpid anyway;

	  - makes smtpd use *solely* the queue_backend API when
	  manipulating the   queue. pathnames were removed from smtpd.h and
	  moved into the fsqueue   which means we can now store a queue
	  anywhere ... as long as we write   the ten functions or so
	  required for a queue driver ;-)

	  ok eric@, ok chl@

2011-11-14 20:23  chl

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpd.c, smtpd.h: when receiving an unexpected imsg, print its
	  name.

	  with help and ideas from eric@

	  ok eric@ gilles@

2011-11-14 17:54  eric

	* enqueue.c: make sure that the offline directory has the right
	  owner/perms before enqueueing offline mail.

	  ok gilles@

2011-11-14 12:53  eric

	* queue_fsqueue.c, smtpd.c, smtpd.h, util.c: The spool and offline
	  directories are backend-independent, so they must be created
	  early by smtpd, rather than in fsqueue.

	  ok gilles@ chl@

2011-11-10 18:37  chl

	* mfa.c: Use STDIN_FILENO instead of magic constant 0

	  ok gilles@

2011-11-07 12:14  eric

	* queue.c, ramqueue.c, runner.c, smtpd.c, smtpd.h: Let the smtpd
	  process handle the enqueueing of offline messages at startup,
	  rather than playing tricks with the runner. This will allow
	  further simplifications and improvements in the runner/queue.

	  ok gilles@

2011-11-06 17:57  eric

	* queue_fsqueue.c: No need to save/restore the batch_id since the
	  envelope is not dumped as a structure anymore.

	  ok chl@ gilles@

2011-11-06 17:55  eric

	* queue_fsqueue_ascii.c: Do not dump the envelope status. It's
	  useless and not reloaded anyway.

	  ok chl@ gilles@

2011-11-03 15:34  chl

	* client.c: since smtpctl doesn't need to be build along with
	  client.c, client.c doesn't need to be build with -DCLIENT_NO_SSL
	  anymore, so get rid of #ifdef CLIENT_NO_SSL

	  ok eric@

2011-11-02 13:01  eric

	* enqueue.c: simpler implementation of smtpctl local enqueuer that
	  does not need libevent.

	  ok gilles@

2011-10-27 16:32  chl

	* bounce.c, mda.c, mta.c, parse.y, queue_fsqueue.c,
	  queue_fsqueue_ascii.c, queue_shared.c, ramqueue.c, runner.c,
	  util.c: Use PRI{x,d}64 in format strings instead of %llx, %lld or
	  %qd to print {u_,}int64_t or time_t

	  While there, cast some time_t to int64_t

	  These will fix build warnings for portable smptd

	  ok gilles@ eric@

2011-10-27 06:23  guenther

	* ssl.c: Don't offer or negotiate SSLv2 and, since we don't do SSL
	  session caching, don't try to negotiate an RFC 4507-style session
	  ticket, as it would be useless and some (broken and
	  non-compliant) servers choke on TLS extension negotiation.

	  ok gilles@

2011-10-26 23:41  jmc

	* smtpctl.8: retain alphabetical order;

2011-10-26 22:47  gilles

	* control.c, parser.c, queue.c, runner.c, smtpctl.8, smtpctl.c,
	  smtpd.c, smtpd.h: - fix smtpctl pause/resume so the ramqueue
	  scheduling is done correctly - rename IMSG and smtpctl
	  pause/resume parameters - update man page

	  tested by me, ok chl@, eric@

2011-10-25 12:25  eric

	* lka_session.c: rewrite the sender user/domain as specified in the
	  manpage when matching a "relay... as" rule.

	  mikeb can now send mails.

	  ok gilles@ mikeb@

2011-10-23 20:37  jmc

	* smtpctl.8: retain alphabetical order;

2011-10-23 19:12  gilles

	* parser.c, parser.h, ramqueue.c, smtpctl.8, smtpctl.c: - smtpctl
	  schedule no longer works, instead, use 'smtpctl schedule-id <id>'
	  - introduce 'smtpctl schedule-all'

	  ok eric@

2011-10-23 19:09  eric

	* mta.c: plug leak

	  spotted by chl@

	  ok chl@

2011-10-23 17:36  eric

	* lka.c, mta.c, parse.y, queue_fsqueue_ascii.c, ramqueue.c,
	  smtpd.h: a few important fixes:

	  - use correct endianness when dumping/loading port - use the
	  right flag set when dumping/loading flags - keep and use the
	  authmap name when needed, rather than an id that   might change
	  when smtpd is restarted - dump/load the authmap name with the
	  envelope - remove the rule struct from rq_batch as only the relay
	  info is useful

	  ok gilles@

2011-10-23 15:08  eric

	* queue_fsqueue_ascii.c, smtpd.h: relay_as is not used anuwhere

	  ok gilles@

2011-10-23 15:03  gilles

	* queue_backend.c, queue_fsqueue.c, queue_fsqueue_ascii.c,
	  ramqueue.c, smtpd.h: introduce Q_CORRUPT and queue_backend
	  operation to move a message from schedule queue to corrupt queue
	  upon envelope loading failure.

	  tested by me, ok eric@

2011-10-23 12:54  chl

	* print.c: add missing format string

	  ok eric@ gilles@

2011-10-23 12:44  chl

	* ssl.c: add a missing DH_free() after
	  ssl_set_ephemeral_key_exchange().

	  tested by gilles@

	  ok gilles@ eric@

2011-10-23 11:30  gilles

	* bounce.c, lka.c, lka_session.c, mda.c, mfa.c, mfa_session.c,
	  mta.c, queue.c, queue_backend.c, queue_fsqueue.c,
	  queue_fsqueue_ascii.c, queue_shared.c, ramqueue.c, ruleset.c,
	  runner.c, smtp.c, smtp_session.c, smtpctl.c, smtpd.h, util.c:
	  fsqueue no longer stores envelopes by dumping the structure,
	  instead use a couple of load/dump functions to convert to and
	  from a human readable fmt.  while at it kill struct delivery and
	  merge back its fields to the envelope.

	  this basically means we shouldn't require users to flush their
	  queues every time we make a change to struct envelope.

	  work is not done, but we're at a better state than the binary
	  fsqueue so we'll improve it in-tree.

	  has been running on my own box for the last 12 hours or so ok
	  eric@, chl@

2011-10-22 20:03  eric

	* lka_session.c: correctly set relay when expanding envelopes

	  ok gilles@

2011-10-22 08:42  jmc

	* smtpd.8, smtpd.c: tweak previous;

2011-10-22 02:16  eric

	* log.c, log.h, smtpd.8, smtpd.c, smtpd.h: Add a log_trace() call
	  to toggle logging of specific debugging info in verbose mode, and
	  an associated -T command line option.  Use it for the imsg
	  traces.

	  Requested by gilles@ who doesn't like verbose to be too verbose.

	  ok gilles@ chl@

2011-10-13 12:54  eric

	* ssl.c: Drop a reference to the client SSL_CTX after SSL_new(), so
	  that it is correctly freed by SSL_free() at the end of the
	  session.

	  Plug a leak in the mta.

	  ok! gilles@

2011-10-11 19:57  gilles

	* aliases.c: fix parsing of :include: aliases

2011-10-10 23:06  gilles

	* makemap.8: document that virtual maps require a domain key

2011-10-09 20:39  eric

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpd.c, smtpd.h: show messages sent between processes in debug
	  mode

	  ok gilles@ chl@

2011-10-03 21:20  gilles

	* smtp_session.c: - fix a segv caused by a deep recursion
	  introduced with a recent quick-fix   and triggering if clients
	  sent a large number of DATA lines in one write

2011-10-03 19:57  gilles

	* smtpd.conf.5: clarify that network sources are to be specified in
	  CIDR notation

	  by David Walker, ok jmc@

2011-09-28 20:19  gilles

	* smtp_session.c: removing annoying debug log

2011-09-27 20:53  chl

	* mfa.c: check closefrom() return value use STDERR_FILENO instead
	  of hard coded value

	  ok gilles@

2011-09-19 15:10  chl

	* smtpd.h: Quick fix to avoid fatal() when we receive a line which
	  have a length of exactly 1024.

	  Better fix comming soon.

	  Committing on behalf of gilles@

2011-09-18 23:37  gilles

	* ramqueue.c, runner.c, smtpd.h: a single ramqueue message may be
	  shared by many ramqueue envelopes to be delivered to many
	  ramqueue hosts, therefore storing the rq_host pointer in the
	  rq_msg envelope is wrong and causes baaaaad behavior.

	  this commit fixes reliability issues in runner process,
	  experienced and reported by many

2011-09-12 22:47  gilles

	* filter.h, smtp_session.c, smtpd.h: - introduce filtermask in
	  struct smtpd - do not forward lines to mfa when FILTER_DATALINE
	  is not set in filtermask

	  prevents smtpd from handling mails slowly while I'm hacking on
	  filters support

2011-09-11 23:45  chl

	* log.c: remove unused header

	  ok gilles@

2011-09-01 22:17  gilles

	* smtp.c: move a log_debug() call to a less annoying spot so that
	  it does not get called for each single line of DATA exchanged
	  between smtp and mfa

2011-09-01 21:56  eric

	* bounce.c, control.c, dns.c, queue.c, ramqueue.c, runner.c,
	  smtp.c, smtp_session.c, smtpctl.c, smtpd.c, smtpd.h, ssl.c,
	  stats.c: Introduce a small set of functions to manage stat
	  counters in a simpler and hopefully saner way.

	  ok gilles@ chl@

2011-09-01 18:23  chl

	* parse.y: add missing header needed by bsearch()

	  ok gilles@

2011-09-01 11:42  chl

	* mfa_session.c, parse.y, smtp_session.c: - if no filter is setup,
	  do not overwrite the data line with filtmsg buffer - remove
	  annoying debug lines - disable back filters at smtpd.conf level

	  committing on behalf of gilles@

2011-08-31 20:56  gilles

	* filter.c, filter.h, mfa.c, mfa_session.c, parse.y, smtp.c,
	  smtp_session.c, smtpd.h: add support for per-line DATA callbacks,
	  this allows filters to take their decisions *while* the message
	  is being received by the client.

2011-08-30 19:06  chl

	* ramqueue.c, runner.c: Call free() into
	  ramqueue_remove_{batch,host,message,envelope}() instead of just
	  after the function call.

	  While there, also include stats counters into their respective
	  function.

	  ok gilles@

2011-08-30 13:19  chl

	* map_backend.c, map_backend_stdio.c: remove unused header

	  ok gilles@

2011-08-30 09:06  chl

	* smtpctl.c: fix format string

	  ok gilles@

2011-08-29 23:43  chl

	* enqueue.c, mda.c, mta.c, queue_shared.c, runner.c, smtpctl.c,
	  smtpd.c: cast all printed time_t to long long int, and change
	  format string accordingly.

	  ok gilles@

2011-08-29 22:34  chl

	* map_parser.c: remove unused file

	  ok gilles@

2011-08-29 20:49  chl

	* enqueue.c, mda.c, mta.c, queue.c, runner.c, smtp.c: add missing
	  header needed by signal()

	  ok gilles@

2011-08-29 00:20  chl

	* queue_shared.c: Clear bounce envelope structure, to avoid wrong
	  use when bounce_record_message() returns 0.

	  Initial report from me, tweak from gilles@

	  ok gilles@

2011-08-28 02:03  gilles

	* mfa_session.c: fix pasto in strlcpy() truncation test

2011-08-28 00:37  gilles

	* smtpd.h: typo

2011-08-28 00:32  gilles

	* filter.c, filter.h, lka_session.c, mfa.c, mfa_session.c, parse.y,
	  smtp.c, smtp_session.c, smtpd.c, smtpd.h, smtpfilter.c: initial
	  support for a session-time filtering API

	  currently only HELO/EHLO, MAIL, RCPT are supported, however ... I
	  have voluntarily disabled filters at smtpd.conf level so people
	  don't play with it until the API has stabilized a bit

	  discussed with several people in private, no one opposed the
	  feature

2011-08-26 16:39  chl

	* enqueue.c, mda.c, mta.c, queue_fsqueue.c, ramqueue.c, runner.c,
	  smtpctl.c, smtpd.c: add missing header needed by time()

	  ok gilles@

2011-08-17 22:54  gilles

	* ramqueue.c, runner.c: - plug a memory leak in
	  runner_remove_envelope() - cosmetic change

2011-08-17 22:35  gilles

	* ramqueue.c, runner.c, smtpd.h: move ramqueue_host pointer from
	  ramqueue_envelope to ramqueue_message.  this allows us to save
	  one pointer from each envelope stored in ram while still allowing
	  O(1) host lookups by ramqueue_envelope.

2011-08-17 22:04  gilles

	* ramqueue.c, runner.c, smtpctl.8, smtpd.h: - teach smtpctl remove
	  about the new ramqueue structure - bonus #1: O(log n) removal of
	  envelopes - bonus #2: removing all envelopes that have the same
	  msgid works again

2011-08-17 21:36  gilles

	* ramqueue.c, smtpd.h: - introduce
	  ramqueue_lookup_{host,message,envelope} to perform lookups in
	  the new ramqueue structure - introduce ramqueue_reschedule() and
	  ramqueue_reschedule_envelope() which	 to reschedule a message or
	  a specific envelope.

	  O(n) ->  O(log n)  \o/

2011-08-16 21:12  gilles

	* parser.c, parser.h, smtpctl.c: smtpctl show sizes, displays the
	  size of queue-related structures, useful for developers to see
	  the impact of structure changes on memory and disk usage, and
	  useful for users to better understand 'smtpctl show stats'

2011-08-16 21:02  gilles

	* ramqueue.c, runner.c, smtpctl.c, smtpd.h: add a host-tree and an
	  envelope-tree in the ramqueue, they will be used to improve
	  scheduling and general ramqueue operations. unused yet

2011-07-22 08:33  jmc

	* smtpctl.8: tweak previous;

2011-07-22 01:29  gilles

	* control.c, parser.c, parser.h, ramqueue.c, runner.c, smtpctl.8,
	  smtpctl.c, smtpd.h: - update smtpctl.8 to reflect reality - bring
	  back 'smtpctl schedule' and 'smtpctl remove' to life

	  Things you should know:

	  The ramqueue data structure is not finished yet and lacks an
	  envelope tree for evpid lookups. I wanted to wait until I'm done
	  but too many people are affected by not being able to reschedule
	  envelopes, this is a quick fix.

	  So right now there's an O(rrible) complexity as both commands
	  will perform a (possibly aborted) queue scan leading to O(n). I
	  will make that O(log n) soon.

	  Also, smtpctl remove no longer supports removing an entire
	  message, I will fix that very soon too.

2011-07-20 12:22  eric

	* dns.c, mta.c, smtpd.h: Fix reporting of permanent/temporary
	  failures for MX lookups.  Simplify code a bit while there.

	  ok gilles@

2011-07-19 15:15  eric

	* mta.c: Re-add the test which is needed in the case where the
	  session fails early (in MX or SECRET) and the data file is not
	  yet opened.

	  ok gilles@

2011-07-19 15:07  eric

	* ramqueue.c: fix retry delay calculation

	  ok gilles@

2011-07-13 18:14  eric

	* asr.c: print more information in request state traces

	  ok gilles@

2011-07-13 17:08  eric

	* asr.c, pack.c, print.c: fix indentation in switch

	  ok gilles@

2011-07-13 16:52  eric

	* asr.h: do not make these values look like they are flags.

	  ok gilles@

2011-07-06 22:56  gilles

	* client.c, mta.c: fix that fscking "fgetln(): bad file descriptor"
	  bug experienced by many.

	  long story short: datafp is reused by the possibly multiple
	  client sessions of a MTA session. fclosing it in client_close()
	  will cause the file pointer to be invalidated as soon as we fail
	  the primary MX and attempt the second.

	  bug introduced while trying to fix a leak causing a crash for a
	  user, now smtpd will unconditionnally fclose() in MTA_DONE and if
	  a leak still exists then we should track why the mta session
	  doesnt reach MTA_DONE.

2011-07-04 21:44  gilles

	* lka_session.c: %u in format string is rcpt.user not rcpt.domain

	  From Tim van der Molen <tbvdm@xs4all.nl>

2011-07-03 19:48  nicm

	* dns.c: imsg.h requires sys/queue.h and sys/uio.h.

	  ok eric

2011-06-23 22:35  sthen

	* smtpd.conf.5: Use a common text explaining how the various
	  configuration parsers using the standard OpenBSD-style parse.y
	  handle continuing lines with backslashes, paying particular
	  attention to how comments are handled (which can cause nasty
	  side-effects if you're not expecting it).

	  Most wording from jmc@, with suggestions from fgsch@, marc@,
	  Richard Toohey, patrick keshishian and Florian Obser, ok jmc@.

2011-06-10 13:30  jmc

	* smtpd.conf.5: tweak previous;

2011-06-09 19:41  gilles

	* lka_session.c, parse.y, smtpd.conf.5, smtpd.h: 'relay as' and
	  'relay via as' rules allow smtpd to rewrite the user part, the
	  domain part or the entire address of the sender at the SMTP
	  sesssion level. this is not masquerade but allows smtpd to
	  communicate with hosts that do a check of SMTP sender fqdn.

	  sent to tech@, a couple 'no regression' feedbacks

2011-06-09 05:53  deraadt

	* enqueue.c: spacing

2011-05-23 00:03  jmc

	* smtpd.conf.5: tweak previous;

2011-05-22 23:03  gilles

	* parse.y, smtpd.conf.5: teach smtpd how to listen on an interface
	  group so that we can do:     listen on egress        listen on
	  wlan

	  idea unvoluntarily suggested by Mikolaj Kucharski a few weeks
	  ago, unslacked after theo suggested it again.

2011-05-22 15:38  gilles

	* smtpd.conf.5: fix examples so they stay do not use external
	  utilities and do not refer to external domains

	  prompted by deraadt@

2011-05-21 21:57  gilles

	* smtpd.h: remove unused commented structure

2011-05-21 20:43  gilles

	* map.c, map_backend.c, map_backend_db.c, map_backend_stdio.c,
	  smtpd.h: until now the map_backend API was not really useful for
	  backends that are not key/val stores. refactored a bit so that
	  smtpd can really take advantage of backends. preliminary work for
	  ldap support ;-)

	  no functionnal change

2011-05-21 20:39  gilles

	* mta.c, ruleset.c: remove annoying log_debug()

2011-05-21 20:11  gilles

	* lka_session.c: these log_debug()s should not have been committed
	  :)

2011-05-21 20:04  gilles

	* lka_session.c: when a user add himself to his own ~/.forward, the
	  delivery method was not reset by ruleset matching and since it
	  was cleared upon entering lka_session_resolve_node(), it would
	  trigger a fatal().

2011-05-21 19:01  gilles

	* ssl.c: make the "no DH parameters" warning a log_info()

2011-05-21 18:58  gilles

	* parse.y: "for all" does not necessary apply to relay rules, so do
	  not forget to look for an alias map.

	  fixes "accept from all for all alias myaliases deliver to mbox"
	  and makes thib "super happy"

	  ok thib@

2011-05-17 20:54  gilles

	* lka_session.c, smtpd.c, smtpd.h, user_backend.c, util.c:
	  introduce new user_backend API for smtpd to lookup the users it
	  wants to deliver mail to. the only backend supported for now is
	  USER_GETPWNAM and it is not yet possible to switch to an
	  alternate backend.

	  yes this means that we're very close from smtpd being able to
	  handle fully virtual accounts for both incoming and outgoing
	  messages.

2011-05-17 18:42  gilles

	* auth_backend.c, authenticate.c, smtpd.c, smtpd.h: smtpd now uses
	  an auth_backend API to authenticate users that are allowed to
	  send mail so they do not necessarily need a local system account.

	  two backends are provided by default, bsd_auth(3) and
	  getpwnam(3), however smtpd will only select bsd_auth(3) for the
	  moment and not provide a way to chose any other backend (that's
	  on purpose ;p).

	  bye bye authenticate() !

2011-05-17 18:32  gilles

	* ssl.c: somehow a previous sync with relayd missed one line...  if
	  a ssl_connect() call needs to retry because of SSL_WANT_READ or
	  SSL_WANT_WRITE, set the proper event flag instead of keeping the
	  default one which is both read and write.

2011-05-16 23:52  gilles

	* lka_session.c: remove useless assignation

2011-05-16 23:42  gilles

	* lka_session.c: when a C_VDOM recipient expands to a local user,
	  envelope expansion will reprocess the envelope. since the
	  original condition we matched is still C_VDOM, it triggers an
	  expansion loop causing recipient to be rejected.

	  this *should* fix the issue experienced by armani@, it does on my
	  laptop.

2011-05-16 23:27  jasper

	* makemap.c: plug leak in make_aliases()

	  with/ok gilles@

2011-05-16 23:05  gilles

	* aliases.c, bounce.c, forward.c, lka.c, lka_session.c, mda.c,
	  mfa.c, mta.c, queue.c, queue_backend.c, queue_fsqueue.c,
	  queue_shared.c, ramqueue.c, ruleset.c, runner.c, smtp.c,
	  smtp_session.c, smtpd.c, smtpd.h, util.c: murder struct path and
	  make sure smtpd uses simpler structures that do not bring a
	  shitload of unnecessary information everywhere. this required
	  many parts of smtpd to be refactored and more specifically
	  envelope expansion.

	  in the process lots of code got simplified, and the envelope
	  expansion code has been isolated to lka_session.c with some
	  longstanding bugs fixed.

	  Diff has been tested by many with no major regression reported.
	  armani@ spotted a bug in a setup where a domain is listed a both
	  primary and virtual, I will fix that in-tree as it's becoming
	  painful to maintain this diff out.

2011-05-16 12:57  blambert

	* sockaddr.c: Print IPv6 addresses in hex, not decimal; from Tim
	  van der Molen

	  committing on behalf of gilles@

2011-05-14 13:08  gilles

	* ssl.c: more clang warnings fixed

2011-05-14 13:06  gilles

	* client.c: char -> u_char

2011-05-14 13:04  gilles

	* util.c: int * -> socklen_t * in getsockopt() call

2011-05-10 19:04  gilles

	* queue_shared.c: fix an off-by-one that made smtpd skip an
	  "invalid" bucket that was actually valid.

	  bugfix tested by todd@

2011-05-09 11:36  eric

	* makemap.c: fix segfault in newaliases after global env move.

	  spotted by Christopher Zimmermann ok gilles@

2011-05-07 15:16  eric

	* asr.c: there is already a function to set the portno.

	  ok gilles@

2011-05-06 21:21  eric

	* dns.c, smtpd.h: move dns session specific structs and prototypes
	  out of smtpd.h.

	  ok gilles@

2011-05-04 22:45  eric

	* smtpd.c: When enqueueing offline mail, use a wait list to keep
	  the number of forked processes below a reasonnable limit.  This
	  prevents smtpd from fork-bombing on startup when there are lots
	  of mails in the offline queue.

	  ok todd@ gilles@

2011-05-01 14:57  eric

	* aliases.c, bounce.c, config.c, control.c, dns.c, lka.c,
	  makemap.c, map.c, mda.c, mfa.c, mta.c, parse.y, queue.c,
	  queue_backend.c, queue_fsqueue.c, queue_shared.c, ramqueue.c,
	  ruleset.c, runner.c, smtp.c, smtp_session.c, smtpctl.c, smtpd.c,
	  smtpd.h, ssl.c: the smtpd env is meant to be global, so do not
	  pass it all around.

	  discussed with and ok gilles@

2011-04-17 15:36  gilles

	* aliases.c, config.c, dns.c, enqueue.c, lka.c, makemap.c,
	  map_backend.c, map_parser.c, mda.c, mfa.c, mta.c, queue.c,
	  ramqueue.c, ruleset.c, runner.c, smtp.c, smtp_session.c,
	  smtpctl.c, smtpd.c, smtpd.h, util.c: cleanups, cosmethic changes,
	  functions that should be static are now static no functionnal
	  change

2011-04-17 14:46  gilles

	* smtpd.h: remove unused IMSG_ defines

2011-04-17 13:39  gilles

	* bounce.c, lka.c, mda.c, mfa.c, mta.c, queue.c, queue_backend.c,
	  queue_fsqueue.c, queue_shared.c, ramqueue.c, runner.c, smtp.c,
	  smtpd.h, util.c: a structure describing an envelope should be
	  called struct envelope, not struct message ...

2011-04-17 13:16  gilles

	* queue.c, smtpd.h: no functionnal change, getting rid of
	  deprecated prototypes

2011-04-16 11:13  gilles

	* queue_fsqueue.c: I accidentally changed group ownership of
	  fsqueue to _smtpd, it used to be owned by wheel. This commit
	  reverts to original behavior

2011-04-15 21:03  gilles

	* runner.c, smtpd.h: whenever an envelope is reinserted into the
	  ramqueue after a trip to mda or mta, call runner_reset_events()
	  so runner starts reprocessing ramqueue

2011-04-15 19:30  gilles

	* queue_shared.c: teach walk_queue() about the new disk-queue
	  layout

2011-04-15 19:21  gilles

	* util.c: valid_message_id() and valid_message_uid() are no longer
	  needed

2011-04-15 19:01  gilles

	* bounce.c, mda.c, mfa.c, mta.c, queue.c, queue_backend.c,
	  queue_fsqueue.c, queue_shared.c, ramqueue.c, runner.c, smtp.c,
	  smtp_session.c, smtpd.h, util.c: kill message_id and message_uid

	  smtpd now has an evpid associated to each delivery message, the
	  evpid is an u_int64_t where the upper 32 bits are the msgid, and
	  the 32 bits are the envelope unique identifier for that message.
	  this results in lots of space saved in both disk-based and
	  ram-based queues, but also simplifies a lot of code.

	  change has been stressed on my desktop, and has ran on my MX for
	  the entire afternoon without a regression.

2011-04-15 13:39  gilles

	* runner.c: temporarily add fsqueue_hash() prototype until runner
	  is fully converted to queue_backend API

2011-04-15 01:29  gilles

	* queue_fsqueue.c, queue_shared.c, runner.c: bye bye queue_hash()
	  you can now rest in peace.

2011-04-15 01:26  gilles

	* queue.c, queue_backend.c, queue_fsqueue.c, queue_shared.c,
	  smtpd.h: - implement missing operations for fsqueue:
	  fsqueue_envelope_create(), fsqueue_message_purge() - kill
	  deprecated functions in queue_shared.c

	  At this point fsqueue backend is almost complete, all that is
	  left to do is to move the qwalk() API inside the queue_backend
	  API, then make sure smtpd is no longer calling anything queue
	  related directly.

2011-04-15 00:46  gilles

	* smtpd.c, smtpd.h: no functionnal change

2011-04-15 00:36  gilles

	* queue.c, queue_fsqueue.c, queue_shared.c, ramqueue.c, runner.c,
	  smtpd.h: - implement fsqueue_message_create() and
	  fsqueue_message_commit() - change a few prototypes to allow
	  bounce messages to use the	  queue_backend API until it gets
	  merged in - kill functions of the queue API that have been
	  deprecated

2011-04-15 00:00  gilles

	* queue_shared.c: remove annoying log_debug()

2011-04-14 23:53  gilles

	* bounce.c, queue.c, queue_fsqueue.c, queue_shared.c, runner.c:
	  fsqueue now provides fsqueue_message_fd_r() and
	  fsqueue_message_fd_rw() to obtain a read{-only,/write} descriptor
	  to the message file.

	  make sure smtpd uses the new API everywhere it needs a fd, and
	  kill the many functions that were used until now.

2011-04-14 23:14  gilles

	* queue_fsqueue.c: fsqueue_message_delete() should use
	  fsqueue_hash() not queue_hash() as i'm going to kill it with lots
	  of violence soon.

2011-04-14 22:11  gilles

	* bounce.c, queue_backend.c, queue_fsqueue.c, queue_shared.c,
	  ramqueue.c, runner.c, smtpd.c, smtpd.h: fsqueue queue backend
	  will implement a filesystem queue: - fsqueue->setup() performs
	  the queue initialization; - fsqueue->message() controls messages;
	  - fsqueue->envelope() controls envelopes;

	  This commit brings the following to fsbackend: fsqueue_setup(),
	  fsqueue_message_delete(), fsqueue_envelope_load(),
	  fsqueue_envelope_update(), fsqueue_envelope_delete().

	  It also makes smtpd use the queue_backend API for these
	  operations.

2011-04-14 19:06  gilles

	* queue_backend.c, queue_fsqueue.c, smtpd.c, smtpd.h: smtpd makes
	  too many assumptions about the structure and layout of its
	  disk-based queue, it makes it near impossible to make changes to
	  it without editing twenty files... how am i going to implement
	  mongodb support ? :-)

	  bring a new queue_backend API which hides the details of the
	  disk-based queue to smtpd. it is not "plugged in" yet and I'm
	  filling the holes.

2011-04-13 22:53  gilles

	* control.c, mta.c, parser.c, parser.h, queue.c, queue_shared.c,
	  ramqueue.c, runner.c, smtpctl.c, smtpd.c, smtpd.h: following an
	  idea from jacekm@, smtpd now uses a ram-queue instead of doing a
	  continuous walk on the disk-queue. the implementation differs
	  from what jacekm@ commited (and I backed out) a while ago in that
	  it uses a queue and a host tree required for upcoming features.

	  code will be improved in tree, it requires changes to be done in
	  queue and bounce API, I just wanted to commit a working version
	  first ...

	  tested by todd@ and I

2011-04-02 18:40  eric

	* dns.c, smtpctl.c, smtpd.h: add stat counters for the lookup agent

	  ok gilles@

2011-04-02 17:59  eric

	* dname.c: saner and hopefully correct implementation for
	  dname_from_fqdn().  especially, make sure to write the ending
	  '\0'.

	  ok gilles@

2011-03-31 12:40  eric

	* dns.c: cleanup and simplification following the asr update.

	  - use a specific dispatch function for each type of query - make
	  the host handler work on a list of hosts by default (single host
	   queries are just a particular case) and use that to resolve the
	  MX list - various other code cleanup - remove unused headers -
	  remove orphaned prototypes - update copyright

	  ok gilles@

2011-03-29 22:43  eric

	* dns.c, smtpd.h, util.c: remove unused code now that reverse
	  lookups are done through asr.

	  ok gilles@

2011-03-29 10:14  eric

	* dns.c: make use the cname query interface from asr for reverse
	  lookups

	  ok gilles@

2011-03-27 20:08  eric

	* dns.c: add a function to factorize resetting of dnssession
	  events.

	  ok gilles@

2011-03-27 19:39  eric

	* asr.c, asr.h, dname.c, dnsdefs.h, dnsutil.h, pack.c, print.c,
	  sockaddr.c: add missing CVS markers and update copyright year.

	  ok gilles@

2011-03-26 22:41  eric

	* smtpd.h: missing file in previous commit

	  ok gilles@

2011-03-26 22:40  eric

	* dns.c: Fix the MX lookup process:

	  - the MX records were not always properly inserted into the
	  sorted   array, which led to some MX being silently dropped.	-
	  if an MX address could not be resolved, mail delivery would fail,
	    even though other valid MX exist for that domain. Now only
	  report   the failure if no server address can be found at all.

	  grrrreeat gilles@

2011-03-26 18:43  gilles

	* mta.c: check that we actually have a stdio stream opened for the
	  message before trying to close it in a mta session. in case of
	  DNS errors; this pointer will remain NULL and cause a segv in
	  MTA_DONE state.

2011-03-26 15:38  eric

	* asr.c, asr.h, dns.c: Tweak the asr API to make things a bit
	  smoother on the user side.  Then asr_run() call now returns
	  ASR_COND when a condition on a FD is expected.  The exact
	  condition (readable or writeable) is specified in the asr_result
	  structure, along with the fd and timeout.

	  ok gilles@

2011-03-26 12:04  eric

	* asr.c, asr.h, dname.c, dnsutil.h, sockaddr.c: Merge a reverse
	  lookup query implementation into asr.  Not used by the rest of
	  smtpd for now.

	  ok gilles@

2011-03-26 11:59  gilles

	* bounce.c, client.c, client.h, enqueue.c, mta.c, smtpd.h: have the
	  client API receive a stdio stream rather than a fd to the message
	  fd. this shifts responsibility for the fclose to the caller,
	  prevents a memory leak and makes everyone happy.

	  diff by Jared Yanovich, thanks !

2011-03-26 11:54  eric

	* dns.c, smtpd.h: use an index for iterating into the mx list.

	  ok gilles@

2011-03-23 21:58  eric

	* asr.c: The asr structure must always be freed in asr_done(). This
	  is a left-over from a former implementation where asr_ctx didn't
	  exist and struct asr was refcounted.

	  spotted by Jared Yanovich.

	  ok gilles@

2011-03-23 21:38  eric

	* dns.c: Simplify resolver initialization. This is done only once
	  since resolv.conf reloading is handled automatically by asr.

	  ok gilles@

2011-03-23 21:27  eric

	* asr.c: remove unused states in enum

	  ok gilles@

2011-03-21 14:06  gilles

	* bounce.c: do not close msgfd in bounce_session(), it is closed by
	  client_close()

2011-03-21 14:02  gilles

	* mta.c: - reset smtp_client pointer to NULL after client_close() -
	  datafd is closed in client_close()

2011-03-21 10:21  gilles

	* client.c, queue_shared.c: fix a memory leak in client.c and
	  properly close envelope in queue_shared.c

	  diff from Jared Yanovich, sent to bugs@ by Jonny Mosco

2011-03-15 20:24  gilles

	* smtp.c, smtpd.c, smtpd.conf.5, smtpd.h, ssl.c: let smtpd use
	  user-provided Diffie-Hellman parameters for ephemeral key
	  exchange. if no DH parameters are found, fallback to builtin
	  parameters as was done until now.

	  since we now accept user-provided DH parameters, make smtpd more
	  strict and fatal() if the parameters are bogus.

	  bump the key size of the DH parameters from 512bits to 1024bits,
	  it might be bumped further after some more research.

	  thanks to mikeb@ for his suggestions

	  diff ok mikeb@ , man ok jmc@

2011-03-09 21:59  gilles

	* smtp.c, smtpctl.c, smtpd.h: smtpctl show stats displays
	  inet4/inet6 repartition for incoming sessions

2011-03-09 01:35  todd

	* dns.c: make similar code .. more similar ok gilles@

	  previous commit should have read:

	  when copying 'struct sockaddr' data, use sa_len not sizeof(struct
	  sockaddr_in) this fixes truncation of IPv6 addresses in the mail
	  delivery path ok gilles@

2011-03-09 01:34  todd

	* dns.c: [no log message]

2011-03-03 09:09  gilles

	* util.c: fix ss_to_text() and ss_to_ptr() so IP addresses are
	  logged correctly on big-endian machines ...

	  spotted and tested by landry@ (and I)

2010-12-19 12:24  gilles

	* dns.c: If MX lookup fails, fallback to using the host itself.
	  This has always been the behavior but I introduced a regression
	  when switching to ASR.

	  bug reported by jmc@, bugfix tested by jmc@ and I

2010-12-18 23:25  jmc

	* smtpd.conf.5: document "certificate" a little better; based on a
	  diff from Sunil Nimmagadda

	  ok gilles

2010-12-12 23:29  jsg

	* dns.c: use memcpy instead of a cast/deref dance that was reading
	  past the end of the buffer.

	  tested by and ok gilles@

2010-12-04 00:29  eric

	* asr.c: be more strict on socket lifetime (fixes a fd leak).

	  ok gilles@

2010-11-29 16:25  gilles

	* asr.c, asr.h, dname.c, dns.c, dnsdefs.h, dnsutil.h, lka.c, mta.c,
	  pack.c, print.c, res_random.c, smtpd.h, sockaddr.c, util.c:
	  replace the fork-based-non-blocking-resolver-hack by shiny async
	  resolver written by eric@. it is still experimental but still
	  better than what we had earlier so ... we'll improve in tree :)

	  diff by me with *lots* of help from eric@, tested by todd and I
	  (and a few people out there)

2010-11-28 16:32  gilles

	* queue.c: remove unused functions

2010-11-28 15:35  gilles

	* enqueue.c, expand.c, forward.c, lka.c, makemap.c, map.c,
	  map_backend.c, map_parser.c, mda.c, mfa.c, mta.c, parse.y,
	  parser.c, queue.c, queue_shared.c, ruleset.c, runner.c, smtp.c,
	  smtp_session.c, smtpctl.c, smtpd.c: remove all unused headers

2010-11-28 15:02  gilles

	* aliases.c, authenticate.c, dns.c: remove unused headers

2010-11-28 14:56  gilles

	* aliases.c, authenticate.c, bounce.c, client.c, client.h,
	  config.c, control.c, dns.c, enqueue.c, expand.c, forward.c,
	  lka.c, log.c, log.h, makemap.c, map.c, map_backend.c,
	  map_parser.c, mda.c, mfa.c, mta.c, parse.y, parser.c, queue.c,
	  queue_shared.c, ruleset.c, runner.c, smtp.c, smtp_session.c,
	  smtpctl.c, smtpd.c, smtpd.h, ssl.c, util.c: a bit of .h cleanups,
	  no functionnal change

2010-11-25 00:27  todd

	* control.c, runner.c, smtp.c, smtpctl.c, smtpd.h, ssl.c: add
	  *maxactive stats "ok and no need to keep them for yourself"
	  gilles@

2010-11-24 12:09  gilles

	* aliases.c: we can't accept up to MAX_LOCALPART_SIZE (128 bytes)
	  for the user part of an email address at session time, then
	  fatal() when we can't fit it in a LOGIN_NAME_MAX (32 bytes)
	  buffer in the aliases expansion code.

	  fix aliases functions to use a buffer that's appropriate,
	  preventing a fatal() from being triggered in aliases_exist(). bug
	  experienced by and reported by Jason Houx, if you're testing
	  smtpd you want to update.

2010-11-15 15:57  jsing

	* queue_shared.c: Do not fatal if an attempt to open a message
	  envelope results in ENOENT.  This prevents smtpd from exiting if
	  'smtpctl schedule' is run with a valid but non-existent message
	  ID. Whilst here make ENOSPC fatal since this should not happen.

	  ok gilles@

2010-10-29 11:16  gilles

	* lka.c, mfa.c, mta.c, parse.y, smtpd.conf.5, smtpd.h: smtpd no
	  longer knows a map called "secrets" which holds credentials for
	  authenticated relaying. one can create many maps holding
	  credentials and name them however he/she wants, just like any
	  other map.

	  teach smtpd how to select a credentials map at the rule-level
	  allowing a setup to relay through the same MX with different
	  credentials depending on the source.

	  smtpd.conf.5 updated to reflect changes with help from jmc@

2010-10-28 23:15  gilles

	* mfa.c, parse.y, queue_shared.c, runner.c, smtpd.conf.5, smtpd.h:
	  teach smtpd how to handle per-rule delays for message expiry,
	  this allows some rules to have a longer expiry delay than the
	  default:

		  accept for [...] relay expire 8d  # will stay 8 days in
	  queue

	  I added the man page bits so I don't forget but I need to reword
	  it a bit

2010-10-18 15:28  sthen

	* smtpctl.8: Mention that commands may be abbreviated, as done in
	  other *ctl manuals.  ok gilles@

2010-10-18 15:28  sthen

	* parse.y: Missing semicolons to appease yyextract, ok gilles@

2010-10-10 00:12  gilles

	* queue_shared.c, runner.c: these need to be re-added too

2010-10-10 00:11  gilles

	* bounce.c: missing from previous commit

2010-10-10 00:07  gilles

	* queue_backend.c, queue_backend.h: no longer compiled, i will
	  reintroduce them later, lots of stuff needs to be done before we
	  can write queue backends anyway ...

2010-10-10 00:05  gilles

	* aliases.c, client.c, control.c, enqueue.c, expand.c, lka.c,
	  log.c, map.c, mda.c, mfa.c, mta.c, parse.y, parser.c, parser.h,
	  queue.c, smtp.c, smtp_session.c, smtpctl.8, smtpctl.c, smtpd.c,
	  smtpd.h, ssl.c, util.c: backout the "new" queue code commited 4
	  months ago. it has many good ideas, is way more optimized than
	  what we had earlier and there's definitely stuff we want to keep,
	  however it is early optimization that doesn't account for many
	  features and makes them hard (if not impossible) to write without
	  ugly workarounds that ruin the purpose of the optimizations.

	  the backout goes to 30 May's right before the commit and catches
	  up on all the non-queue related commits that happened since then.

	  i'll work on reintroducing the ideas from this queue when the
	  basic features we expect from a MTA are implemented.

	  suggested on tech@ about a week ago, no objections, several
	  "please make smtpd move forward" mails from hackers and tech
	  readers.

2010-09-20 11:01  gilles

	* lka.c, parse.y, queue.c, smtpd.h: - fix a regression caused by
	  latest commit (long story made short: do not	 attempt to expand
	  the local delivery buffer when relaying mail, it was	 kind of ok
	  before but no longer is) - use the same buffer for local
	  deliveries to files and commands

	  tested by jmc@ and I

2010-09-13 00:38  gilles

	* lka.c: oga@ spotted a bug in lka_expand() which caused it to
	  miscalculate the length of its expand buffer. this commit
	  introduces a new lka_expand() that has been simplified, that
	  fixes the bug and that is more robust.  callers of lka_expand()
	  can now determine that it has failed and throw the recipient at
	  session time.

	  lka_expand() rewrite by oga@, changes around it by me, tested on
	  a few different setups but no feedback from tech@ so ... let me
	  know if it's breaking something for you

2010-09-09 01:32  gilles

	* parse.y: when I fixed the ruleset matching on rules that had more
	  than one condition by expanding them to several rules, I forgot
	  to copy the tags to the expanded rules. this commit unbreaks
	  matching rules by tag.

	  documentation follows shortly ...

	  spotted and fixed by me a while ago, jacekm@ timeout

2010-09-08 23:40  gilles

	* smtpd.conf.5: had planned to commit the change after oga@ and I
	  are done with little changes to lka_expand() but it looks like a
	  bit more work :-)

2010-09-08 15:46  gilles

	* lka.c: add support for sender expansion in smtpd.conf:

		  %U for sender localpart
		  %D for sender domainpart

	  diff sent to tech@ by Gregory Edigarov <greg@bestnet.kharkov.ua>,
	  timeout by jacekm@, ok by me

2010-09-08 15:32  gilles

	* dns.c: we do dns resolutions in a separate process because we
	  don't have an async resolver. if we run scarce on resources and
	  we cannot fork a separate dns process or we cannot socketpair()
	  tell the caller that we have a temporary failure rather than
	  issueing a fatal(). message will stay in queue and be rescheduled
	  later ...

	  bug reported and bugfix tested by Sacha El Masry
	  <lists@devilray.eu>

2010-09-04 23:31  tedu

	* parser.c, parser.h: move some things around to make intentions
	  clear.  not really a functional change.  ok claudio

2010-09-03 13:22  jmc

	* makemap.8, newaliases.8: add an EXIT STATUS section for
	  /usr/sbin;

2010-08-03 20:42  henning

	* parse.y: fix linecount bug with comments spanning multiple lines
	  problem reported with the obvious fix for bgpd by Sebastian
	  Benoit <benoit-lists at fb12.de>, also PR 6432 applied to all the
	  others by yours truly. ok theo isn't it amazing how far this
	  parser (and more) spread?

2010-08-02 13:49  jacekm

	* enqueue.c: Ignore SIGPIPE, the delivery of which prevented
	  /usr/sbin/sendmail from relaying the server diagnostic back to
	  the user (eg. "500 Line too long").

2010-07-24 00:23  gilles

	* queue.c: smtpd should NOT fatal when it permanently fails a
	  bounce delivery as this can be a normal situation and will allow
	  a local/authenticated user to trigger the fatal on purpose ...

	  ignore permanently failed bounce deliveries since there's not
	  much smtpd can do anyway, that's what the previous queue code
	  did.

	  experienced and reported by pirofti@

2010-06-29 05:47  deraadt

	* dns.c: force the dns buffers to be aligned using a union, until
	  the retarded "misalign strings on the stack" bug in gcc4 is fixed
	  (even when that is fixed this idiom is safer and quite common) ok
	  jacekm

2010-06-10 21:34  chl

	* parse.y, queue.c, smtpd.conf.5, smtpd.h: allow configure queue
	  expiry

	  with help from jacekm@

	  ok gilles@ jacekm@

2010-06-09 22:00  zinovik

	* smtpd.h: switch `ref' data type to int, because it is tested for
	  negative value in queue_mem_content_unref() function

	  ok jacekm@, gilles@

2010-06-04 13:15  jacekm

	* lka.c: Use correct imsg type in error reply.

2010-06-02 21:16  chl

	* control.c, dns.c, enqueue.c, lka.c, mda.c, mfa.c, mta.c, queue.c,
	  smtp.c, smtpd.c: check event_dispatch() return value

	  ok jacekm@

2010-06-02 01:06  jacekm

	* aliases.c, bounce.c, client.c, control.c, enqueue.c, expand.c,
	  lka.c, log.c, map.c, mda.c, mfa.c, mta.c, parse.y, parser.c,
	  parser.h, queue.c, queue_backend.c, queue_backend.h,
	  queue_shared.c, runner.c, smtp.c, smtp_session.c, smtpctl.8,
	  smtpctl.c, smtpd.c, smtpd.h, ssl.c, util.c: new queue, again;
	  gcc2 compile tested by deraadt

2010-06-01 21:47  jacekm

	* aliases.c, bounce.c, client.c, control.c, enqueue.c, expand.c,
	  lka.c, log.c, map.c, mda.c, mfa.c, mta.c, parse.y, parser.c,
	  parser.h, queue.c, queue_backend.c, queue_backend.h,
	  queue_shared.c, runner.c, smtp.c, smtp_session.c, smtpctl.8,
	  smtpctl.c, smtpd.c, smtpd.h, ssl.c, util.c: New queue doesn't
	  compile on gcc2, back out.  Spotted by deraadt@

2010-06-01 16:21  jacekm

	* queue.c, smtpd.h: Schedule newly arrived mail immediately, ie.
	  place it at the beginning of the list of next items to try, or
	  near the beginning if the schedule contains expired mail, which
	  is of highest priority.

2010-06-01 13:37  jacekm

	* smtpctl.c: Include birth time in smtpctl show queue raw.

2010-06-01 13:27  jacekm

	* queue.c: It's lasttry + 1 because I initially thought passing
	  identical birth and lasttry args to queue_retry would make it
	  return birth leading looped scheduling, but that's not true so
	  drop the "+ 1".

2010-06-01 13:05  jacekm

	* mta.c: Better errors.

2010-06-01 04:19  jacekm

	* lka.c: Don't interpret garbage on stack; problem seemingly
	  exposed by my queue rewrite.	Proper fix after gilles wakes up.

2010-06-01 04:08  jacekm

	* lka.c: Fix one case of not sending smtp session id on error.

2010-06-01 01:50  jacekm

	* smtpd.h: oops

2010-06-01 01:38  jacekm

	* aliases.c, bounce.c, client.c, control.c, enqueue.c, expand.c,
	  lka.c, log.c, map.c, mda.c, mfa.c, mta.c, parse.y, parser.c,
	  parser.h, queue.c, queue_backend.c, queue_backend.h,
	  queue_shared.c, runner.c, smtp.c, smtp_session.c, smtpctl.8,
	  smtpctl.c, smtpd.c, smtpd.h, ssl.c, util.c: Rewrite entire queue
	  code.

	  Major goals:

	  1) Fix bad performance caused by the runner process doing full
	  queue read in 1s intervals.  My Soekris can now happily accept
	  >50 msg/s while having multi-thousand queue; before, one hundred
	  queue would bring the system to its knees.

	  2) Introduce Qmail-like scheduler that doesn't write as much to
	  the disk so that it needs less code for servicing error
	  conditions, which in some places can be tricky to get right.

	  3) Introduce separation between the scheduler and the backend;
	  these two queue aspects shouldn't be too tied too each other.
	  This means that eg. storing queue in SQL requires rewrite of just
	  queue_backend.c.

	  4) Make on-disk queue format architecture independent, and more
	  easily extensible, to reduce number of flag days in the future.

	  Minor goals:

	  ENOSPC no longer prevents delivery attempts, fixed session
	  limiting for relayed mail, improved batching of "relay via"
	  mails, human-readable mailq output, "show queue raw" command,
	  clearer logging, sending of single bounce about multiple
	  recipients, exact delay= computation, zero delay between
	  deliveries while within session limit (currently 1s delay between
	  re-scheduling is enforced), mta no longer requests content fd,
	  corrected session limit for bounce submissions, tiny <100B queue
	  files instead of multi-KB, detect loops before accepting mail,
	  reduce traffic on imsg channels by killing enormous struct
	  submit_status.

2010-06-01 00:25  chl

	* smtpd.c, smtpd.h: imsg_compose_event() return value was never
	  checked. Make it fatal() if needed.

	  ok jacekm@ gilles@

2010-05-27 17:36  gilles

	* config.c, lka.c, parse.y, ruleset.c, smtpd.c, smtpd.h: when a
	  rule has two conditions (ie: accept for { domain foo, domain bar
	  } ) expand to two rules each having its own condition rather than
	  one rule with a tail queue of conditions. this simplifies code a
	  bit and removes a couple hacks.

	  basic testing by oga and me

2010-05-27 13:18  gilles

	* smtpd.h: struct opt as not used anywhere else, kill it, we can
	  reintroduce it later if we feel a need for it

2010-05-27 13:17  gilles

	* config.c, parse.y, smtpd.h: kill struct opt from struct rule, we
	  don't use it, we don't need it

2010-05-26 18:44  nicm

	* buffer.c, client.c, imsg.c, imsg.h: Move imsg into libutil and
	  add a man page.

	  Minor bump for libutil.

	  Previous versions of this diff and man page looked at by various
	  people.

	  "you should just commit" deraadt

2010-05-26 15:56  nicm

	* buffer.c, client.c, client.h, imsg.c, imsg.h, mda.c, ssl.c:
	  Rename some imsg bits to make namespace collisions less likely
	  buf to ibuf, buf_read to ibuf_read, READ_BUF_SIZE to
	  IBUF_READ_SIZE.

	  ok henning gilles claudio jacekm deraadt

2010-05-24 21:44  jmc

	* smtpd.8: now that we can handle >9 args, put "-D name=value" on
	  one line: it's a bit more readable, and fixes a spacing bug we
	  had in smtpd.8;

2010-05-23 20:44  jacekm

	* smtpd.c: When executing external mda, call dup2, closefrom, and
	  chdir before setresuid because after dropping superuser
	  privileges the process cannot be trusted to call these.

	  Thanks to oga@, kettenis@, and nicm@ for confirming my paranoia.

2010-05-21 10:45  jacekm

	* smtpd.c: Use _exit(2) in mda helper child process.

2010-05-20 20:35  gilles

	* smtpd.c: S_ISREG() should be called on st.st_mode not st.st_flags

2010-05-19 22:57  gilles

	* aliases.c, bounce.c, expand.c, log.c, parse.y, runner.c, smtp.c,
	  ssl.c: cleanup-only commit, removes unrequired includes, no
	  functionnal change

2010-05-09 17:24  gilles

	* smtpd.c: in recent change, an assignation was removed which would
	  cause a bogus pointer deref if we actually went through this code
	  path (reload, does not work yet so it is disabled)

2010-04-27 23:04  nicm

	* imsg.h: imsg.h does not need sys/tree.h.

	  ok eric

2010-04-27 16:39  jmc

	* smtpd.conf.5: sort the map types;

2010-04-27 12:17  gilles

	* map_backend.c, parse.y, smtpd.conf.5, smtpd.h: this commit
	  enables "plain" as a backend for maps (that means aliases,
	  virtual AND secrets), adds a description in smtpd.conf.5 and
	  removes a mention to special map "aliases" which was removed a
	  while ago.

	  to use plain maps:  map "myaliases" { source plain
	  "/etc/mail/aliases" }

	  code diff was okayd a while ago by jacekm@

2010-04-27 11:49  gilles

	* aliases.c, expand.c, forward.c, lka.c, makemap.c, map.c,
	  map_parser.c, smtpd.h: initial work at fixing aliases support: -
	  kill struct alias, struct expandnode is used instead - introduce
	  map_parse_alias() and map_parse_virtual() - aliases and virtual
	  code no longer assume db(3) but use the map API which   lets them
	  become backend agnostic AND value-checked. this actually makes
	  the code simpler by removing all values parsing from aliases.c -
	  rename K_SECRETS -> K_SECRET, K_ALIASES -> K_ALIAS for
	  consistency the   enum has singular names.  - aliases, virtual
	  and forward now work with an expandtree and deal with   multiple
	  levels of resolving by merging expandtree's

	  more coming soon ;)

2010-04-24 21:16  chl

	* smtp_session.c: fix format string

	  while there, print SIZE unconditonnally (prompted by gilles@)

	  ok gilles@

2010-04-22 17:37  jmc

	* smtpd.conf.5: - sort the keyword list - rewrite the description
	  of "size"

	  ok gilles jacekm

2010-04-22 14:56  jacekm

	* bounce.c, runner.c, smtpd.h: Fix a case of runner trying to send
	  imsg directly to smtp process instead of forwarding it via queue.

2010-04-22 14:13  jacekm

	* queue.c, runner.c: - kill the runner_imsg_compose wrapper to
	  reduce indirection - kill noisy log_debug

2010-04-21 23:47  gilles

	* lka.c, map.c, map_parser.c, smtpd.h: introduce first map parser
	  for maps of kind K_SECRETS !

	  map_parse_secret() converts a map value into a struct map_secret.
	  lka no longer needs to do any parsing, it simply calls
	  map_lookup() with kind K_SECRETS, checks if it returned a !NULL
	  value, and call lka_encode_secret to safely do the base64
	  encoding.

2010-04-21 23:40  gilles

	* makemap.c: when creating a map, make sure we do not store a
	  key/val separator at the beginning of the key (ie: "gilles: bleh"
	  should not be stored as key[gilles] val[ bleh])

2010-04-21 23:04  gilles

	* map.c, map_backend.c, map_parser.c, smtpd.h: map.c is growing
	  big, split it into three different files: map.c contains the map
	  API calls as usable by smtpd processes, map_backend.c contains
	  backend implementations and map_parser.c contains parser
	  implementations used internally by the map API

2010-04-21 22:32  gilles

	* smtp_session.c: my evbuffer_readln_crlf() hack can be killed now
	  that nicm@ has brought us an update to libevent that ships with
	  evbuffer_readln(). beers for nicm@ !

2010-04-21 22:10  gilles

	* map.c: change prototypes for map_*_get() functions, we need the
	  get-er function to fill the size of value for the caller.

	  have map_lookup() actually lookup the parser in map_parsers table
	  and call it if it is set, otherwise return raw value which is
	  similar to current behavior. currently, no map kind has a parser
	  set, so this is essentially no functionnal change.

	  fix map_stdio_get(), it was not used yet in -current but i
	  spotted a bug while enabling it in my sandbox. it returns key and
	  value instead of key.

2010-04-21 21:53  gilles

	* lka.c, map.c, ruleset.c, smtpd.h: map_lookup() takes an
	  additionnal parameter of type enum map_kind which will be used to
	  select the appropriate map parser. make sure every call to
	  map_lookup() is updated. map_lookup() currently ignores the
	  value.

2010-04-21 21:45  gilles

	* map.c, smtpd.h: introduce enum map_kind, the map_parsers array
	  and map_parser_lookup() which will be used to perform stronger
	  checks on map values. they are unused yet ...

2010-04-21 21:37  gilles

	* map.c: simplify map_lookup() by having the backend lookup done in
	  new map_backend_lookup() function, no functionnal change, first
	  of many changes to come in map.c

2010-04-21 20:54  jacekm

	* control.c, lka.c, mda.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpctl.c, smtpd.c, smtpd.h: Runner process is just a helper for
	  queue, so tear down its imsg channels to parent, mda, mta, lka,
	  smtp, and control.  This leaves just the channel to queue, which
	  forwards imsgs on runner's behalf and redirects any replies back
	  to it.

	  OK gilles@

2010-04-21 19:50  jacekm

	* enqueue.c: Fix pathetic performance when submitting large mails
	  via /usr/sbin/sendmail, caused by realloc() abuse.

2010-04-21 10:29  jacekm

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c:
	  Remove unusable ifdef DEBUG code.

2010-04-21 02:12  jacekm

	* runner.c: Fix logic error just like the one in previous revision.

2010-04-20 22:55  jacekm

	* runner.c: Fix crash that could happen when attempting ``smtpctl
	  remove'' while the message is being delivered.

2010-04-20 22:22  jacekm

	* smtpd.conf.5: Correct map definition syntax.	Reported by Rene
	  Maroufi <info@maroufi.net>.

2010-04-20 22:09  jacekm

	* smtpd.conf.5: Document the ``alias <map>'' parameter.

2010-04-20 21:35  jacekm

	* smtpd.conf.5: Document ``size'' setting; OK gilles@

2010-04-20 20:55  jacekm

	* parse.y: Support "accept from local ..." as documented in the man
	  page.

	  Reported by Rene Maroufi <info@maroufi.net>

2010-04-20 20:18  jacekm

	* mda.c: Use correct type for ``mda_id'', ie. match with type used
	  in imsg header.

2010-04-20 17:34  jacekm

	* config.c, control.c, lka.c, mda.c, mfa.c, mta.c, queue.c,
	  runner.c, smtp.c, smtpd.c, smtpd.h: Kill *2400* lines of code by
	  abstracting common bits of the imsg handlers.

2010-04-20 13:03  gilles

	* parse.y: when a size is declared with a quantifier in smtpd.conf,
	  have parse.y use scan_scaled(3) to support the quantifiers rather
	  than rolling my own code.

	  prompted by jacekm@

2010-04-20 03:01  jacekm

	* smtpd.c: setproctitle(3) the parent process to "[priv]" to match
	  other OpenBSD daemons.

2010-04-20 02:57  jacekm

	* smtpd.c: Make smtpd -d produce verbose output, ie. restore
	  behaviour from before rev. 1.94.

2010-04-19 22:10  jacekm

	* mda.c: Use larger buffer for mda output.

2010-04-19 22:09  jacekm

	* smtpd.c: - use perror(3) - call _exit(2) instead of exit(3) in
	  forked processes

2010-04-19 16:37  gilles

	* parse.y: two lines were missing from previous commit

2010-04-19 12:26  gilles

	* smtp_session.c: initial support for ENHANCEDSTATUSCODES, has been
	  sitting in my tree for a month or so

2010-04-19 12:12  gilles

	* parse.y, smtp_session.c, smtpd.h: basic support for SIZE
	  extension, has been sitting in my tree for a month or so ...

	  okayd by jacekm@ a while ago

2010-04-19 10:14  jacekm

	* mda.c, runner.c, smtpd.c, smtpd.h: Simplify local delivery
	  codepath: - replace uses of struct batch in the parent with
	  simpler struct delivery.  - replace IMSG_BATCH_* dance with
	  single IMSG_MDA_SESS_NEW.  - make mda assume it delivers to
	  external program over a pipe.  - fork helper process when
	  delivering to maildir or a file.

	  New feature: upon external mda failure use last line of its
	  output as an error message.

	  With input and tests from nicm@.

	  OK nicm@ gilles@

2010-04-12 00:46  jacekm

	* smtpd.h: Increase limit on the length of "user" in
	  user@domain.com to a value higher than specified in rfc.  Too
	  many mailers don't conform to it, and it is harmless as far as I
	  can see.

	  From Tim van der Molen <tbvdm@xs4all.nl>

	  OK gilles@

2010-04-07 20:09  nicm

	* imsg.c: Remove XXX comment and just close received fd if calloc()
	  fails.

	  If this happens the imsg may no longer be usable as there may be
	  queued messages, but this is a) already the case with the code
	  now, and b) would be the case if recvmsg() fails anyway, so we
	  can document that -1 from imsg_read() invalidates the struct
	  imsgbuf.

	  discussed with and ok eric

2010-03-03 12:11  jacekm

	* smtpd.h: tweak mda.c rev. 1.36: eliminate risk of busy waiting
	  for socket to become writable, and make code more idiomatic.

	  tested by nicm@

	  ok gilles@

2010-03-03 11:52  jacekm

	* mda.c: tweak mda.c rev. 1.36: eliminate risk of busy waiting for
	  socket to become writable, and make code more idiomatic.

	  tested by nicm@

	  ok gilles@

2010-03-01 23:00  gilles

	* mda.c: mda_event() assumed the mbox fp to be a file when it could
	  be a pipe, do not fatal on read/write errors otherwise a broken
	  pipe in an external mda will bring smtpd down.

	  mda_store() assumed write would succeed and fatal otherwise,
	  change code so that EINTR/EAGAIN trigger a new write while other
	  errors gracefully return causing the message to be rescheduled
	  later.

	  these two prevent a fatal() from being hit when execution of a
	  filter or external mda fails (bug experienced and fix verified by
	  nicm@)

	  while at it, fix a small bug where logs would not display the
	  recipient when mail went through a ~/.forward / aliases
	  expansion.

2010-03-01 14:04  gilles

	* smtpd.c: typo in warning log

	  spotted by Seth Wright <seth@crosse.org>

2010-02-28 13:23  gilles

	* ruleset.c: the netmask fix I commited a couple days ago lacked
	  the AF_INET6 bits, this commit fixes pr user/6328

	  bug reported and fix verified by Martin Hedenfalk
	  <martinh@bzero.se>

2010-02-26 16:06  gilles

	* parse.y, ruleset.c: - fix netmask matching for AF_INET, it was
	  broken in many ways, problem	 was reported by nicm@ which spent
	  a couple hours with me trying to   understand what was causing
	  the bug, and helping me write and test fix.

2010-02-25 15:53  stevesk

	* smtpd.conf.5: fix incorrect reference; ok jmc@ gilles@ jacekm@

2010-02-23 23:09  stevesk

	* smtpctl.8: add remove command; ok jmc@ gilles@

2010-02-23 22:12  stevesk

	* smtpctl.8: Add a description for message-id and message-uid (text
	  from gilles@).  Also combine the two schedule commands with
	  uid/id into one.  help and ok jmc@ and gilles@

2010-02-17 18:37  gilles

	* map.c: in map_stdio_get() use strdup on the right buffer, not on
	  a pointer that will be NULL 99% of the times... fixes segv in
	  path that's not enabled yet

2010-02-17 18:27  gilles

	* lka.c: erf, previous fix to lka crash was still using the wrong
	  define ...

2010-02-17 14:47  gilles

	* lka.c, map.c, ruleset.c, smtpd.h: the map api becomes
	  backend-agnostic with initial support for db(3) and stdio(3)
	  backends, though for now we only enable db(3). this is the first
	  commit of a serie to improve maps and everything related.

	  idea discussed with and diff okay jacekm@

2010-02-17 09:40  gilles

	* lka.c: localpart of a struct path may legally exceed MAXLOGNAME,
	  causing lka to fatalx() on a lowercase() call in some cases. make
	  sure lka uses a buffer capable of holding a localpart, and do not
	  attempt getpwnam() if we know it's going to fail anyway...

	  issue reported by Ben Lindstrom <mouring@eviladmin.org>

2010-01-11 22:43  jacekm

	* enqueue.c: Fix wrong logic in error checking of buf_dynamic,
	  found by pcc.

2010-01-10 17:42  gilles

	* control.c, parser.c, parser.h, runner.c, smtpctl.c, smtpd.h: -
	  teach runner how to remove a message from queue given a message
	  id/uid	 and assuming message is not in
	  processing/scheduled state - teach smtpctl how to request message
	  removal from runner

	  discussed with todd@, idea ok jacekm@

2010-01-10 09:59  gilles

	* smtpd.c: have smtpd errx() at startup if no hostname could be
	  detected either from a gethostname() call or from a hostname
	  directive in smtpd.conf

	  discussed with jacekm@, i initially intended to only warn but
	  errx seems to be a better solution for now

2010-01-03 15:37  chl

	* control.c, lka.c, log.c, mda.c, mfa.c, mta.c, parser.c, parser.h,
	  queue.c, runner.c, smtp.c, smtpctl.8, smtpctl.c, smtpd.c,
	  smtpd.h: Implement "log verbose" and "log brief" to enable or
	  disable verbose debug logging on runtime.

	  Based on claudio@'s work on ripd, ospfd, ospf6d, dvmrpd, ldpd,
	  bgpd.

	  With help/ideas/testing from gilles@ jacekm@ todd@

	  ok jacekm@

2010-01-02 17:41  jacekm

	* client.c, client.h: Replace 3 struct smtp_client members
	  (ssl_handshake, rcptokay, dying) with a bitmap called "flags".

2010-01-02 14:42  jacekm

	* client.c, client.h: Factor out parts of client_read() into
	  client_socket_read() and client_get_reply(), downsizing it from
	  170+ to just over 30 lines.  The gotos are now gone, too.

2010-01-02 12:06  jacekm

	* client.c, client.h: Simplify code by removing struct smtp_client
	  member, int iomode, which was used for keeping track of the
	  current polling mode.  Introduce new function client_poll() that
	  determines what mode of polling is required at the time of call.

2009-12-31 16:37  gilles

	* smtp_session.c: when separating command from parameters in smtp
	  session, the parser tries to use ':' as a separator then
	  fallbacks to ' ' so that it can detect the command names that
	  contain more than one words (MAIL FROM and RCPT TO) or the one
	  word ones (HELO, DATA, ...).

	  this is incorrect and the parser can get confused if the
	  parameter to any command contains a ':', for example "HELO
	  [ipv6:...]" cause the parser to lookup for command "HELO [ipv6".

	  fix this by using ':' as a delimiter for 'mail from' and 'rcpt
	  to', while using ' ' as a delimiter for all other commands.

	  fixes bug 6285/system reported by Lionel Le Folgoc
	  <lionel@lefolgoc.net>

2009-12-24 15:19  gilles

	* smtpd.c, smtpd.h: kill PATH_RUNQUEUEHIGH and PATH_RUNQUEUELOW, i
	  had great plans for them but they're still unused months later
	  and there's many ways to achieve having a set of priorities on
	  envelopes without needing additionnal queues.

2009-12-23 18:16  jacekm

	* bounce.c, client.c, client.h, control.c, enqueue.c, mta.c,
	  util.c: Implementation of RFC 2920 PIPELINING extension, client
	  side only for now.

	  This restructures the client_* API internals significantly.  The
	  code becomes pipelining in nature.  All SMTP commands are put on
	  the output queue and dequeued as quickly as possible.  Once
	  dequeued, they're moved to the receive queue so that replies can
	  be matched with previous commands.

	  Dequeuing commands from the output queue halts when the count of
	  commands currently in-pipeline (``cmdi'') is equal to the command
	  send window (``cmdw'').  There are three cmdw values useful in
	  practice:

	  0		  clear pipeline, ie. inhibit all future sends 1
		     disable pipelining, ie. use old
	  ``one-request-one-reply`` mode SIZE_T_MAX	 enable pipelining,
	  ie. dequeue as many commands as possible

	  At the beginning of session cmdw is 1.  When it is found that
	  peer supports PIPELINING, it grows to SIZE_T_MAX.  After dequeing
	  DATA it is again 1.  After sending QUIT it is 0.

	  Each command dequeued from the output queue becomes a buf in a
	  msgbuf.  The act of combining multiple commands into a single
	  send operation did not need to be implemented: buf_write()
	  already combines bufs using iovec and sends them at once using
	  sendmsg(2).

	  Tested by todd@ and oga@

	  "looks good" to gilles@

2009-12-16 22:40  jacekm

	* client.c: Don't lose a line each time a chunkful of content is
	  read off the disk.  Problem spotted by todd@

2009-12-16 03:20  jacekm

	* client.c: Fix RCPT TO failure handling, bug introduced in r1.18.

2009-12-15 12:45  jacekm

	* client.c, client.h: Simplify SSL code client-side, no functional
	  change.

2009-12-15 01:23  jacekm

	* lka.c: Must aim better.

2009-12-15 00:17  jacekm

	* bounce.c: Handle 6yz code as permanent error.

2009-12-14 20:56  jacekm

	* lka.c, queue.c, runner.c, smtpd.c, smtpd.h, util.c: Tweak the
	  logic behind setting the fd limits so that smtpd is less likely
	  to get upset by custom soft/hard ulimit settings.

	  Suggested by todd@

2009-12-14 20:49  jacekm

	* smtp.c: Set initial session limit so that IMSG_SMTP_ENQUEUE can
	  be satisfied even in absence of all other real listening sockets.

	  Spotted by todd@

2009-12-14 19:21  jacekm

	* bounce.c, runner.c, smtpctl.c, smtpd.h: Control maximum number of
	  bounce sessions similarly to how the mta and mda are now
	  controlled.

2009-12-14 19:16  jacekm

	* queue_shared.c: Clear S_MESSAGE_PERMFAILURE when creating the
	  bounce message.  Makes the bounce mails visible in mailq output.

2009-12-14 17:44  jacekm

	* mda.c, mta.c, queue.c, runner.c, smtpctl.c, smtpd.h: Impose
	  sessions limit on the delivery sessions (mta and mda).

2009-12-14 14:17  jacekm

	* mda.c, smtpd.c, smtpd.h: Do non-blocking I/O when delivering
	  locally over a pipe.

2009-12-13 23:02  jacekm

	* control.c, enqueue.c, lka.c, queue.c, runner.c, smtp.c,
	  smtp_session.c, smtpctl.c, smtpd.c, smtpd.h, util.c: Use safe fd
	  limits in smtp, lka, queue, and control.  Removes a possibility
	  for fd-starvation fatal when under heavy load.

2009-12-13 22:48  jacekm

	* smtpctl.c: typo

2009-12-12 15:03  jacekm

	* bounce.c, client.c, client.h, enqueue.c, mta.c: When acting as a
	  client do content reads from the disk progressively as the remote
	  accepts more data instead of doing one big read into the memory
	  in the beginning of session.

2009-12-12 11:33  jacekm

	* bounce.c, client.c, client.h, enqueue.c, mta.c, smtpd.h: Simplify
	  client_* api, mainly by making fatal conditions result in
	  immediate fatals instead of passing the error up (kills ~300
	  lines).

	  Implement sending of the QUIT command which replaces crude
	  close(2).

	  tested by gilles@, todd@

2009-12-12 11:14  jacekm

	* enqueue.c: Don't qualify empty sender address with the domain,
	  eg. in sendmail -f "<>".

2009-12-10 16:02  jacekm

	* mta.c: Fix a case when 2yz status would not override existing 4yz
	  one.	Reported by jsing@

2009-12-10 15:57  jacekm

	* parse.y: Fix few read overruns found by parfait.  Nudge by
	  deraadt@

2009-12-07 16:33  jsing

	* mta.c: Avoid dereferencing a null pointer when logging a DNS
	  lookup failure.

	  ok gilles@

2009-12-06 01:27  jacekm

	* parse.y: fix previous

2009-12-05 19:42  chl

	* parse.y: fix interface tagging listeners in the ipv6 case

	  while there factor some common code (from jacekm input)

	  ok jacekm@

2009-12-02 20:10  mk

	* control.c: log_warn() consistency.

	  `OK' claudio

2009-11-26 23:21  chl

	* control.c: fix copy & paste error: IMSG_MTA_RESUME -->
	  IMSG_MDA_RESUME

	  ok gilles

2009-11-23 13:03  jacekm

	* control.c: In "smtpd; smtpd;" the second instance would fatal
	  quickly, but it would remove the smtpd.sock file, without which
	  /usr/sbin/sendmail will fail causing mails to be queued in
	  offline.

	  Initially reported by ian@, may explain oga@'s e-mail burst after
	  smtpd restart.

2009-11-17 10:22  jacekm

	* client.c: Fix handling of 5yz response to EHLO, ie. fallback to
	  HELO.

2009-11-16 11:38  jacekm

	* smtp_session.c: Kill dead code.

2009-11-16 10:40  jacekm

	* mta.c: Minimize the delay between receiving response to "." and
	  removing the queue entry in order to avoid the risk of sending
	  duplicate mail.

2009-11-14 19:49  chl

	* dns.c: add missing header needed by signal()

	  ok gilles@

2009-11-14 19:48  chl

	* smtpd.c: remove duplicate header include

	  ok gilles@

2009-11-13 21:34  chl

	* enqueue.c, smtpctl.c: add missing headers needed by time()

	  ok jacekm@

2009-11-13 13:01  jacekm

	* mda.c: Add logging of failed local deliveries.

2009-11-13 12:40  jacekm

	* smtp_session.c: Log all 4yz and 5yz replies that we send to our
	  clients.

2009-11-13 12:37  jacekm

	* smtp_session.c: Include recipient address in "Recipient rejected"
	  reply.

2009-11-13 12:27  jacekm

	* lka.c, mta.c, smtpd.h: Log FQDN and IP of the server we handed
	  mail to.  As a bonus, don't delay logging of successful
	  deliveries until all MXs were tried, plus add logging of 5yz
	  replies.

	  tested by todd@, "reads ok" gilles@

2009-11-12 13:35  jacekm

	* config.c, parse.y: Fix a memleak in parse_config(). Correct
	  return code in few error paths.  Fix two memleaks in
	  purge_config().

	  First problem spotted by parfait, the other ones - by myself.

	  "looks good" gilles@

2009-11-11 17:55  jacekm

	* dns.c: Fix previous.	When configured to relay via IP address, MX
	  lookup would fail (NXDOMAIN), leading to a bounce.  Precede the
	  MX lookup with an attempt to parse the relay as numeric string.

	  "reads ok" gilles@

2009-11-11 16:36  jacekm

	* client.c, ssl.c: Check if the receive buffer has any unused space
	  before reading from socket in buf_read (and in ssl_buf_read).

2009-11-11 12:41  jacekm

	* client.c: Fix crlf issue in buf_getln, similar to that in
	  smtp_session.c r1.123.

	  ok gilles@

2009-11-11 12:25  jacekm

	* client.c: improve buf_getln readability, no fuctional change.

2009-11-11 11:27  jacekm

	* client.c: Ensure all replies are at least 4 chars long.  If only
	  3 chars were received, append a space character.  This enables
	  other parts of the daemon to safely index into 4th character of
	  the reply buffer without the risk of accessing one byte beyond
	  NUL.

	  ok gilles@

2009-11-11 11:04  chl

	* bounce.c, mda.c, mta.c: add missing headers needed by time()

	  ok jacekm@

2009-11-10 15:57  jacekm

	* client.c: Eliminate space after colon in "RCPT TO:" as required
	  by RFC.

2009-11-10 15:54  jacekm

	* client.c: In absence of the ehlo parameter, generate one based on
	  locally bound IP address ("EHLO [1.2.3.4]") as dictated by RFC.

	  ok gilles@

2009-11-10 15:46  jacekm

	* lka.c: In relay case, avoid freeing garbage pointer by copying
	  the required struct from the temporary imsg buffer.

	  ok gilles@

2009-11-10 11:25  jacekm

	* lka.c: move format expansion to the right place, from gilles@

2009-11-10 10:53  jacekm

	* lka.c: sync code with comment, from gilles@

2009-11-10 02:09  gilles

	* lka.c: - add comments to explain the logic in the aliases
	  expansion loop - more cosmethic changes to help readability - fix
	  memory leaks - if deliverylist is empty, it means something went
	  bad during expansion,   reject recipient

2009-11-10 01:42  gilles

	* lka.c: pfff remove a comment i pasted to help me refactor code
	  ;-)

2009-11-10 01:36  gilles

	* lka.c: more cleanup, let lka_resolve_path() request forward files
	  and populate expandtree, this makes a lot of code clearer and
	  removes quite a bit of complexity from various places.

2009-11-10 01:24  jacekm

	* client.c: Check for extension keywords on final multiline reply.
	  Skip the check for states other than CLIENT_EHLO.  Verify
	  response is not shorter than 3 chars.

	  From Nils Frohberg ok gilles@

2009-11-10 01:21  gilles

	* lka.c: cosmethic changes, code reordering, no functionnal change

2009-11-10 01:13  gilles

	* lka.c: introduce lka_session_fail() which factors a small piece
	  of code used in three places: set code to 530, send imsg to
	  notify rejection, kill lkasession

2009-11-10 00:54  gilles

	* aliases.c, forward.c: now that we don't keep an expand_node in
	  memory for each expansion result, we don't need to calloc them as
	  they won't be saved in the tree.

2009-11-10 00:49  gilles

	* aliases.c, expand.c, forward.c, lka.c, smtpd.h: - add a reference
	  count and flags to struct expand_node - during expansion, no
	  longer create a new node for each result but try to	lookup for
	  an existing equivalent node and increment its reference count
	  so that: a) we save on memory, b) we don't need to expand the
	  same users   again and again just because they keep appearing in
	  expansion results.  - while expanding, flag nodes as
	  F_EXPAND_DONE so that we know which nodes   we already processed
	  - be smarter when expanding, if we have a clue that an iteration
	  has not   brought any new result (because no new nodes were added
	  and all existing   nodes have F_EXPAND_DONE), end expansion and
	  proceed to delivery.	- various small cleanups

	  discussed with jacekm@ yesterday, rebuild aliases db, make clean

2009-11-09 23:28  gilles

	* lka.c: support the userpart+foobar@domainpart syntax which got
	  wiped when i wrote the virtual domains support as it was in my
	  way. this time, make it work as it should:
	  userpart+foobar@domainpart becomes:

	  path->user = userpart+foobar path->domain = domainpart
	  path->pw_name = userpart

	  discussed quickly with jacekm@

2009-11-09 11:32  jacekm

	* expand.c: fatal on RB_INSERT failure

2009-11-09 00:25  gilles

	* forward.c: forwards_get() also calls alias_to_expand_node()

2009-11-09 00:20  gilles

	* aliases.c, smtpd.h: add an alias_to_expand_node() function and
	  use it in aliases.c

2009-11-09 00:15  gilles

	* aliases.c, expand.c: move expansion code to new expand.c to
	  clearly separate it from aliases

2009-11-09 00:08  gilles

	* aliases.c, forward.c, lka.c, makemap.c, runner.c, smtpd.h: rework
	  a bit expansion and data structures involved in the expansion so
	  we no longer have a direct mapping between structures saved in
	  aliases/virtual db and structures used at runtime during
	  expansion.

	  side effects ? struct alias is smaller, databases are smaller and
	  it is no longer necessary to rebuild aliases/virtual databases
	  each time jacekm@ or I make changes to some obscure structure
	  used indirectely during expansion

	  rebuild databases, flush queues, make clean

2009-11-08 22:40  gilles

	* aliases.c, enqueue.c, forward.c, lka.c, queue.c, queue_shared.c,
	  runner.c, smtp.c, smtpd.h, util.c: - make aliases expansion use a
	  rb tree instead of a tail queue, the code   doesn't take
	  advantage of the new structure yet, but this was a needed
	  change for upcoming improvements.  - introduce
	  aliasestree_{lookup,insert,remove} to the aliases api - rename
	  queue_generate_id() to generate_uid() and move it to utils.c as
	  it is used all over the place and not only in queue

	  tree idea discussed with jacekm@, if you update rebuild aliases
	  db, make clean and flush queue

2009-11-08 20:38  gilles

	* forward.c, lka.c, smtpd.h, util.c: first commit of a serie to
	  cleanup, simplify and improve aliases resolution which is
	  probably the most complex code in smtpd right now. no longer use
	  a single list to hold aliases to be resolved and resolved
	  aliases, and do not use struct alias to hold resolved aliases.
	  instead use a delivery list that is a list of struct path, and
	  populate it with resolved aliases.

	  idea discussed with jacekm@, this needs some testing to make sure
	  it does not introduce a regression with aliases. flush your queue
	  and make clean.

2009-11-06 00:30  gilles

	* smtp_session.c: evbuffer_readline() assumes end of line to be \r,
	  \n, \r\n, \n\r or \r\r.  smtp protocol expects lines to end with
	  \r\n.

	  if a client sends a very long line which is unfortunately read up
	  to \r, evbuffer_readline() will return the line, then will detect
	  another line when the buffer is filled again and starts with \n,
	  returning again with an empty line. this is a bug which trigger
	  very rarely and usually shows up as an empty line in the middle
	  of headers, causing all subsequent headers to appear as part of
	  the body to most mail user agents.

	  upstream fixes this with evbuffer_readln() in version 2.0 of
	  libevent, a mail will be sent to see if they can backport it,
	  meanwhile we fix it by introducing evbuffer_readln_crlf().

	  discussed with and ok jacekm@

2009-11-05 13:26  gilles

	* lka.c: another log_debug() cleanup

2009-11-05 13:24  gilles

	* parse.y: some structures reference the maps they use by their id,
	  if we allow 0 as a valid map id, then we have no way to know for
	  these structures if they have a reference to a map, or if the
	  member was not set. make map id start at 1.

2009-11-05 13:11  jsing

	* dns.c, mta.c: Consider DNS lookups that result in NXDOMAIN to be
	  a permanent failure.

	  ok gilles@ jacekm@

2009-11-05 13:08  jsing

	* bounce.c: Include a Date: header in bounce messages.

	  ok jacekm@ gilles@

2009-11-05 13:06  gilles

	* lka.c: cleanup a bit the log_debug output

2009-11-05 13:05  jsing

	* bounce.c, dns.c, mta.c: Introduce a 6yz status code, used
	  internally to report permanent errors.  The 1yz and 6yz status
	  codes are now removed prior to reporting the status message in
	  bounce messages, which provides an easy way to distinguish
	  between local and remote status messages. Initial diff from
	  jacekm@

	  ok gilles@ jacekm@

2009-11-05 13:02  gilles

	* lka.c: - introduce lka_session_destroy() which replaces the splay
	  tree removal and   free(lkasession) in lka_expand_rcpt() - while
	  at it, plug a very very unlikely memory leak which i spotted
	  while   reviewing the logic

2009-11-05 11:27  gilles

	* lka.c, smtpd.h: - move a couple prototypes in smtpd.h - remove
	  prototypes from deprecated functions

2009-11-04 09:31  jmc

	* makemap.8: tweak previous;

2009-11-04 00:10  gilles

	* makemap.8: document the new -t set mode of makemap, and add a
	  paragraph describing the use of makemap to generate a primary
	  domains map

2009-11-03 23:57  gilles

	* lka.c, makemap.c, map.c, parse.y, ruleset.c, smtpd.h: teach
	  makemap how to build a set, which is a map containing only keys.
	  smtpd is now capable of looking primary domains at runtime in a
	  set, which means that the following becomes possible:

		  map "primary" { source db "/etc/mail/primary.db" }
		  accept for domain map "primary" deliver to mbox

	  while at it fix a couple bugs in the aliases resolution path
	  which caused recipients to bounce if a ruleset did not have an
	  "accept for local" rule

	  "diff reads good" jacekm@, flush queue & make clean

2009-11-03 21:55  gilles

	* aliases.c, lka.c, parse.y, smtpd.h: this commit removes the
	  hardcoded special "aliases" map and brings support for multiple
	  aliases maps that can be attached at the rule level. with it, you
	  can for example define different aliases maps for different
	  domains or different aliases maps for the same domain depending
	  on the client source:

	  map "localiases" { source db "/etc/mail/localiases.db" } map
	  "netaliases" { source db "/etc/mail/netaliases.db" }

	  accept from 192.168.0.0/16 for local alias "localiases" deliver
	  to mbox accept from all for local alias "netaliases" deliver to
	  mbox

	  idea discussed with jacekm@ and various other hackers, diff
	  contains some bug fixes too which were not part of the original
	  diff. man page follows very shortly ... make clean & flush queue
	  !

2009-11-03 20:13  gilles

	* aliases.c, lka.c, ruleset.c, smtpd.h: - remove a useless member
	  of struct cond - have virtual related functions take a map id
	  instead of a map - shrink a tiny bit ruleset matching - add
	  missing lka_resolve_path() call in aliases resolution leading to
	  issues spotted by nicm@

2009-11-03 18:50  gilles

	* ruleset.c: remove annoying log_debug

2009-11-03 12:10  jacekm

	* aliases.c, runner.c, smtpd.c: Improve error logging.

2009-11-03 11:56  nicm

	* lka.c: Don't need regex.h and remove two declarations that are
	  now in smtpd.h.

	  ok jacekm

2009-11-01 23:15  gilles

	* queue.c, runner.c: fix a couple log_info()s, from Tim van der
	  Molen <tbvdm@xs4all.nl>

2009-10-25 23:58  gilles

	* smtpd.conf.5: fix aliases map name in man page reported by
	  Emmanuel Vadot and David Hill

2009-10-25 22:50  gilles

	* lka.c: fix the aliases resolution path so that smtpd does not
	  accidentally skip recipients when an alias resolves to more than
	  one.

	  issue spotted by martijn@bunix.org

2009-10-25 22:06  gilles

	* smtp.c: tag should also be copied from listener to message when
	  the message is enqueued through smtpctl

2009-10-25 21:43  chl

	* client.c: Fix potential null dereference.

	  Found by LLVM/Clang Static Analyzer.

	  ok gilles@

2009-10-25 20:46  gilles

	* control.c, parser.c, smtpctl.c: smtpctl reload is work in
	  progress, do not expose it and make sure smtpd's control process
	  does not try to handle it.

	  spotted and reported by martijn@bunix.org

2009-10-22 17:02  sobrado

	* smtpctl.8, smtpd.8: write UNIX-domain in a more consistent way;
	  while here, replace a few remaining ".Tn UNIX" macros with ".Ux"
	  ones.

	  pointed out by ratchov@, thanks!

	  ok jmc@

2009-10-22 14:35  sobrado

	* smtpctl.8, smtpd.8: use the UNIX-related macros (.At and .Ux)
	  where appropriate.

	  ok jmc@

2009-10-22 10:22  jmc

	* smtpd.8: pesky full stop, donated by tim van der molen;

2009-10-19 23:19  gilles

	* makemap.8, smtpd.conf.5: update man pages

2009-10-19 23:09  gilles

	* parse.y: change virtual rule so that it reads: accept for virtual
	  "mapname", instead of: accept for virtual map "mapname" ...

	  discussed with jacekm@

2009-10-19 22:48  gilles

	* lka.c, parse.y, ruleset.c, smtp_session.c, smtpd.h: currently,
	  smtpd is capable of having multiple listeners with different
	  options but they will all share the same ruleset. this means that
	  there is no way to have a rule apply to a session established on
	  one listener but not applied on another.

	  this commit brings initial support for tagging listeners and
	  having the rules able to match these specific listeners. The
	  following will define a rule which will only apply to interfaces
	  tagged as "mynet":

	  listen on lo0 		  # implicit lo0 tag listen on fxp0
	  tag mynet listen on fxp1 tag mynet

	  accept on mynet for domain "example.org" deliver to mbox

2009-10-19 22:00  gilles

	* parse.y, smtpd.c, smtpd.h: users within virtual domains do not
	  necessarily map to a real user account, teach smtpd how to
	  deliver using specific user permissions:

		  accept for virtual map "foo" deliver to maildir
	  "/m/%d/%u" user foo

	  will deliver mail under /m/domain/user as user foo

	  idea and initial diff discussed with jacekm@

2009-10-19 21:53  gilles

	* client.c: fix compile time warning due to missing cast

2009-10-18 23:45  gilles

	* lka.c: actually, we want to resolve C_ALL and C_NET, we just
	  don't want to do it when their action is to be relayed.

2009-10-18 22:41  gilles

	* mfa.c: fix a bug that was introduced by my changes in ruleset
	  matching and which caused an envelope to be saved with action
	  A_INVALID when it matches either A_RELAY or A_RELAYVIA.

	  reported by various people

2009-10-18 21:53  gilles

	* lka.c: do not attempt to resolve aliases for C_ALL and C_NET
	  destinations

2009-10-17 14:46  sobrado

	* makemap.c: sort flags.

2009-10-17 00:29  gilles

	* smtpd.conf.5: after recent change in virtual maps support
	  smtpd.conf.5 was not fully updated and still referenced the
	  "virtual" map which no longer exists.

	  issue spotted by Alexander Hall <alexander@beard.se>

2009-10-17 00:26  gilles

	* lka.c: as of now, "accept for all deliver to mbox" is a valid
	  syntax, sadly lka is not aware of this and will fatal() when it
	  attempts to resolve a recipient for a destination that's not
	  C_DOM or C_VDOM.

	  issue reported by Dorian Buettner <dorian.buettner@gmx.de>

2009-10-13 06:53  jmc

	* smtpd.conf.5: sort;

2009-10-13 01:57  gilles

	* aliases.c: trim ending whitespaces in aliases files otherwhise
	  makemap will fail to parse values correctly when ran in aliases
	  mode, and smtpd will fail to parse values correctly when reading
	  an include file

2009-10-13 00:49  gilles

	* smtpd.conf.5: document the new "for virtual map [...]" syntax

2009-10-13 00:34  gilles

	* aliases.c, lka.c, mfa.c, queue.c, runner.c, smtpd.h: - fix a null
	  deref which could happen after a couple iterations of the
	  aliases/virtual domains resolution code.

	  - fix a logic bug which caused virtual domains not to be
	  correctly   handled after one iteration of the aliases resolution
	  code.

	  - introduce a few helper functions to help clean up and simplify
	  the	lka code.

	  - simplify the IS_EXT/IS_MAILBOX/IS_RELAY macros so they
	  manipulate a	 struct path * instead of the mess of dereferences
	  we were passing them.

2009-10-12 20:19  gilles

	* makemap.c: to support virtual domains properly, smtpd needed to
	  have the domain stored as a key in the virtual map, which means
	  that to support virtual domain for openbsd.org I would do:

	  openbsd.org		  whatevervalue gilles@openbsd.org
	  gilles

	  this commit teaches makemap how to deduce the special domain keys
	  based on the entries for that domain, so that only the second
	  line is needed now.

2009-10-12 20:14  gilles

	* ruleset.c: fix a bug where matching a "for all" rule with
	  multiple condition will not let us know which condition we
	  matched.

2009-10-11 19:40  gilles

	* aliases.c, lka.c, makemap.8, parse.y, ruleset.c, smtpd.h:
	  implement proper virtual domains instead of faking them on top of
	  primary domains. this means that:

	  - virtual domains no longer deliver to a local user when not told
	  to - they no longer attempt to resolve aliases when not told to -
	  they no longer need an explicit rule in smtpd.conf for EACH
	  domain - the "virtual" map is no longer hardcoded - smtpd no
	  longer needs a restart to support a new domain

	  instead we introduce the: accept for virtual map "mapname" [...]
	  syntax which refers to a map that can be manipulated at runtime.

	  idea discussed and okayd with jacekm@

2009-10-07 20:19  gilles

	* mfa.c, smtpd.c: now that mfa no longer does ruleset matching,
	  parent no longer needs to send it the ruleset configuration, and
	  mfa no longer needs to interpret it and load it in memory. kill
	  kill kill. as an added bonus: removes 88 lines of code :-)

2009-10-07 20:09  gilles

	* lka.c, mfa.c, smtpd.h: currently both mfa and lka perform ruleset
	  matching for their own purposes.  make lka the only caller of
	  ruleset_match(), mfa request match through imsg which will shrink
	  its code and help me implement virtual domains properly.

	  idea discussed with jacekm@

2009-10-07 19:30  gilles

	* lka.c, mfa.c: since the bounce code rewrite, we no longer need to
	  perform ruleset match and aliases resolution on the sender before
	  envelope is written in queue:

	  - mfa_test_mail() no longer calls ruleset_match() -
	  lka_verify_mail() no longer resolves sender and set rule action -
	  lka_resolve_mail() becomes dead code so just kill it

	  ok jacekm@

2009-10-07 15:29  jacekm

	* ruleset.c: remove noisy log_debug, requested by gilles@

2009-10-06 20:20  gilles

	* smtp_session.c: disallow AUTH once a session is in progress, this
	  prevents a fatal from being triggered in smtp process when client
	  sends AUTH after MAIL.

	  bug reported and fix tested by James Turner <james@bsdgroup.org>

2009-10-03 12:02  jacekm

	* client.c: Avoid NULL dereference when the final RCPT TO is
	  refused.  Reported by Didier Wiroth <dwiroth@gmail.com>

2009-10-03 09:59  jacekm

	* ssl.c: dont dereference garbage pointer, from martynas@

2009-09-25 15:44  jmc

	* makemap.8, smtpd.conf.5: move the smtpd.conf-specific map bits
	  back from makemap to smtpd.conf, along with some tweakage;

	  ok jacekm gilles

2009-09-23 12:26  jmc

	* smtpd.conf.5: minor tweaks for the filter section; ok jacekm

2009-09-23 11:40  jacekm

	* mda.c, smtpd.h: Plug memleak.

2009-09-22 17:44  jacekm

	* client.c: Make the error messages for failures at EHLO more
	  precise by distinguishing between unavailable extensions and
	  those that are available but have failed.

2009-09-22 15:05  jmc

	* makemap.8, smtpd.conf.5: - move the map stuff to makemap.8 - use
	  a single list for smtpd.conf keywords

	  ok jacekm gilles

2009-09-22 14:24  jacekm

	* client.c, client.h: When at MAIL FROM stage, handle the case when
	  STARTTLS is required but not available.  Also, make the
	  client_next_state() calls across the code more idiomatic.

2009-09-22 10:23  jj

	* ssl.c: fix handling of certificates to unbreak DSA; allows
	  starttls(8) instructions to work with smtpd; ok jacekm@, on
	  behalf of gilles@ who doesnt have access to a safe machine

2009-09-21 22:35  jacekm

	* enqueue.c: Expand "&" in the name part of gecos similarly to how
	  sendmail and finger expand it.  Based on a diff from landry@,
	  thanks!

2009-09-21 12:02  jmc

	* smtpd.conf.5: - some tweaks for the global section - syntax fix
	  from gilles

	  ok gilles

2009-09-21 09:46  jmc

	* smtpd.conf.5: merge EXPANSION into DESCRIPTION, since it is
	  really part of describing the file format;

	  ok jacekm

2009-09-20 21:28  jacekm

	* smtpd.8: Fix typo, noticed by Nava Carson, thanks!

2009-09-19 17:51  jmc

	* smtpd.conf.5: some minor improvements for this page, as well as
	  an expanded examples section to get things running;

	  help/ok jacekm gilles

2009-09-18 02:04  jacekm

	* control.c, enqueue.c, smtp.c: Remove useless Received line added
	  at the /usr/sbin/sendmail stage, it was not correctly formatted
	  anyway.  Recording of sender uid has been moved to the server
	  process (getpeereid), which means it is not subject to forgery.
	  Based on problem report by Michael Lechtermann
	  <michael@lechtermann.net>

2009-09-18 01:51  jacekm

	* client.c: The client API is meant to require STARTTLS by default,
	  a behaviour which can be altered using client_ssl_optional().
	  Reported by Michael Lechtermann <michael@lechtermann.net>

2009-09-17 16:19  jmc

	* smtpd.8: tweak previous; ok jacekm

2009-09-17 12:42  jacekm

	* smtpd.8: Add instructions for enabling smtpd to the EXAMPLES
	  section.  Suggested by sthen@

2009-09-16 22:22  jacekm

	* parse.y: Do not print "could not load cert" warning at startup if
	  certificate is not required.	Requested by jmc@, gilles@ ok.

2009-09-16 21:51  jmc

	* smtpd.conf.5: +.Xr mailer.conf 5 , ok jacekm

2009-09-16 17:33  jacekm

	* bounce.c: Free resources when bounce enqueue fails due to a
	  timeout.

2009-09-16 13:46  jacekm

	* enqueue.c: Ignore sendmail's -L, -A, and -q switches: makes
	  clientmqueue cron job exit silently.

2009-09-15 18:50  jacekm

	* bounce.c, client.c, client.h, control.c, enqueue.c, mta.c,
	  queue.c, queue_shared.c, smtpd.h, ssl.c, util.c: Extend SMTP
	  client_* API to support SSL+AUTH, and use it in the mta process
	  to relay mails.  ok gilles@

2009-09-15 12:54  jacekm

	* buffer.c, imsg.h: Enclose repeated buffer draining code in a new
	  msgbuf_drain() function, which is additionally exported for use
	  by others.

	  It will be needed by smtpd's SSL module when the SMTP client code
	  is changed to replace libevent's evbuffers with our msgbuf_* API.

	  ok gilles@ henning@ guenther@ eric@

2009-09-12 14:24  jacekm

	* smtp_session.c, smtpctl.c, smtpd.h: Simplify line len checking:
	  use one limit for all SMTP exchanges.  This is not as strict as
	  various RFCs want it, but we can make it more granular later.
	  For now, let all mails flow by using the maximum of all limits
	  found in the RFCs.  ok gilles@

2009-09-12 11:50  gilles

	* smtp_session.c: fix a wrong computation in session_readline()
	  where the length of line was deduced from the buffer size prior
	  and after evbuffer_readline() call. the problem is that this
	  accounts for the characters which evbuffer_readline() removed and
	  we do not know how many they were (\n, \r\n ..). fix just does a
	  strlen() call of line which is a bit slower but way safer.

	  This could very well fix the broken headers issue some people
	  reported

2009-09-12 11:38  gilles

	* smtp_session.c, smtpctl.c, smtpd.h: cmdlinetoolong stat was
	  incremented at the wrong place, fix

2009-09-12 11:22  gilles

	* smtp_session.c, smtpctl.c, smtpd.h: - fix a compile time warning
	  - add a new stats counter to distinguish between command lines
	  which   exceeded the limit and data lines which exceeded the
	  limits

2009-09-12 11:01  gilles

	* smtp_session.c: replace a fwrite || fwrite construct with a
	  fprintf which achieves the same while being less error prone

2009-09-08 11:50  landry

	* mta.c: Cope with remote host sending '452 Insufficient system
	  storage'.  Committing on behalf of gilles@ who doesn't have
	  access to a safe box.

2009-09-04 21:11  jacekm

	* runner.c: Fix scheduling of bounces that could not be delivered.
	  ok gilles@

2009-09-04 20:50  jacekm

	* bounce.c: Fix scheduling of bounces that could not be delivered.
	  ok gilles@

2009-09-04 18:28  jacekm

	* mda.c: Prepend Return-Path.

2009-09-04 15:33  jacekm

	* queue_shared.c, runner.c: Fix scheduling of bounce messages.

	  From gilles@

2009-09-04 13:53  jacekm

	* store.c: merged with mda.c

2009-09-04 13:49  jacekm

	* mda.c, smtpd.c, smtpd.h: Major mda update: - Fix: check external
	  mda / mail.local exit code.  - Fix: check maildir rename(2)
	  return code.	- Fix: check read(2) and write(2) return codes.  -
	  Fix: in parent, batchp->env was not set to the env of the current
	  process.  - Fix: clean file in tmp if maildir delivery fails.  -
	  Fix: mark message as temporarily failed upon start, unmark upon
	  sucessful delivery. (safe default) - Fix: kill all message drops,
	  aka. PERMFAILUREs, with one exception: when the local user no
	  longer exists.  - Cleanup: store.c is merged with its only user,
	  mda.c - Feature: in parent, child_add now returns pointer to the
	  new child struct.  This is used to store and later access
	  child->mda_batch member in order to associate children with their
	  batches.  - Feature: in parent, external mda / mail.local will
	  timeout after 5 minutes.

2009-09-04 13:44  jacekm

	* queue_shared.c, runner.c: Fix a crash when messagep->batch_id is
	  read from disk and used long after the batch has ceased to exist.

	  From gilles@

2009-09-03 10:19  jacekm

	* control.c, dns.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c,
	  smtp.c, smtpd.c: imsg_get sets errno so use fatal instead of
	  fatalx.

2009-09-02 23:04  jacekm

	* store.c: Prepend Delivered-To, not append.  Discussed with
	  gilles@.

2009-09-02 14:47  jacekm

	* mda.c, smtpctl.c, smtpd.h: Include mbox write errors in "show
	  stats".  Suggested by gilles.

2009-09-02 13:11  jacekm

	* mda.c: Do not lose mail when write(2) to mbox fails.

2009-09-02 12:00  jacekm

	* store.c: remove dead code, gilles ok

2009-09-01 17:23  jacekm

	* smtp_session.c: Log all 4yz/5yz responses we send when in debug
	  mode; ok gilles@

2009-08-27 13:42  jacekm

	* client.c, client.h: $OpenBSD$

2009-08-27 13:41  jacekm

	* client.c, client.h: Implement client side of the SMTP protocol in
	  a library-like module.  Make bounce code and /usr/sbin/sendmail
	  interface use this new API.  The mta process continues to use its
	  own implementation, but eventually will be switched to use this
	  shared module.

	  Buffer routines are taken from buffer.c rather than from
	  evbuffer.  This is one step forward to using a single buffer API
	  across the program.

	  "it looks sexy" gilles@

2009-08-27 13:38  jacekm

	* smtpctl.c: s/relayd/smtpd/

2009-08-27 13:37  jacekm

	* bounce.c, enqueue.c, runner.c, smtpd.h: Implement client side of
	  the SMTP protocol in a library-like module.  Make bounce code and
	  /usr/sbin/sendmail interface use this new API.  The mta process
	  continues to use its own implementation, but eventually will be
	  switched to use this shared module.

	  Buffer routines are taken from buffer.c rather than from
	  evbuffer.  This is one step forward to using a single buffer API
	  across the program.

	  "it looks sexy" gilles@

2009-08-27 11:21  jacekm

	* smtpd.c, smtpd.h, util.c: getpwnam failure that results in
	  setting errno could confuse the check for non-existent
	  ~/.forward, so make the check more robust; fix a fd leak under
	  rare circumstances; use secure_file for testing .forward file
	  security.

2009-08-26 18:40  jacekm

	* mta.c: fix previous

2009-08-26 11:12  jacekm

	* mta.c: Do not add Delivered-To to outgoing mail.  It will result
	  in premature bounce as soon as it hits mx2 in mx1 -> mx2 -> mx3
	  relay chain.	hint by sthen@, ok gilles@

2009-08-18 20:38  gilles

	* store.c: The end of headers check that is used to determine where
	  to insert our Delivered-To header was wrong and could eventually
	  lead to smtpd adding it too early and making the remaining
	  headers appear as body part to MUAs.

	  issue reported by Mathieu Goessens <gebura@poolp.org>

2009-08-12 15:32  jacekm

	* smtp_session.c: Fix unwanted rejects by parsing (and ignoring)
	  AUTH=<...> MAIL command argument.  Testers, you want this.
	  Committing on gilles@'s behalf.

2009-08-11 16:46  jacekm

	* runner.c: call reset_flags in bounce_session failure code path.

2009-08-11 16:45  jacekm

	* runner.c: do not repeat flag resetting code, introduce
	  reset_flags().  discussed with gilles

2009-08-09 01:02  gilles

	* mta.c, queue_shared.c: - simplify a bit queue_message_update() -
	  make sure queue_message_update() creates bounces using
	  bounce_record() - when mta sends update to queue and it sees that
	  batch is flagged with   F_BATCH_PERMFAIL, only update the
	  envelope error message if it doesn't	 have F_MESSAGE_PERMFAIL
	  set, otherwise we may lose the real reason why   we failed for
	  that recipient. There's cleanup to do around that old   code, i'm
	  sure we can get it simpler.

	  this commit fixes a bug pea@ spotted where a bounce message would
	  not display the reason of a failure when we generated it after
	  failing to deliver a relayed message.

2009-08-08 21:16  ian

	* smtpctl.c: mailq is a common sendmail alias for showing the
	  queue; make smtpctl implement this, ignoring sendmail options for
	  now.	OK gilles@, jackekm@

2009-08-08 20:33  nicm

	* imsg.c: Make imsg_clear close and free any fds in the received fd
	  queue as well as freeing the msgbuf.

	  While here also remove an unnecessary while loop.

	  ok eric pyr

2009-08-08 02:23  gilles

	* enqueue.c: fix a small typo with no consequence in the generation
	  of message id when an enqueued message follows the offline
	  codepath. the code used ',' to separate components of the message
	  uid when it should have used '.'

2009-08-08 02:18  gilles

	* util.c: missing cast

2009-08-08 02:16  gilles

	* parser.c, smtpctl.c: missing header

2009-08-08 02:02  gilles

	* aliases.c, dns.c, forward.c, lka.c, makemap.c, parser.h,
	  runner.c, smtp_session.c, store.c, util.c: import some changes
	  from portable smtpd to reduce the delta between both.  this
	  commit contains mostly missing casts and cosmethic changes, do
	  not expect to build this anywhere but on OpenBSD, it does not
	  contain any of the portable glue.

2009-08-07 23:59  gilles

	* smtp_session.c: smtp_session: ssl/ssl.h -> openssl/ssl.h

2009-08-07 23:47  gilles

	* mta.c: in mta: ssl/ssl.h -> openssl/ssl.h, consistent with other
	  files

2009-08-07 22:21  gilles

	* lka.c, smtp_session.c, smtpd.c: we were linking to libkeynote to
	  use kn_base64_encode/decode, but honestly this was a ugly hack,
	  and i'd rather include resolv.h and use __b64_encode and
	  __b64_decode as openssh does. this commit kills all references to
	  libkeynote in smtpd, should help a bit with porting ... no
	  functionnal change.

2009-08-07 21:02  gilles

	* authenticate.c, smtpd.c, smtpd.h: wrap auth_userokay in a new
	  function authenticate_user() and make sure that only
	  authenticate.c knows about bsd_auth, no functionnal change.

2009-08-06 21:05  gilles

	* mta.c: fix a crash in mta when forwarding a bounce, caused by a
	  null deref

2009-08-06 19:09  gilles

	* smtp_session.c: in smtp_session, fix logging so that when we
	  accepted an empty envelope for the sender, we dont log 'from=<@>'
	  but from=<> instead

2009-08-06 18:46  gilles

	* queue_shared.c, runner.c, smtp.c, smtpd.c, smtpd.h: - change all
	  occurences of T_DAEMON_BATCH,MESSAGE to T_BOUNCE_BATCH/MESSAGE -
	  make sure T_BOUNCE_MESSAGE is no longer OR-ed to
	  T_MDA/MTA_MESSAGE - define F_MESSAGE_BOUNCE flag and make sure
	  bounce sessions set it - teach smtpctl show queue how to
	  recognize a bounce message

2009-08-06 18:29  gilles

	* mta.c, runner.c, store.c: replace X-OpenSMPTD-Loop with
	  Delivered-To

	  idea by jacekm@ a few weeks ago, discussed with pyr

2009-08-06 18:26  gilles

	* bounce.c, store.c: when writing a bounce, follow the same rule as
	  for mta sessions and prepend with a dot lines starting with a dot

2009-08-06 16:32  gilles

	* runner.c: when a message in queue expires, generate a bounce
	  before we remove it

2009-08-06 16:27  gilles

	* bounce.c, smtpd.h, store.c: factorize file_copy_session() and
	  file_copy() so file_copy() can handle both deliveries to
	  mailboxes (mbox/maildir) and copying to a session.

2009-08-06 16:16  gilles

	* bounce.c: fix a typo in bounce message t -> to

2009-08-06 16:12  gilles

	* bounce.c, mta.c, runner.c, smtpd.h, util.c: - introduce
	  message_set_errormsg() to set the error description that will
	  appear in a bounce message, and message_get_errormsg() to
	  retrieve that   message.  - when loop is detected, call
	  message_set_errormsg() - in mta, call message_set_errormsg() for
	  each recipient failure - in mta, call message_set_errormsg() to
	  copy batch errors to recipients if   we failed to deliver for a
	  session related error - when bouncing, add the recipient and
	  error reason to the bounce message

2009-08-06 15:40  gilles

	* bounce.c, mda.c, mta.c, queue_shared.c, runner.c, smtp.c,
	  smtpd.c, smtpd.h, store.c: This commit reworks the entire mailer
	  daemon support to actually make it work for real. As an added
	  bonus, it simplifies it, makes it follow the same code path as
	  regular messages and kills quite some code from mta, mda and
	  store. There's still some work needed but the most painful part
	  is behind us now ;)

	  ok jacekm@

2009-08-01 17:33  gilles

	* smtp_session.c: when receiving characters with the most
	  significant bit set over a session not flagged with F_8BITMIME,
	  clear the bit instead of permanently erroring the whole message.
	  some mta's do not always request 8BITMIME when they are sending
	  messages which are not 8bit clean, this lets us be less strict
	  for them while not violating RFC ourselves.

	  ok jacekm@

2009-07-29 00:03  gilles

	* queue_shared.c, runner.c, smtpd.c, smtpd.h: introduce
	  daemon_record_message() and needed glue in queue_shared.c to
	  atomically create a mailer daemon out of a message. it is
	  unreferenced for now, this commit makes no functional change.

2009-07-28 23:12  jsg

	* smtpd.c: Use strcmp() for string comparison not == ok jacekm@

2009-07-28 22:51  gilles

	* makemap.c: slightly change how makemap parses its lines so that
	  we consider # as a comment only when it starts a line or is
	  preceded by whitespaces.

	  fixes a bug that was reported to me twice and which i ran into,
	  ok jacekm@

2009-07-28 15:54  gilles

	* smtpd.c: indent

2009-07-28 15:53  gilles

	* store.c: add missing bit to correctly spot loops in all cases.
	  at the moment we only break out of the loop, but do not generate
	  mailer daemon, this will come soon.

	  ok pyr@, tested by me with help from gui at iroqwa dot org

2009-07-23 20:58  eric

	* buffer.c: make buf_write() behave like msgbuf_write(): send out
	  only the bytes that were filled, not the whole buffer.

	  ok pyr@ gilles@

2009-07-19 21:06  jacekm

	* smtp_session.c: fix fwrite return code checking.  bug exposed by
	  recent change to fwrite, and reported by oga.  ok gilles

2009-06-29 12:11  martynas

	* runner.c: since upper-bound is not a power of two here, use
	  arc4random_uniform instead, to avoid modulo bias.  ok jacekm@,
	  gilles@

2009-06-26 13:48  okan

	* smtpd.h: locally define nitems() macro, #ifndef'd.

	  "please commit" gilles@ jacekm@

2009-06-20 09:46  jacekm

	* mta.c: Allocate memory for env->sc_ssl like in smtp; ok gilles@

	  From: Josh Elsasser <josh@elsasser.org>

2009-06-08 10:30  dlg

	* imsg.c: revert this change by eric@:

	  Make the imsg protocol network-safe.

	  it might be network safe, but half the imsg based daemons on my
	  firewalls dont run anymore.

2009-06-07 07:56  eric

	* control.c, enqueue.c, imsg.c, imsg.h, lka.c, mda.c, mta.c,
	  smtp.c: Change the way fds passed over a socket are retreived on
	  the receiving side.

	  Currently the receiver fetches an imsg via imsg_get() and if he
	  expects an fd, he then calls imsg_get_fd() to fetch the next fd
	  queued on the imsgbuf from which the imsg came.

	  This changes hides the fd queueing mechanism to the API user.
	  When closing an imsg with an fd, the message is flagged so that
	  the receiving end knows it must dequeue the fd in imsg_get() and
	  return it with the imsg structure.  This way there is no (less)
	  possible screw up from imsg_get_fd() not being called directly
	  after imsg_get() by the user. The retreived imsg is
	  self-contained.

	  ok pyr@, "I like that" henning@

2009-06-07 02:40  eric

	* imsg.c: Make the imsg protocol network-safe.

	  ok pyr@

2009-06-07 00:11  eric

	* imsg.c, imsg.h: change the imsg header fields a bit to prepare
	  for upcoming changes.  add a flag field, use u_int32_t for pid_t
	  and extend type to 32 bits for padding.

	  ok pyr@

2009-06-06 20:31  pyr

	* smtpd.h: Get ready for including imsg.h from a lib, when it comes
	  along.

2009-06-06 10:55  pyr

	* buffer.c, imsg.c: shuffle code around to achieve 0 length diff
	  nirvana between all the currently synced daemons' imsg.c, imsg.h
	  and buffer.c

2009-06-06 07:04  pyr

	* imsg.c: remove unnecessary and scary pid check in imsg_init.	ok
	  eric@, claudio@

2009-06-06 06:14  pyr

	* config.c, control.c, dns.c, imsg.c, imsg.h, lka.c, mda.c, mfa.c,
	  mta.c, queue.c, runner.c, smtp.c, smtp_session.c, smtpctl.c,
	  smtpd.c, smtpd.h: Sync with relayd: Stop pushing event handling
	  in the imsg framework.  Instead, provide a small glue layer on
	  top of both imsg and libevent.  This finally clearly separates
	  event handling and imsg construction.

	  Sidetrack bonus: remove the mega-ugly hack of having a dummy
	  imsg_event_add stub in smtpctl.  ok jaceckm@

2009-06-06 05:22  jacekm

	* smtpctl.c: if smtpctl is run in unsupported mode, exit with a
	  warning instead of defaulting to smtpctl-mode; aja@ ok

2009-06-06 01:04  jacekm

	* parse.y, smtpd.conf.5: if path in "deliver to maildir path" is
	  omitted, use ~/Maildir by default; from gilles@

2009-06-05 23:55  jacekm

	* store.c: Remove unneeded function that prepends mail with "From "
	  marker.  mail.local(8) does it for us in mbox case, maildir
	  doesn't need this, and in ext. mda case we delegate it to the
	  external program.

	  committing on gilles@'s behalf

2009-06-05 23:15  pyr

	* buffer.c, imsg.h: bring buf_write which is going to be needed for
	  bgpd.

2009-06-05 22:43  pyr

	* buffer.c, control.c, dns.c, enqueue.c, imsg.c, imsg.h, lka.c,
	  mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c, smtp_session.c,
	  smtpd.c, smtpd.h: make smtpd's imsg lib ready, just like relayd
	  and ospfd.  ok gilles@, jacekm@

2009-06-05 10:50  pyr

	* smtpd.h: Destroy gilles' fantasy function.  ok by a
	  desillusionned gilles@

2009-06-04 00:04  jacekm

	* mda.c, mta.c, runner.c, smtpd.h: simplify struct batch; ok
	  gilles@

2009-06-03 20:16  gilles

	* smtpd.c, smtpd.h: rename sc_config to sc_conffile since that's
	  what this field is about, it will prevent a confusion with
	  sc_config which will be a pointer to the actual configuration.

2009-06-03 18:31  jacekm

	* lka.c: Improve error checking for the secrets encoding function;
	  ok gilles@ Pointed out by giovanni <qgiovanni@gmail.com>

2009-06-03 00:23  gilles

	* config.c, mta.c, parse.y, smtp.c, smtpd.c, smtpd.h, ssl.c: make
	  env->sc_listeners and env->sc_ssl pointers, one step further
	  toward configuration reloading without killing active sessions;
	  ok jacekm@

2009-06-02 01:15  gilles

	* lka.c, mfa.c: yet another cleanup in mfa/lka, don't roll their
	  own loops to release maps and rules when config.c provides us
	  with purge_config(), PURGE_MAPS and PURGE_RULES. kills lots of
	  lines with no functionnal change. ok jacekm@

2009-06-02 00:51  gilles

	* lka.c, mfa.c, ruleset.c: add new file ruleset.c with code related
	  to the ruleset matching, and kill the two or three "almost"
	  identical versions of ruleset matching loops from lka and mfa by
	  having one unified function in ruleset.c; ok jacekm@

	  while at it, bring maildir support back to life; trivial
	  one-liner by me

2009-06-01 23:19  gilles

	* lka.c: propagate the recipient domain through aliases expansion,
	  this fixes a bug that would trigger when smtpd.conf does not have
	  an "accept for local" rule and we attempt to deliver to a domain
	  for which we are a destination.

	  spotted by jacekm@, fix by me and ok jacekm@

2009-06-01 20:24  deraadt

	* lka.c, smtpd.c, smtpd.h, util.c: No need for save_getpwuid and
	  such functions which call endpwent.  endpwent is not needed
	  unless setpwent (with stayopen = 1) or getpwent was used.
	  getpwuid/getpwnam do not use getpwent; i think people must be
	  assuming this.  we are going to improve the man pages for this.
	  ok gilles

2009-06-01 20:02  jacekm

	* ssl.c: fix function name in log_debug

2009-06-01 16:53  gilles

	* smtp_session.c: display ssl negociation information in the
	  received line of incoming sessions; ok jacekm@

2009-06-01 16:38  jacekm

	* smtp.c: Don't destroy listening socket when pause/resume request
	  is received, use event_del/event_add instead; ok gilles@

2009-06-01 15:20  jacekm

	* control.c, dns.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c,
	  smtp.c, smtpd.c: Fix EV_READ/EV_WRITE testing inside IMSG
	  handlers. Based on similar change to the routing daemons by
	  claudio@; ok gilles@

2009-05-31 20:34  gilles

	* mta.c, smtp_session.c: when entering mta_connect() reset session
	  fd to -1 when connect timesout and we close the fd, reset session
	  fd to -1 in session_destroy(), only attempt to close session fd
	  if != -1

	  fixes a fatal in session_destroy() which happened because we
	  closed a fd after a timeout, but the session still assumed the fd
	  to be opened.

2009-05-31 01:53  gilles

	* makemap.c, mta.c, parse.y, smtpd.c, smtpd.conf.5, smtpd.h, ssl.c:
	  It is now possible to specify a certificate to use when relaying
	  to another host which requests client certificates:

		  accept [...] relay via [...] ssl certificate "mycert"

	  diff from Josh Elsasser <josh@elsasser.org>, tested and okayed by
	  me with no change but the addition of status 554 to the state
	  machine to deal with remote host telling us it doesn't like our
	  certificate.

2009-05-31 01:28  gilles

	* smtpd.c: fatal on setsockopt() failures

2009-05-30 18:32  gilles

	* mta.c: increment mta.sessions in when we allocate a new session
	  in mta

2009-05-30 18:30  gilles

	* mta.c, smtpctl.c: - increment stats.mta.sessions_active when
	  session is allocated in mta - reorder alphabetically and add mta
	  to the statistics

2009-05-30 18:22  gilles

	* smtp_session.c: fix a bug where sessions_active counter, used to
	  compute accept limits, was decremented below 0 after the recent
	  change that moved stats to shared mmap memory. session_destroy()
	  which is called from mta and smtp processes didnt differentiate
	  between them and decremented the counter when we had outgoing
	  sessions destroyed.

2009-05-28 10:50  jacekm

	* smtp_session.c, smtpd.h: Log the incoming message size; ok
	  gilles@

2009-05-28 10:48  jacekm

	* smtp_session.c: Log the "for <foo@bar.com>" part in the Received
	  field; ok gilles@

2009-05-28 10:43  jacekm

	* smtpd.conf.5: Match SMTPAUTH documentation with reality; ok
	  gilles@

2009-05-27 18:51  jacekm

	* parse.y: temporary fix to a ruleset processing bug that stems
	  from the fact that the ip address/subnet parsing isn't done in
	  the same way as in other daemons.

	  fix by gilles@

2009-05-27 15:14  jacekm

	* mta.c, smtp_session.c, store.c: Insert Received: at receive time
	  instead of delivery time; ok gilles@

2009-05-27 15:11  jacekm

	* smtp_session.c, smtpd.h: After a successful AUTH command
	  completes, reject any further AUTH commands.

	  ok gilles@

2009-05-27 15:09  jacekm

	* smtp_session.c, smtpctl.c, smtpd.h: request flood mitigation: 1)
	  each state may have 2 responses sent quickly; 2) more responses
	  are delayed exponentially, up to a defined limit.

	  Delay count is user visible (smtp.errors.delays).

	  ok gilles@

2009-05-25 16:00  jacekm

	* smtp.c, smtpd.c, smtpd.h: merge smtp_listener_setup into its only
	  caller; ok gilles@

2009-05-25 15:29  jacekm

	* smtp_session.c: Recent event masking scheme change turned the
	  S_GREETED and S_HELO cases in session_pickup into unreached code,
	  so remove them; ok gilles@

2009-05-25 13:17  jacekm

	* control.c, enqueue.c: Disallow submission using
	  /usr/sbin/sendmail while the server is paused, configuring, or
	  exiting; ok gilles@

2009-05-24 17:47  jacekm

	* smtp.c, smtp_session.c, smtpd.c, smtpd.h: Parent process
	  shouldn't be base64-decoding untrusted strings, move this code to
	  privsep smtp process; ok gilles@

2009-05-24 16:58  jacekm

	* smtp_session.c: Implement pipelining detection inside
	  session_readline, makes the calling code cleaner; ok gilles@

2009-05-24 16:38  jacekm

	* config.c, control.c, lka.c, mda.c, mfa.c, mta.c, queue.c,
	  runner.c, smtp.c, smtpd.c, smtpd.h: Parent process forks 3 types
	  of processes, track them all in a single tree using newly
	  introduced child struct.

	  Manage process titles centrally in struct smtpd.

	  ok gilles@

2009-05-24 16:22  jacekm

	* control.c, queue.c, runner.c, smtp.c, smtp_session.c, smtpctl.c,
	  smtpd.c, smtpd.h, ssl.c: Instead of keeping stats private to each
	  process, and querying every process individually whenever stats
	  need to be fetched, keep stats in MAP_ANON shared memory
	  allocated by parent.

	  This means control has direct access to stats and can respond
	  very quickly without troubling any other daemon processes.

	  ok gilles@

2009-05-21 03:27  gilles

	* parse.y: no longer create a dynamic map with 127.0.0.1 and ::1
	  for every single rule that has an implicit local source. instead
	  we create static "localhost" map before the configuration file is
	  parsed, we fill it with every single local address we can find,
	  and we have rules with implicit local source reference that
	  special map.

	  this unbreaks a behavior which I hated and which prevented:

		  accept for all relay

	  from accepting relaying if LOCAL session was initiated on any
	  interface but lo0.

2009-05-21 03:07  gilles

	* mfa.c: fix sockaddr_storage lenght check in mfa_check_source()

2009-05-20 18:12  jacekm

	* smtp_session.c: Delay enabling of EV_READ until S_INIT (smtps) or
	  S_TLS (starttls).  ok gilles@

2009-05-20 18:07  gilles

	* control.c, lka.c, mfa.c, smtpd.c: previous commit to add reload
	  support was missing some code, this diffs contains the missing
	  parts + a memleak plug

2009-05-20 16:36  gilles

	* lka.c, mfa.c: replace a TAILQ_FOREACH loop with a TAILQ_FIRST
	  loop when releasing entries of the tailq, this is how it must be
	  done.

2009-05-20 16:29  gilles

	* control.c, lka.c, mfa.c, parse.y, smtp.c, smtp_session.c,
	  smtpd.c, smtpd.h: first step towards configuration reload in
	  smtpd, smtpctl reload will parse the configuration file again and
	  replace current configuration with new one in all processes. what
	  we don't support yet is graceful restart, clients in sessions at
	  the moment of the reload will have a temp failure thrown at 'em
	  which is ok RFC-wise but which we will try to improve anyway.

	  tested with various setups, "diff reads good" jacekm@

2009-05-20 13:58  gilles

	* smtpctl.c: fix a pasto causing "smtpctl resume mta" to try to
	  resume mda spotted and diff by giovanni <qgiovanni@gmail.com>

2009-05-20 00:54  gilles

	* smtpd.c: ever since we switched from delivering to mboxes
	  ourselves to using the mail.local(8) utility,
	  parent_mailbox_init() has become useless, do not call it from
	  parent_mailbox_open() anymore, and kill it.

	  this fixes a bug which we were many to spot and which would cause
	  smtpd to create a file /var/mail/%u upon first delivery to a
	  mbox, then leave it there forever untouched.

2009-05-20 00:41  gilles

	* ssl.c: remove useless check on NULL ssl cert and key, the check
	  cannot be reached as we would exit earlier if either one is NULL.

	  diff by giovanni <qgiovanni@gmail.com>, had been sitting in my
	  mbox for a while, okayed by jacek and I

2009-05-19 14:33  jacekm

	* smtp_session.c: Accept STARTTLS only after EHLO; ok gilles@

2009-05-19 13:42  jacekm

	* smtp_session.c, smtpd.h: - Don't advertise nor accept STARTTLS
	  command when session is secure.  - Make the condition when
	  STARTTLS and AUTH are advertised & accepted more readable.

	  ok gilles@

2009-05-19 13:37  jacekm

	* smtpd.c, smtpd.h: Do not ever run /usr/sbin/sendmail, it could
	  link to sendmail interface for a different MTA. Use the binary in
	  /usr/libexec directly instead.

	  Based on remark claudio@ made in passing.

	  ok gilles@

2009-05-19 13:24  jacekm

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpd.c, smtpd.h: Verify the amount of IMSG payload is exactly as
	  expected; ok gilles@

2009-05-18 22:23  jacekm

	* smtp.c, smtp_session.c, smtpctl.c, smtpd.h, ssl.c: Complete
	  rework of bufferevent event masking allowing for  more
	  strictness: - Drop clients attempting command pipelining;
	  protects the daemon from all kinds of abuse.	- Replace
	  F_EVLOCKED flag with F_WRITEONLY which has cleaner sematics: when
	  up, session must not be destroyed nor read from, but may be
	  written to.  - Write callback becomes a central place for
	  enabling EV_READ.  - Delay bufferevent creation until after ssl
	  handshake is completed.

	  A bunch of session error stats were added to smtpctl's "show
	  stats".  These could help spotting event masking errors in the
	  future.

	  ok gilles@

2009-05-14 17:05  eric

	* control.c, enqueue.c, lka.c, mda.c, mfa.c, mta.c, queue.c,
	  runner.c, smtp.c, smtp_session.c, smtpd.c: use the nitems() macro
	  where appropriate

	  ok gilles@, jacekm@

2009-05-14 10:29  jacekm

	* smtp_session.c: correct function name in fatal

2009-05-13 23:29  jacekm

	* mta.c: do MX lookups in both "relay" and "relay via" case; ok
	  gilles@

2009-05-13 23:20  jacekm

	* aliases.c, map.c: log dbopen and db->get errors; based on diff
	  from Daniel Ouellet.	looks ok to gilles@

2009-05-10 16:24  jacekm

	* smtp_session.c: use both read and write timeout arguments in the
	  bufferevent_settimeout call; ok gilles@

2009-05-10 15:06  jacekm

	* smtp_session.c: use rfc number 4954 in auth_plain handler name,
	  rfc 4616 is implied because rfc 4954 references it.

2009-05-10 13:29  jacekm

	* makemap.c, queue_shared.c, runner.c, smtp.c, smtp_session.c,
	  smtpd.c, smtpd.conf.5, util.c: assert copyright; ok gilles@

2009-05-10 13:23  jacekm

	* smtp_session.c: RFC 4954 says the response to "AUTH PLAIN" must
	  be "334 ", not "334"; ok gilles@

2009-05-10 01:23  jacekm

	* smtp_session.c: correct AUTH PLAIN rfc number, no functional
	  change.

2009-05-09 22:04  jacekm

	* control.c: fix rare memleak; ok gilles@

2009-05-09 22:03  jacekm

	* smtp_session.c, smtpd.h: give few states more meaningful names;
	  ok gilles@

2009-05-09 20:59  jacekm

	* smtp.c, smtp_session.c: fix function names in log_debug

2009-05-09 19:04  jacekm

	* dns.c, lka.c, mta.c, smtp.c, smtpd.h: - New API to handle all DNS
	  query types (A, MX, PTR) asynchronously.

	  - Improve RFC compliance: CNAMEs are resolved, equal preference
	  MXs are randomized, relaying via MX that has equal/lower
	  preference than local server is prevented, decision on when to
	  treat domain name as implicit MX is better.

	  ok gilles@

2009-05-01 23:44  gilles

	* lka.c: initialize secret to NULL otherwise we may try to free a
	  junk pointer when F_AUTH is not set. i was going to look into the
	  issue, but i have received a diff from Simon Betrang
	  <janus@errornet.de>, thanks !

2009-04-29 01:11  gilles

	* lka.c, mfa.c, smtpd.h: smtp auth happened to work by luck because
	  delivery to mbox action was the first action of an enum and we
	  allocated a struct using calloc, but we did not properly
	  initialize the action for authenticated users.

	  while at it, change the name of path action flags so that we know
	  at first sight that they are path related.

	  this diff fixes the immediate issue but still needs work.  ok
	  jacekm@, "we'll work out a long term solution"

2009-04-29 00:38  jacekm

	* lka.c, smtp.c: fix a bug where client with unresolvable revdns is
	  never greeted; ok gilles@

2009-04-28 23:56  jacekm

	* smtp_session.c: don't use strlcpy before calling a function that
	  uses strlcpy internally anyway; ok gilles@

2009-04-28 23:56  gilles

	* mta.c: in mta, change the batch status to S_BATCH_TEMPFAILURE by
	  default so that we need to explicitely set success and permanent
	  failures, this way if we hit any condition that we don't
	  explicitely flag as permanent failure the delivery will be
	  rescheduled later.

	  while at it, made various checks more strict to prevent hiding
	  bugs and a bit of knr cleanups

	  discussed with and "reads good" jacekm@

2009-04-28 23:55  jacekm

	* smtp.c, smtp_session.c: make S_DATAREQUEST state similar to
	  S_{MAIL,RCPT}REQUEST; ok gilles@

2009-04-28 23:27  jacekm

	* mda.c, mfa.c, mta.c: let mta, mda, and mfa become idle - no
	  functional change; ok gilles@

2009-04-27 22:17  jacekm

	* smtp_session.c: kill 2-line session_msg_submit, used just once;
	  ok gilles@ long ago.

2009-04-27 18:22  jacekm

	* smtp.c: fix unlikely fd leak; ok gilles@

2009-04-27 18:20  jacekm

	* smtp_session.c: session_cleanup call in MAIL FROM handler may be
	  removed as a consequence of rev. 1.70. This makes session_destroy
	  the only caller so merge the two; ok gilles@

2009-04-27 18:15  jacekm

	* mfa.c: check message_id received from smtp uses valid format.

2009-04-27 18:10  jacekm

	* smtp_session.c: Disable EV_READ when setting F_QUIT flag up.
	  Malicious client may send more commands after QUIT, these must
	  not be processed; ok gilles@

2009-04-26 21:55  gilles

	* ssl_privsep.c: sync with changes in relayd, diff by reyk@ and
	  okayd by me

2009-04-24 17:26  jacekm

	* smtp_session.c: in session_pickup, do not handle S_RCPT state, it
	  must never be called in this state; ok gilles@

2009-04-24 12:02  jacekm

	* aliases.c, makemap.c, smtpd.h, util.c: Make aliases
	  case-insensitive, issue reported by Daniel Ouelett; ok gilles@

2009-04-24 11:38  jacekm

	* smtp.c, smtp_session.c: Enclose common imsg handling code in a
	  function, which additionally does some sanity checking. Fix a bug
	  that could lead to fatal under rare circumstances, exposed by
	  this newly added check; ok gilles@

2009-04-24 10:35  jacekm

	* smtp.c, smtp_session.c, smtpd.h: use same timeout at each session
	  state, and make use of bufferevent_settimeout instead of rolling
	  our own; ok gilles@

2009-04-24 10:32  jacekm

	* mfa.c, smtp_session.c, smtpd.h: kill unnecessary struct
	  message_recipient; ok gilles@

2009-04-23 10:28  jacekm

	* smtpctl.c: sort "show stats" output

2009-04-21 20:39  jacekm

	* runner.c, smtpd.c: small corrections to log_warns and fatals

2009-04-21 20:12  jacekm

	* enqueue.c, runner.c, smtpctl.c, smtpd.c, smtpd.h: Make
	  /usr/sbin/sendmail not fail due to smtpd being down.

	  The approach is to save cmdline + stdin in a file under a newly
	  added directory /var/spool/smtpd/offline (uid 0 gid 0 mode 1777).
	   Next time daemon starts, it uses information in that directory
	  to replay sendmail on user's behalf.

	  ok gilles@

2009-04-21 16:37  eric

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpd.c: correct some fatal(x) calls and error strings

	  ok gilles@ jacekm@

2009-04-20 20:48  jacekm

	* smtp_session.c: Allow MAIL FROM only in the S_HELO state, which
	  results in behaviour dictated by rfc in "4.1.4 Order of
	  commands".

	  pointed out and initial diff by pea@, ok gilles@

2009-04-20 19:40  jacekm

	* smtp_session.c: fix previous, evtimer_set should be called only
	  once, in session_init.

2009-04-20 19:07  jacekm

	* smtp.c, smtp_session.c, smtpctl.c, smtpd.h: Rewrite smtp session
	  timeouts; use evtimer_* from event(3) instead of regularly
	  walking session tree in search of idle clients. Gives the smtp
	  process a chance to become idle.

	  As a bonus, add smtp.sessions.timeout counter to "smtpctl show
	  stats".

	  ok gilles@

2009-04-19 14:48  jacekm

	* smtp_session.c: Wrap the EV_READ+EVLOCKED dance in one well
	  documented function.	Additionally, check that EVLOCKED is not
	  already set, which would indicate an attempt to send IMSG w/o
	  waiting for reply for some other IMSG sent earlier.

	  ok gilles@

2009-04-19 14:42  jacekm

	* queue_shared.c: error checking for readdir(2); ok gilles@

2009-04-18 23:13  jacekm

	* runner.c: correct function name in fatal

2009-04-18 23:01  jacekm

	* queue.c: remove dead code; made possible by previous commit.

2009-04-17 18:26  jacekm

	* enqueue.c: handle case when no input is provided, fixes confusing
	  error:

	  $ echo -n | sendmail root sendmail: write: connection closed $

2009-04-16 22:13  sobrado

	* newaliases.8: fix a few more typos found by spell(1); rectify a
	  double "with" pointed out by jmc@ while looking at this diff.

	  ok jmc@, reyk@ (for the hostapd part)

2009-04-16 17:35  jacekm

	* control.c, enqueue.c, mfa.c, queue.c, smtp.c, smtp_session.c,
	  smtpctl.c, smtpd.h: Total rewrite of the sendmail interface. Adds
	  support for -t, -v, and -F cmdline args. Also, date and
	  Message-Id headers are added when missing.

	  The main trouble with the current enqueue code is that it
	  requires dealing with problems in the control process that are
	  already solved in the smtp process, ie. duplicating a lot of code
	  which interacts with untrusted clients. This diff solves this by
	  making sendmail obtain a SMTP socket from smtp via smtpd.sock,
	  and using that socket to deliver the message. For smtpd it looks
	  as if connection was made from the network, only difference being
	  the F_MESSAGE_ENQUEUED message flag, handy when differentation
	  between local and remote deliveries is wanted.

	  Most of the features come from the femail program, created by
	  henning@.

	  Additional testing by Nigel J. Taylor.

	  ok gilles@, henning@ happy with smtpd using femail code

2009-04-15 22:36  jacekm

	* smtpd.c: don't call setproctitle for parent, at least one process
	  should display cmdline arguments the daemon was started with; ok
	  gilles@

2009-04-15 22:34  jacekm

	* smtpctl.c, smtpd.h, ssl.c: s/ssmtp/smtps/; ok gilles@

2009-04-15 22:02  jacekm

	* mta.c: fix a bug where after all MX-es were found to be
	  non-contactable, smtpd would treat the delivery as successful; ok
	  gilles@

2009-04-12 18:03  gilles

	* parse.y: Code assumed the certificate name to always match the
	  interface name, even when a certificate name was explicitely
	  provided. This would cause imsg to fatal() because with some
	  configurations, it would look for the wrong name in the ssl tree
	  and would fail to find the proper cert.

	  issue spotted by Gregory Edigarov <gregory.edigarov@gmail.com>, I
	  found the fix just a few minutes ago when I succeeded to
	  reproduce the issue...

2009-04-12 17:42  gilles

	* runner.c: When runner_check_loop() detects a mail loop, remove
	  the envelope. This is only half of the problem solved, we need to
	  generate a mailer daemon too.  This fixes a bug in my smtpd where
	  it would try to schedule a message, detect that it is a loop and
	  not schedule it, then trying again at next queue walk ...

2009-04-12 14:33  gilles

	* queue_shared.c: when an error occurs while delivering a message
	  with an empty envelope as a sender, do not try to generate a
	  mailer daemon message for it.

	  fixes a crash experienced by sthen@ that I could reproduce

2009-04-10 07:35  jmc

	* smtpd.conf.5: tweaks;

2009-04-09 22:32  jacekm

	* smtpd.conf.5: make the manpage fairly complete, contains bits
	  from jmc@

2009-04-09 22:19  todd

	* smtp_session.c: fixes for smtp auth LOGIN, inspired from smtp
	  auth PLAIN fixes (NUL terminate buffers, duh!) with suggestions
	  from oga@ "please commit" jacekm@, ok gilles@ oga@

2009-04-09 21:49  jacekm

	* lka.c, mta.c, parse.y, smtp.c, smtp_session.c, smtpd.h, ssl.c:
	  change syntax of the "listen on" and "relay via" directives: 1)
	  kill the ssmtp keyword in "ssmtp listen on ..."; 2) kill the use
	  keyword in "... use certificate foo"; 3) tls no longer implicit,
	  user must explicitely use the tls or smtps option.  4) for "relay
	  via", move the tls/smtps options to right after the port
	  specification; makes it similar to "listen on".

	  These directives:

	    ssmtp listen on fxp0 use ceritifate "foo"
	    accept for all relay via tls "mx.bar.com"

	  now become:

	    listen on fxp0 smtps certificate "foo"
	    accept for all relay via "mx.bar.com" tls

	  ok gilles@

2009-04-05 18:33  gilles

	* lka.c: log_warn -> log_warnx

2009-04-05 18:10  gilles

	* enqueue.c: ignore -o option (for now at least) when working in
	  enqueue mode, this prevents smtpctl from choking and allows it to
	  work with more mua's by default.

	  spotted and added to my todo list by oga@

2009-04-03 07:20  oga

	* smtpd.c: The smtp auth PLAIN specification is weird. It's valid
	  (apparently for imap, mostly) to provide
	  "username1\0real_username\0password" as your base64 encoded
	  string for authentication. We currently don't handle that,
	  instead expecting the first byte to be a NUL.  So fix that up by
	  scanning for the first string, and ignoring it if it's there. The
	  string is also stupid in that the last bit (password) may not be
	  NUL terminated, so pay attention to that in our decoding and make
	  sure that it's always terminated correctly.

	  It's been discussed, and this decoding really should happen in
	  the unauthenticated process, not in the privileged one, but that
	  is another diff.

	  Problem found by todd@, who kindly helped me debug this and
	  confirmed that it now works with kmail, mutt and thunderbird.

	  "if it makes more stuff work, please commit" jacekm@.

	  -0- - not a smtpd hacker and I resent your implication.

2009-03-31 23:03  tobias

	* parse.y: Fixed memory leaks which would occur if the second of
	  two memory allocations fails.

	  looks right deraadt, krw ok henning

2009-03-29 16:18  jacekm

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtpd.c: turn some log_debugs into log_warns or even fatals;
	  "looks ok" gilles@

2009-03-23 22:48  jmc

	* makemap.8, newaliases.8, smtpctl.8, smtpctl.c, smtpd.8: various
	  minor improvements; ok jacekm gilles

2009-03-23 09:25  tobias

	* mda.c: Fixed a leaking of a fd each time a file is delivered to a
	  mbox, which was introduced in revision 1.7.

	  ok and log message by gilles

2009-03-22 23:53  gilles

	* lka.c, runner.c, smtpd.c, smtpd.h: fix a bug in the resolution of
	  forward files which would cause usernames not to be taken into
	  account if they had no ~/.forward file AND were the result of an
	  alias expansion that expanded to more than one username.

	  while at it, I spotted another bug where I would check
	  T_MDA_MESSAGE on the flags field instead of the type field. the
	  bug could cause two MDA message to end up in the same batch which
	  is no longer valid.

2009-03-22 14:52  ian

	* smtpctl.c: trivial message repair, ok jacek@

2009-03-20 10:34  gilles

	* lka.c: initialize variable before using it as a counter in a loop

	  spotted and fix by Matthew Haub
	  <matthew.haub@alumni.adelaide.edu.au>

2009-03-19 23:03  jacekm

	* makemap.c: since maps may contain secrets, carry ownership and
	  perms from source file to db file; ok gilles@

2009-03-19 21:27  jacekm

	* smtpd.h: make action_type == 0 mean A_INVALID, not A_RELAY; ok
	  gilles@

2009-03-19 01:40  gilles

	* parse.y: when listen was declared without a port parameter, it
	  would get it wrong because of a missing htons()

2009-03-19 01:12  gilles

	* mta.c: in the event of a timeout, mxhost is passed to
	  TAILQ_REMOVE before it is initialized.  spotted and diff by
	  Matthew Haub <matthew.haub@alumni.adelaide.edu.au>

2009-03-19 00:51  gilles

	* mta.c: remove debug X-Cipher and turn it into a useful log_info()

2009-03-18 15:48  gilles

	* control.c: previous commit removed "else" condition

2009-03-18 11:29  gilles

	* runner.c: we can no longer create batches of MDA deliveries, so
	  make sure runner does not do a batch lookup when dealing with a
	  MDA message

2009-03-18 02:56  jacekm

	* Makefile: unbreak make release, spotted by todd and kurt

2009-03-18 01:07  gilles

	* mta.c: in mta, when remote host advertises AUTH, do not attempt
	  to authenticate unless we do have F_AUTH set on the mxhost (which
	  means we explicitely mentionned authentication in config) and we
	  did find credentials in the secrets map. issue and initial diff
	  from Rivo Nurges <rix@estpak.ee>

2009-03-17 01:18  gilles

	* smtpd.conf.5: update a bit, but more work is needed on this man
	  page, working on it and will commit an up to date version
	  tomorrow

2009-03-17 01:00  gilles

	* smtpd.conf: move smtpd.conf to etc/mail/ directory. it is not
	  installed yet by the build

2009-03-17 00:40  gilles

	* smtpd.conf: change smtpd.conf to what it will be by default: -
	  only listen on lo0 - support aliases - accept mail for
	  "localhost" and the system hostname - accept relaying mail for
	  all domains

2009-03-17 00:26  gilles

	* parse.y: in accept rules, support "for local" as a destination
	  which is an alias to "localhost" and system hostname. this allows
	  us to ship with a config file that goes:  accept for local
	  deliver to mbox  , and which will allow us to have mail working
	  sanely out of the box.

2009-03-16 23:40  gilles

	* smtpctl.8: update smtpctl.8 with new smtpctl commands

2009-03-16 22:15  gilles

	* newaliases.8: - mention /etc/mail/virtual in FILES section

2009-03-16 21:43  gilles

	* makemap.8: mention /etc/mail/secrets in the FILES section

2009-03-16 21:39  gilles

	* ARCHITECTURE: this file has been deprecated for a while and will
	  not be updated, so lets just remove it as some people may believe
	  it actually describes the architecture ...

2009-03-15 20:32  gilles

	* smtp.c, smtp_session.c, smtpctl.c, smtpd.h, ssl.c: since we are
	  going to share code in smtp sessions and mta sessions, we need to
	  also share the statistics structure, still being worked on

2009-03-15 20:15  gilles

	* mda.c, mta.c, runner.c, smtpd.h, store.c: the mda process no
	  longer uses struct batch as its central structure to deal with
	  deliveries, it now uses struct session just like mta and smtp
	  processes. we now keep the mbox and message descriptors in the
	  session, saving space in struct message which is now as small as
	  we can make it.  While at it, plugged a memory leak and did some
	  cosmethic changes

	  This was the last planned change to our struct message which
	  means that later changes will no longer require a queue flush
	  before rebuild.

2009-03-15 19:12  gilles

	* smtp.c, smtp_session.c, smtpd.h: save 4 bytes per message by
	  moving the datafp field of struct message to struct session where
	  it really belongs.

2009-03-12 12:08  pea

	* mta.c, smtpd.h, store.c, util.c: Add new function time_to_text to
	  correctly display the date.  Use it to display the date in
	  received from header and when we store headers.

	  ok jacekm@

2009-03-11 12:11  pea

	* lka.c: getmxbyname() returning a value != 0 does not necessarily
	  means it failed

	  ok gilles@

2009-03-11 10:58  gilles

	* smtp_session.c: fix log_info(), while other processes know about
	  message uid, the smtp process only knows about message id

	  bug spotted by pea@

2009-03-10 23:33  jacekm

	* mda.c, mta.c, smtp_session.c, smtpd.h: implement basic logging,
	  needs more work; ok gilles@

2009-03-10 22:14  jacekm

	* smtpd.c: when calling external mda, use restricted environment;
	  ok gilles@

2009-03-10 20:13  jacekm

	* smtpd.c: run external mda with cwd set to $HOME or /; ok gilles@

2009-03-10 20:09  jacekm

	* smtpd.c: kill few lines, saving one seteuid(2) call; ok gilles@

2009-03-10 19:44  jacekm

	* smtpd.c: - Use setsid(2) to create new process group for external
	  mda.	- Unignore SIGPIPE, otherwise it remains ignored in forked
	  mda.	- Use closefrom(2) to close all descriptors apart from
	  stdin/stdout/stderr.

	  ok gilles@

2009-03-10 14:05  jacekm

	* smtpd.c: it's simpler to use pipe(2) than socketpair(2) to
	  communicate with external mda; ok gilles@

2009-03-10 11:01  jacekm

	* smtpd.c: fork(2) or socketpair(2) failures are temporary,
	  delivery attempt should be retried later; ok gilles@

2009-03-10 02:25  jacekm

	* util.c: ascribe copyright to code taken from OpenSSH, pointed out
	  by deraadt

2009-03-10 00:35  jacekm

	* smtpd.c, smtpd.h, util.c: run external mda directly, not via sh
	  -c; this steals addargs() API from OpenSSH; ok gilles@

2009-03-09 17:31  jacekm

	* lka.c, makemap.c, smtpd.h: Drop ALIAS_TEXT, plain maps got
	  implemented in a different way; ok gilles@

2009-03-09 12:29  jacekm

	* queue_shared.c: add hunk that should have been included in rev.
	  1.12, fixes occasional crash; ok gilles@

2009-03-09 02:43  gilles

	* lka.c, mta.c, parse.y, runner.c, smtpd.conf, smtpd.h: add basic
	  support for outgoing authentication (AUTH PLAIN over ssl) which
	  can be turned on by adding "enable auth" to a "relay via" rule.
	  this made me rework the mx resolution so that it is done by the
	  mta process and not the runner process anymore.

2009-03-08 22:51  gilles

	* smtpd.conf: adapt example to reflect a recent change in parse.y

2009-03-08 22:50  gilles

	* parse.y: supporting delivery to a mbox that's not in
	  _PATH_MAILDIR is not supported, if someone comes with good
	  rationale why this is needed, we'll consider it, meanwhile it's
	  more work than it looks like and it brings a lot of pain.

	  discussed with jacekm@ and deraadt@

2009-03-08 21:39  gilles

	* control.c, smtpd.h: when operating in enqueue mode, it was easy
	  to make smtpctl fatal() by writing a small app that sent out of
	  order imsg's. prevent this by use of a state machine and read
	  event masking.

	  issue spotted by jacekm@, temporary fix by me. there are ideas
	  around this, but we want to experiment them a bit and they are
	  low priority.

2009-03-08 20:11  gilles

	* mfa.c, smtp_session.c, smtpd.h: shrink struct message a bit by
	  removing a couple fields which are no longer used and by moving
	  the rcpt count in struct session where it really belongs

	  while at it, remove some unused splay tree generation in mfa

2009-03-08 18:54  gilles

	* lka.c, mfa.c, smtpd.c, smtpd.h: ~/.forward files handling was
	  fixed recently so that it is the privileged process that does the
	  opening, this commit does some cleanup, and fixes a bug I
	  experienced today which was caused by a use-after-free.

	  I did some testing to make sure a user cannot cause smtpd to
	  deadlock, or loop, with broken setups (self-referencing
	  forwards/aliases, empty files, broken files...), but if you are
	  playing with aliases/forwards PLEASE let me know of any bug you
	  run into.

2009-03-07 00:45  gilles

	* smtpd.h: missing prototype

2009-03-07 00:38  gilles

	* map.c: introduce map_dblookup() which allows us to query db maps
	  for plain entries and catch (and warn) about invalid map types.

2009-03-07 00:32  gilles

	* makemap.c: make_plain() deals with a c-string, val->size should
	  contain the nul-byte or we will truncate the last character of
	  every value we store in a map.

2009-03-07 00:29  gilles

	* makemap.c: fix a bug in the generation of plain maps which would
	  cause the value not to be correctly inserted into the map.

2009-03-04 01:00  gilles

	* lka.c, smtpd.c: plug a memory leak, remove lka session from the
	  the lka session tree when we are done expanding aliases/forwards,
	  and cleanup a bit the expansion code so that I can soon remove
	  some of the duplication.

2009-03-04 00:33  gilles

	* lka.c, smtpd.h: when forwards/aliases expansion fails in an lka
	  session, make sure that mfa is notified so that the session does
	  not hang

2009-03-04 00:23  gilles

	* forward.c, lka.c, smtpd.c, smtpd.h: Fix a long standing issue
	  where ~/.forward files were opened by user _smtpd causing them
	  not to be handled when a user's homedir is set to mode 0700. I
	  still need to do some cleanup and make sure it works as it
	  should, but this diff provides better behavior than what we had.

2009-03-03 16:47  gilles

	* smtpd.c, smtpd.h, store.c: fix mbox locking by having it done by
	  mail.local(8) which in turns uses lockspool(1). this means our
	  mbox delivery follows a code path that has become almost
	  identical to external mda deliveries. this is the first of a
	  serie of diffs actually...

	  lockspool(1) suggestion by deraadt@, mail.local(8) idea by
	  jacekm@, and fix and testing by me

2009-03-01 22:58  jacekm

	* smtpd.c, smtpd.h, util.c: - Refuse delivery to mbox that is a
	  symlink, pipe, chardev, etc. etc.  - Introduce secure_file, based
	  on secure_filename from OpenSSH, it checks that mbox has right
	  perms, and that path components are trustworthy, too.

	  ok gilles@

2009-03-01 22:36  jacekm

	* smtpd.c: open mbox with O_EXLOCK (better than open+flock), and
	  without O_SYNC, since fsync is done in final safe_fclose; ok
	  gilles@

2009-03-01 16:06  jacekm

	* smtpd.c: fix possible NULL dereference when getpwnam fails; ok
	  gilles@

2009-03-01 14:08  jacekm

	* smtpd.c: make the condition under which delivery is made by
	  SMTPD_USER more explicit; ok gilles@

2009-03-01 14:07  jacekm

	* smtpd.c: simplify *_open functions by passing them char * instead
	  of struct path *; ok gilles@

2009-03-01 14:05  jacekm

	* control.c: deny regular users to run "smtpctl show stats" and
	  "smtpctl schedule"; ok gilles@

2009-03-01 13:12  jacekm

	* queue.c, smtpctl.c, smtpd.h: In "smtpctl show stats", break
	  queue.inserts into queue.inserts.remote and queue.inserts.local;
	  ok gilles@

2009-03-01 13:10  jacekm

	* enqueue.c: ss_len was set to sizeof pointer, should be sizeof
	  structure; ok gilles@

2009-02-25 10:30  gilles

	* control.c: NULL pointer dereference	spotted by Matthew Haub
	  <matthew.haub@alumni.adelaide.edu.au>

2009-02-25 10:08  jacekm

	* smtpd.c: remove chown's called when running with user privs, ie.
	  basically noops; ok gilles@

2009-02-24 22:40  jacekm

	* lka.c: fix tilde expansion (eg. ~/Mail); ok gilles@

2009-02-24 13:07  gilles

	* control.c, parser.c, parser.h, queue_shared.c, runner.c,
	  smtpctl.c, smtpd.h, util.c: teach smtpctl's parser how to deal
	  with parameters that are not necessarily a token so that it is
	  possible to do: smtpctl schedule <message id/uid>

	  introduce F_MESSAGE_FORCESCHEDULE which lets the runner schedule
	  a message even if the retry delay has not been expired.

	  F_MESSAGE_ENQUEUED is a valid flag for a message and should not
	  cause an\ errx() in smtpctl show queue

2009-02-23 23:59  gilles

	* smtpd.h, util.c: add valid_message_id() and valid_message_uid()
	  which test that a message id and uid do not look wrong. this was
	  not needed earlier because we only deal with message id's coming
	  from trusted sources, but smtpctl will soon have a new feature
	  which requires us to deal with user provided message id's.

2009-02-23 01:51  chl

	* queue_shared.c, smtp.c, smtpd.c, store.c: add missing headers
	  needed by time()

	  ok jacekm@ gilles@

2009-02-23 00:29  jacekm

	* queue_shared.c, runner.c: Fix race possible between runner and
	  queue when starting up.  runner_reset_flags would attempt to
	  update envelope, but its envelope.tmp could be renamed by
	  queue_purge. The fix is to store envelope.tmp in a place no other
	  process writes to, and /queue/envelope.tmp is perfect for this.

	  ok gilles@

2009-02-23 00:21  jacekm

	* lka.c: reorganize code so that couple of indentation levels can
	  be removed; ok gilles@

2009-02-22 20:07  chl

	* control.c, lka.c, mda.c, mfa.c, mta.c, queue.c, smtp.c: add
	  missing headers

	  ok gilles@

2009-02-22 12:59  jacekm

	* mta.c, smtp_session.c, smtpd.h, util.c: put repeated inet_ntop
	  calls into new func ss_to_text, which uses getnameinfo
	  internally; ok gilles@

2009-02-22 12:55  jacekm

	* queue_shared.c: simplify qwalk() error handling; ok gilles@

2009-02-22 12:44  form

	* control.c, dns.c, enqueue.c, forward.c, lka.c, makemap.c, mta.c,
	  parse.y, queue_shared.c, runner.c, smtp.c, smtpd.c, util.c:
	  replace MAX* constants by sizeof where possible

	  ok jacekm@

2009-02-20 19:47  jacekm

	* queue.c: purge /enqueue at startup; ok gilles@

2009-02-20 16:27  pea

	* mta.c: Fix "Received: from" headers

	  ok gilles@

2009-02-19 12:33  jacekm

	* smtp_session.c, smtpd.h: don't let libevent buffer long lines
	  forever; ok gilles@

2009-02-18 23:39  jacekm

	* mfa.c, smtpd.h, util.c: - add basic syntax checking to mfa -
	  decline source routing at MAIL FROM, strip at RCPT TO

	  ok gilles@

2009-02-18 17:42  jacekm

	* mfa.c: IMSG_MFA_RCPT handlers are almost identical, put common
	  code in new mfa_test_rcpt; ok gilles@

2009-02-18 13:06  jacekm

	* lka.c: fix compiler warning; ok gilles@

2009-02-18 01:29  gilles

	* smtp.c, smtp_session.c: previous commit was incomplete, this
	  fixes ssmtp

2009-02-18 01:17  gilles

	* smtp.c, smtp_session.c: smtp_accept() now requests from lka that
	  it performs the hostname lookup and inserts the session into the
	  session tree. session_init() is called only when we receive the
	  resolution answer.

	  this fixes a race condition that would sometimes cause the
	  hostname to appear as "<unknown>" in headers just because dns was
	  lagging, and it unbreaks ssmtp support which suffered from th
	  very same race condition.

2009-02-18 00:50  jacekm

	* makemap.c: - flock input file while the database is being built -
	  make newaliases finish with short summary

	  ok gilles@

2009-02-18 00:46  jacekm

	* makemap.8, newaliases.8: sync makemap man page with the code.
	  create separate page for newaliases which points at makemap as
	  the preferred utility; ok gilles@

2009-02-18 00:43  jacekm

	* makemap.c, smtpd.h: make newaliases read aliases path from
	  smtpd.conf; idea discussed with gilles@, pyr@ and henning@, diff
	  ok gilles@.

2009-02-17 23:49  jacekm

	* control.c, smtpctl.c: imsg_init depends on ibuf being calloc'd.
	  fix few places where malloc is used instead; ok gilles@

	  Problem made visible by malloc.conf = AFGJ, and pointed out by
	  otto@

2009-02-17 23:15  jacekm

	* lka.c: kill unused func lka_resolve_rcpt()

2009-02-17 22:53  gilles

	* smtp.c, smtp_session.c: after a message has been commited to
	  queue, do not incondtionnally clear the message id and uid
	  immediately. only do it if session has been flagged with F_QUIT,
	  otherwise session_pickup() will do it when in state S_DONE.

	  this fixes a bug reported by pea@ where the message id was not
	  displayed in the "message accepted for delivery" line.

2009-02-17 22:38  gilles

	* mfa.c: - remove two debug messages

2009-02-16 13:10  jacekm

	* config.c: Process which connects with a pool of cloned processes
	  needs to keep open all pipes going in their direction; ok pyr@

2009-02-16 11:15  jacekm

	* queue_shared.c: Don't warn about F_MESSAGE_SCHEDULED flag being
	  present in on-disk version of the envelope; ok gilles@

2009-02-15 14:44  jacekm

	* queue_shared.c: kill local vars that are used only once; ok
	  gilles@

2009-02-15 14:12  jacekm

	* dns.c, lka.c, smtpd.h: If MX query fails due to DNS error, do not
	  attempt more queries; ok gilles@

2009-02-15 11:32  jacekm

	* config.c, control.c, lka.c, mda.c, mfa.c, mta.c, queue.c,
	  runner.c, smtp.c, smtpd.c, smtpd.h: New config.c that allows for
	  process cloning. Done by pyr@ for relayd at n2k9, and adapted to
	  smtpd; ok gilles@

2009-02-15 10:58  jacekm

	* dns.c: Fix a bug where list of 6 MXs or more was not handled
	  correctly.  Pointed out by & ok sthen@, ok gilles@.

2009-02-14 19:37  jacekm

	* makemap.8, makemap.c, smtpd.h: Implement makemap -t and -o, for
	  output type and dest resp.; ok gilles@

2009-02-14 18:49  jacekm

	* runner.c: Initialize time_t now as necessary, fixes delivery
	  rescheduling; ok gilles@

2009-02-14 01:00  jacekm

	* queue_shared.c: Display envelope status & flags in "show queue";
	  ok gilles@

2009-02-14 00:54  jacekm

	* lka.c: Fix a crash in lka caused by wrong assumption that we
	  would never exceed MXARRAYSIZE * 2 addresses.

	  Commited on behalf of gilles@ who hasn't got access to a safe box
	  at the moment.

2009-02-13 21:44  jacekm

	* smtpctl.c: Make stats output more sysctl-like by killing spaces
	  around '='; ok gilles@

2009-02-13 20:59  jacekm

	* smtp_session.c: Ensure ss is never dereferenced when NULL. Can't
	  happen with current code, but it could in future, and fatal is
	  better than segv. Reported by sthen@.  ok gilles@ sthen@

2009-02-05 22:25  gilles

	* ssl.c: when calling ssl_session_destroy() from mta, our session
	  will have a NULL s->s_l field. this commit fixes a crash in mta
	  caused by a NULL deref.

2009-01-30 22:52  gilles

	* smtp_session.c, smtpctl.c, smtpd.h, ssl.c: when decreasing ssl
	  related counters, make sure the session was flagged as F_SECURE.
	  while at it, add "smtp.sessions.aborted" which keeps track of
	  sessions which were interrupted before completion.

2009-01-30 22:40  gilles

	* smtp.c, smtp_session.c, smtpctl.c, smtpd.h, ssl.c: improve
	  statistics for smtp process. not only collect the current
	  sessions count, but also the total sessions count, ssmtp sessions
	  (both current and total) and starttls sessions (both current and
	  total)

	  # ./smtpctl/smtpctl show stats|grep smtp.sessions smtp.sessions =
	  0 smtp.sessions.active = 0 smtp.sessions.ssmtp = 0
	  smtp.sessions.ssmtp.active = 0 smtp.sessions.starttls = 0
	  smtp.sessions.starttls.active = 0 #

2009-01-30 22:22  gilles

	* smtp.c, smtp_session.c, smtpctl.c, smtpd.h: clear the F_EVLOCK
	  flag earlier to prevent the error event handler from being called
	  again with F_EVLOCK set. this fixes a bug where disconnect after
	  smtpd sends greeting and before entering any command failed to go
	  into session_destroy().

	  while at it, rename the "smtp.clients" statistic to
	  "smtp.sessions" and add counters to struct s_smtp so that I can
	  add ssmtp and starttls with my next commit ;)

2009-01-30 21:11  form

	* smtpd.h, store.c: Do not break header for messages received via
	  smtp.

	  look ok gilles@

2009-01-30 18:34  gilles

	* smtp.c, smtp_session.c, smtpd.c, smtpd.h: bump descriptors limit
	  to the max and set the maximum connections count to three
	  quarters of that limit (a session typically has 3 descriptors).
	  when we hit that limit, we stop accepting connections, and when
	  client closes a session, we start accepting connections again.
	  this prevents us from going into a session that is likely to fail
	  because of scarce resources.

	  idea discussed with jacekm@, code mostly ripped from relayd

2009-01-30 17:37  gilles

	* queue_shared.c, smtp.c, smtp_session.c, smtpd.h: fix a very
	  annoying events masking issue which would cause a fatal() to be
	  hit under certain conditions; while tracking the bug I ran into
	  other bugs which were kind of related and could cause us to hit a
	  fatal() too.

	  fix by me, but with lots of testing and investigation with
	  jacekm@, ok jacekm@

2009-01-30 11:09  form

	* parse.y: more const -> sizeof() no binary changes

	  ok gilles@

2009-01-30 11:03  form

	* smtpd.c: fix debug message

	  ok gilles@

2009-01-30 07:19  form

	* aliases.c: o remove useless `if's o replace constants by sizeof
	  where possible

	  ok gilles@

2009-01-29 23:34  jacekm

	* smtpctl.c: fix compiler warning

2009-01-29 22:59  jacekm

	* control.c, parser.c, parser.h, queue.c, runner.c, smtp.c,
	  smtp_session.c, smtpctl.c, smtpd.c, smtpd.h: Implement "smtpctl
	  show stats"; ok gilles@

2009-01-29 22:50  form

	* forward.c: better parsing of .forward files

	  ok gilles@

2009-01-29 16:40  gilles

	* mta.c, smtp_session.c, smtpd.h: missing prototype for
	  session_respond() in mta, move session_respond()'s prototype to
	  smtpd.h spotted and diff from Oleg Safiullin <form@pdp-11.org.ru>

2009-01-29 16:27  gilles

	* smtp_session.c: - remove debug message

2009-01-29 16:20  gilles

	* enqueue.c, mta.c, smtp_session.c, smtpd.h, store.c: Received
	  header line was incomplete for mail submitted through the
	  enqueuer as well as for some outgoing messages, this is fixed now

2009-01-29 15:50  gilles

	* mta.c: fix a bug in mta's event masking

2009-01-29 15:25  gilles

	* mta.c, smtpd.h, ssl.c: initial starttls support in mta, this
	  allows:

		  accept for domain "openbsd.org" relay via tls
	  "mx.example.org"

	  to ensure the relaying of mail for whoever@openbsd.org will
	  happen through a secure tls (STARTTLS) session. failure to
	  establish a tls session will be considered as a permanent
	  failure. As a side effect:

		  accept for domain "openbsd.org" relay via ssl
	  "mx.example.org"

	  can now work as well and ensure that the relaying happens through
	  ssmtp OR tls, but never through an unsafe channel. no need to
	  specify a port, they are automatically detected if not specified.

	  still a work in progress, don't expect that it will work
	  flawlessly.

2009-01-29 14:00  gilles

	* mta.c, smtpd.h, ssl.c: bring initial support for SSL in the mta
	  part of smtpd, allowing for:

		  accept for domain "openbsd.org" relay via ssmtp
	  "mx1.example.org"

	  to ensure that deliveries for whatever@openbsd.org goes through
	  an SSL session to mx1.example.org

2009-01-29 13:43  jacekm

	* queue.c, queue_shared.c, runner.c, showqueue.c, smtpctl.c,
	  smtpd.h: Common queue walking code for smtpd and smtpctl. Kills
	  majority of showqueue.c, the remaining code was moved to
	  queue_shared.c; ok gilles@

2009-01-29 11:18  gilles

	* enqueue.c: - remove a very annoying debug printf()

2009-01-29 00:46  gilles

	* mta.c: fix missing prototype and format related warnings

2009-01-29 00:38  gilles

	* mta.c: now that mta uses a struct session, it can also use
	  session_respond() just as smtp_session.c does, so move all of the
	  evbuffer_add_printf() calls out of the way and replace them with
	  session_respond() call.

2009-01-29 00:13  gilles

	* mta.c, smtpd.h: mta session state belongs to struct session, not
	  struct batch, remove the state field from struct batch and
	  propagate the change

2009-01-28 23:54  gilles

	* mta.c, smtpd.h: everything we need for the event handling dance
	  is in struct session, the write handler has been changed to set
	  the bufferevent that's in there rather than the one in struct
	  batch. since struct batch is no longer doing anything useful for
	  events handling, we can remove many fields of it.

2009-01-28 23:27  gilles

	* mta.c: since we're expanding "relay via ssl foobar.org" into two
	  mxhosts (one with F_SSMTP on port 465 and one with F_STARTTLS on
	  port 25) both mxhosts should only retain the flag that they will
	  use ("via ssl" means the mxhost before expansion has both flags
	  set). this will make mta_connect() simpler when we bring ssl
	  support in the way.

2009-01-28 22:44  gilles

	* mta.c, parse.y, smtpd.h: first steps towards better mta code.
	  currently mta uses struct batch to store a lot of its session
	  related code, but this is just not right and this commit starts
	  making mta code aware of struct session. This will ease the
	  implementation of ssl sessions in mta.

	  while at it, make mta autodetect port to use if it isn't provided
	  in a rule but can be derived from a parameter (i.e: "relay via
	  ssmtp ...").

2009-01-28 20:49  jacekm

	* enqueue.c: cleanup; ok gilles@

2009-01-28 20:38  gilles

	* smtp.c, smtpd.c, smtpd.h: when pausing listeners, do not simply
	  disable their events as new clients would still be able to
	  connect. instead, at pause time we close and remove the
	  listeners, and at resume time we request the parent to
	  reconfigure all listeners.

	  discussed with pyr@

2009-01-28 19:10  jacekm

	* smtp_session.c: reuse recipient_to_path; ok gilles@

2009-01-28 18:43  gilles

	* lka.c, runner.c: relayhost flags were not properly copied to the
	  relayhost array of the batch we're handing over to mta. this
	  prevented mta from knowing if a session has to be established
	  over ssl or not.

2009-01-28 18:29  jacekm

	* queue.c, queue_shared.c, runner.c, smtp_session.c, smtpd.h: Make
	  races between queue and runner impossible by implementing the
	  policy: 1) queue never reads /queue.	2) queue writes to /queue
	  only at message injection time.  3) runner does all reading, and
	  all writing apart from 2).

	  ok gilles@

2009-01-28 15:15  gilles

	* enqueue.c: if recipient was provided as a username, append the
	  local hostname, this unbreaks:

	  $ echo foo | mail gilles send-mail: invalid recipient address.

2009-01-28 14:29  gilles

	* mta.c, runner.c, smtpd.h: bring loop detection support. we handle
	  this with a qmail-like approach which consists of checking
	  headers for a custom header, but we also count how many hops the
	  mail went through and use a hard limit (currently set to 100 as
	  was recommanded by RFC) as a safe-guard.

	  idea discussed with jacekm@, qmail approach suggested by claudio@
	  a long time ago

2009-01-28 13:58  gilles

	* queue.c, queue_shared.c, smtpd.h: move some functions from
	  queue.c to queue_shared.c as they are not only used by queue
	  process but also by runner, while at it change the prototype of
	  queue_open_message_file() so it takes the message id and not a
	  batch, runner process requires the decriptor before it even
	  starts building a batch.

2009-01-28 13:56  jacekm

	* util.c: in safe_fclose, ensure file is closed upon return, and
	  additionally signify temp failure to the caller if ferror is
	  true; ok gilles@

2009-01-28 13:28  jacekm

	* store.c: ">From" escaping and \n appending is not needed for
	  maildir; ok gilles@

2009-01-28 12:27  gilles

	* aliases.c, enqueue.c, mta.c, queue.c, queue_shared.c,
	  smtp_session.c, smtpd.h: add a struct path to struct message so
	  that we can keep track of the RCPT provided recipient even after
	  aliases/forwards expansion, we'll need this for loop detection.

	  message id and uid being MAXPATHLEN long is a waste, define
	  MAX_ID_SIZE which is currently set to 64 (but can probably be
	  further reduced) and make sure that structures and the few
	  strlcpy's use the right define.

	  original idea by jacekm@ a while ago

2009-01-28 01:19  gilles

	* enqueue.c: a bit of enqueue cleanup, and while at it set the
	  sender local address to ::1 (fallback to 127.0.0.1) before
	  sending the enqueue request.

2009-01-28 01:09  gilles

	* enqueue.c: - remove debug messages

2009-01-28 00:39  gilles

	* control.c: instead of relying on socket permissions to allow or
	  disallow imsg's that come from the external process
	  (smtpctl/send-mail/etc...), make the socket world-writeable and
	  request credentials with getpeereid().

	  discussed with pyr@ who was happy to hand me over UNP opened at
	  the "passing credentials through a unix socket" page, but
	  hopefully saved by dlg@ who knew about getpeereid() :-) cvs:
	  ----------------------------------------------------------------------
	  cvs: eNTER lOG.  lINES BEGINNING WITH `cvs:' ARE REMOVED
	  AUTOMATICALLY cvs: cvs: cOMMITTING IN .  cvs: cvs: mODIFIED
	  fILES: cvs:  CONTROL.C PARSE.Y SMTP.C SMTPD.C SMTPD.H STORE.C

2009-01-27 23:54  gilles

	* queue_shared.c, sharedqueue.c: follow the naming convention of
	  other files, discussed with jacekm@

2009-01-27 23:48  gilles

	* control.c, enqueue.c, mda.c, mfa.c, queue.c, runner.c,
	  sharedqueue.c, smtpctl.c, smtpd.h, util.c: first bricks of
	  enqueue code which allows smtpctl to submit mail to queue without
	  "talking" smtp to listeners. currently, a big part of the server
	  side code is done (and requires a cleanup), next step is to get
	  it usable properly from a mail user agent.

2009-01-27 16:57  gilles

	* util.c: err, actually session_set_path was moved to utils.c
	  because it was used by the enqueue code i'm working on, but this
	  is no longer necessary since the enqueue code uses
	  recipient_to_path. revert part of previous commit

2009-01-27 16:50  gilles

	* util.c: [no log message]

2009-01-27 15:32  gilles

	* control.c: the data member of ibuf was not set to the environment
	  in control_accept() which caused th ev_arg member of struct event
	  to be reset after the first call to control_dispatch_ext (causing
	  a null deref at second call). this has been driving me nuts for
	  at least an hour ...

2009-01-27 12:42  gilles

	* smtpd.c: temporarily drop privileges to the final user before
	  each delivery attempt, wether it is maildir, mbox or external
	  mda. rearrange a bit of code to also simplify most delivery
	  methods by moving their common code to common place.

	  while at it change some mode_t to int where it was wrongly used
	  and unlink temporary maildir file if we fail to deliver for some
	  reason.

	  discussed with and ok jacek@

2009-01-26 23:20  gilles

	* queue.c, sharedqueue.c, smtpd.h: move some queue related
	  functions that are needed outside of smtpd to the sharedqueue.c
	  file, smtpctl cannot link queue.o without creating a mess
	  otherwise. while at it, move some prototypes to smtpd.h as they
	  will be needed by enqueue code

2009-01-26 22:26  gilles

	* queue.c: we had a set of functions to deal specifically with
	  incoming messages and we need the same functions for the enqueue
	  code i'm currently working on.  instead of duplicating the code,
	  add a set of functions which take the queue we're working on as a
	  parameter and turn the old ones into wrappers.  no functionnal
	  change ... yet

	  discussed with jacekm@

2009-01-21 01:00  jacekm

	* smtpd.c: temporary quick fix to an issue that needs more
	  thinking; ok gilles@

2009-01-15 00:48  gilles

	* smtpd.h: live testing shows that some clients will not even send
	  EHLO if banner does not contain ESMTP. Now that we support some
	  extensions, let's just say that we are ESMTP ...

2009-01-15 00:36  gilles

	* parse.y: slightly change "relay via" so that it can differentiate
	  "ssmtp", "tls" and "ssl" while providing mta with the
	  informations it needs to do its work.

2009-01-14 23:41  gilles

	* store.c: - simplify file_copy() and teach it how to write in
	  mboxrd format

2009-01-12 20:56  jacekm

	* mta.c, smtp_session.c: dot escaping, as required by rfc; ok
	  gilles@

2009-01-12 20:54  jacekm

	* queue.c: more checks in queue_record_incoming_envelope; ok
	  gilles@

2009-01-11 00:54  gilles

	* smtpd.c: - remove a comment that was no longer relevant - when
	  authenticating user, instead of doing a getpwnam() and checking
	  the	 passwd field, issue a call to auth_userokay(), this will
	  allow the	 use of login scripts to implement custom
	  authentications without	 bloating smtpd.

2009-01-08 20:17  jacekm

	* forward.c, lka.c, smtpd.c, smtpd.h, util.c: ensure getpwnam is
	  always followed by endpwent; ok gilles@ henning@

2009-01-08 20:15  jacekm

	* runner.c: clear processing flags early so that there's never
	  doubt whether they belong to previous or current smtpd instance;
	  ok gilles@

2009-01-07 01:26  gilles

	* aliases.c, forward.c, lka.c: - when performing aliases expansion,
	  do not forget to set an action to each expanded envelope, orelse
	  they will use the default action and be passed to MTA no matter
	  if recipient is local or not.      bug reported by Nicholas
	  Marriott <nicholas.marriott@gmail.com>,	 fixed by me and
	  okayd by jacekm@, collaborative work ;-)

2009-01-07 00:12  gilles

	* lka.c: - do not perform a local user lookup, that includes alias
	  expansion, when a recipient is ... not a local recipient (bug
	  introduced very recently).	 Fix by Nicholas Marriott
	  <nicholas.marriott@gmail.com>

2009-01-07 00:02  jacekm

	* runner.c: rework /queue traversal; ok gilles@

2009-01-06 21:17  jacekm

	* queue.c, runner.c: make file update in queue_update_envelope
	  atomic; ok gilles@

2009-01-04 23:35  gilles

	* control.c, parser.c, parser.h, runner.c, smtp.c, smtpctl.c,
	  smtpd.h: - smtp can now pause/resume the accepting of incoming
	  messages - smtpctl recognizes "pause incoming" and "resume
	  incoming" - setup imsg communication between control process and
	  smtp process

2009-01-04 23:18  gilles

	* runner.c: - remove runstates global, we don't need it actually.
	  - while at it, move the runner states check a bit earlier.

2009-01-04 21:52  gilles

	* runner.c: make sure runner resets scheduling related flags on
	  envelopes when the queue is processed for the first time since a
	  (re)start. this ensures that deliveries scheduling can recover
	  properly in case of a badly timed shutdown.

	  ok jacekm@

2009-01-04 20:37  gilles

	* control.c, parser.c, parser.h, runner.c, smtpctl.c, smtpd.h: -
	  runner is now capable of pausing/resuming the scheduling of
	  deliveries for both mda and mta batches.  - smtpctl can be used
	  to disable/enable deliveries at runtime using the pause/resume
	  commands.

	  ok jacekm@

2009-01-04 20:26  jacekm

	* runner.c: remove unnecessary "messagep->retry == 255" expiry
	  condition; ok gilles@

2009-01-04 20:25  jacekm

	* runner.c, smtpd.h: kill F_MESSAGE_EXPIRED; ok gilles@

2009-01-04 20:23  jacekm

	* runner.c: fix bug where runner would expire message that is being
	  delivered, leading to double unlink on envelope file; ok gilles@

2009-01-04 18:45  gilles

	* lka.c, mfa.c, smtpd.h, util.c: When matching a recipient domain
	  to a rule, do not use strcasecmp, but use new hostname_match()
	  function which recognizes * as a wildcard. We can now do: accept
	  for domain "*.example.org" to match all subdomains.

	  idea from Nicholas Marriott <nicholas.marriott@gmail.com>,
	  hostname_match() from me in place of his fnmatch() calls.

	  ok jacekm@

2009-01-04 17:40  gilles

	* mfa.c, parse.y, smtpd.h: - change name of "masked" member in
	  struct netaddr, it was misleading - allow "from all" so that the
	  ugly "accept from { 0.0.0.0/0, ::/0 }" construct becomes a nice
	  looking "accept from all"

	  ok jacekm@

2009-01-04 15:46  jacekm

	* lka.c, mfa.c, smtpd.h: cleanup; ok gilles@

2009-01-04 01:58  gilles

	* forward.c, lka.c, mfa.c, queue.c, smtp.c, smtp_session.c,
	  smtpd.h: aliases/forwards expansion was not done correctly and a
	  race could cause delivery to happen before expansion is over,
	  causing some of the recipients to never receive the mail. change
	  how the mfa, lka, queue and smtp processes communicate to ensure
	  smtp never receives an acknowledgment before ALL expanded
	  envelopes are on disk. While at it, lka was doing work which
	  belongs in mfa, fix that also.

	  this is based on an idea from a talk with jacekm@, change not
	  over but already better than what we had.

2009-01-02 23:08  jacekm

	* queue.c: fix T_DAEMON_MESSAGE notices delivery; ok gilles@

2009-01-02 20:52  jacekm

	* queue.c: cleanup queue_load_envelope; ok gilles@

2009-01-01 17:15  jacekm

	* aliases.c, config.c, control.c, dns.c, forward.c, lka.c,
	  makemap.c, map.c, mda.c, mfa.c, mta.c, queue.c, showqueue.c,
	  smtp.c, smtp_session.c, smtpd.c, ssl.c, store.c, util.c: remove
	  unnecessary includes; ok gilles@

2008-12-31 10:55  jacekm

	* queue.c: if mkdir/mkdtemp fails, fatal if errno != ENOSPC; ok
	  gilles@

2008-12-31 10:50  jacekm

	* queue.c: rename may fail due to ENOSPC, make smtpd survive this
	  condition; ok gilles@

2008-12-31 10:47  jacekm

	* queue.c: kill unnecessary function; ok gilles@

2008-12-29 10:03  jacekm

	* queue.c: Handle ENOSPC in queue_update_envelope; cleanup the code
	  a bit; ok gilles@

2008-12-27 19:18  jacekm

	* queue.c: kill unused function; ok gilles@

2008-12-27 18:58  jacekm

	* smtpctl.8: Manpage bits for "showqueue" -> "show queue" change.

2008-12-27 18:45  jacekm

	* runner.c: log_warn -> log_warnx

2008-12-27 18:36  jacekm

	* queue.c, runner.c, smtpd.h: cleanup; ok gilles@

2008-12-27 18:12  jacekm

	* queue.c: Put common handler code in a function; ok chl@ gilles@

2008-12-27 18:03  jacekm

	* queue.c, runner.c, smtpd.c, smtpd.h: Merge hash() and
	  queue_message_hash() into one func, queue_hash(). Fix callers to
	  use this interface consistently; ok chl@ gilles@

2008-12-27 17:45  jacekm

	* parser.c, parser.h, smtpctl.c: Break showqueue and showrunqueue
	  into 2 words; ok gilles@

2008-12-26 11:28  jacekm

	* smtp.c, smtpd.h: parse.y doesn't allow listen backlog
	  configuration, so "bzero default" is used.  Hardcode it instead:
	  5 is a popular choice across the tree; ok gilles@

2008-12-22 14:35  jacekm

	* lka.c: typo

2008-12-22 14:28  jacekm

	* showqueue.c: Fix few cases where "smtpctl showqueue" could exit
	  prematurely if msg is delivered between readdir and opendir, or
	  readdir and fopen, etc. etc.

	  Be more unforgiving about errors other than ENOENT, and err() if
	  they happen, not just warn().

	  ok gilles@

2008-12-22 14:21  jacekm

	* smtp_session.c: cleanup

2008-12-22 14:18  jacekm

	* smtp.c: s->s_msg.session_hostname must hold resolved hostname as
	  well; ok gilles@

2008-12-22 14:14  jacekm

	* lka.c: Reduce IMSG_LKA_HOST to only make NI_NAMEREQD getnameinfo
	  call. We don't need it to return NI_NUMERICHOST conversion
	  because there's no reason not to do it in smtp; ok gilles@

2008-12-22 13:59  jacekm

	* lka.c: delinting: salen may be used with no prior init; ok
	  gilles@

2008-12-22 13:56  jacekm

	* smtpd.c: Remove entry from mdaproctree after reaping mda child;
	  ok gilles@ From: Nicholas Marriott <nicholas.marriott@gmail.com>

2008-12-22 01:44  jacekm

	* smtp_session.c: To reset state, it's enough to set s->s_state =
	  S_HELO, rcptcount is zeroed in MAIL FROM handler; ok gilles@

2008-12-21 20:27  jacekm

	* smtp_session.c: fix session flags resetting; ok gilles@

2008-12-21 19:51  gilles

	* smtp.c, smtp_session.c: - missing prototype + smtp.c was misusing
	  session_auth_pickup() - unlike starttls, ssmtp sets the F_SECURE
	  flag on session before helo/ehlo   handlers are called. this
	  means that if we clear all flags in helo/	helo handlers, we
	  prevent smtpd from advertising AUTH as it will do	so only for
	  F_SECURE sessions. This commits unbreaks SMTP AUTH with     smtp
	  sessions. Problem spotted by James Turner <james@bsdgroup.org>

2008-12-21 14:06  jacekm

	* showqueue.c: Add more compile time checking; fix warnings
	  reported by gcc.  From: Nicholas Marriott
	  <nicholas.marriott@gmail.com>

2008-12-21 13:59  jacekm

	* makemap.c: Add more compile time checking; fix one warning
	  reported by gcc.  From: Nicholas Marriott
	  <nicholas.marriott@gmail.com>

2008-12-21 03:18  gilles

	* smtp.c, smtp_session.c, smtpd.c, smtpd.h: - AUTH PLAIN may
	  receive credentials as a parameter to AUTH or on a
	  following line, this commit brings support for the latter which
	  was	  not supported yet.  - AUTH LOGIN is now supported,
	  allowing smtp auth support on clients that   do not support AUTH
	  PLAIN (ie: my mobile phone for instance ;)

2008-12-20 01:22  gilles

	* smtpd.conf, smtpd.conf.5: - update smtpd.conf to provide an
	  example of an auth enabled listener - update smtpd.conf.5 just to
	  provide an example, a better description of	  "enable auth"
	  will come when im done implementing it ;)

2008-12-20 01:18  gilles

	* lka.c, mfa.c, parse.y, smtp_session.c, smtpd.h: - import first
	  bricks of SMTP AUTH support. currently only AUTH PLAIN is
	  supported, AUTH LOGIN will follow soon. AUTH will only work if a
		listen directive has "enable auth" keywords, AND session is
	  safe	      (ssmtp or starttls).

2008-12-19 13:09  jacekm

	* util.c: fix indentation, no binary change.

2008-12-19 01:44  gilles

	* smtpd.c: - fatal() if flock() has failed for any reason that's
	  not EWOULDBLOCK, this  is not supposed to happen but better safe
	  than sorry.	suggested by jacekm@  - while at it, remove the
	  locking of delivery file we create when doing a	  Maildir
	  delivery. the purpose of Maildir is to prevent the need
	  for locking in the first place ... I must have been tired that
	  day.

2008-12-19 01:39  gilles

	* runner.c, smtpd.c, smtpd.h: - smtpd handled mbox locking failures
	  as "regular" temporary failures which       is not good at all.
	  As a result, under heavy load messages would be     kept in
	  queue, and delayed for hours just because we failed locking	  a
	  few times. This commit makes smtpd distinguish between lock fails
	      and "regular" temporary fails.  - delivery scheduler will
	  reschedule immediately a message that couldn't be	delivered
	  because of a lock fail. If we fail to lock too many times	we
	  fallback to previous "delay increase" logic.

		  "looks sane" jacekm@

2008-12-19 00:57  jacekm

	* smtp_session.c, smtpd.h, util.c: Introduce safe_fclose, which
	  tries to push file to the disk as quickly as possible; it fails
	  under temporary error conditions, letting caller react
	  appropriately.

	  ok gilles@

2008-12-19 00:49  jacekm

	* smtp_session.c, smtpd.h: Declarations for functions used only in
	  smtp_session.c were moved to that file from smtpd.h.

	  ok gilles@

2008-12-19 00:38  jacekm

	* smtp_session.c, smtpd.h: Check fwrite return code at DATA stage.

	  Add basic line length checking, as required by rfc.

	  It is no longer required to disable EV_READ upon
	  evbuffer_readline failure.

	  ok gilles@

2008-12-18 23:13  gilles

	* parse.y: - condition lists is wrongly described, unbreak the
	  following syntax:	   "accept for { domain "foo", domain "bar"
	  } ..."	 From Nicholas Mariott
	  <nicholas.marriott@gmail.com>

2008-12-18 16:19  jacekm

	* makemap.c: Don't err() on blank lines.

	  ok gilles@

2008-12-18 16:11  jacekm

	* queue.c, smtp_session.c: Cleanup /incoming before handling each
	  MAIL FROM.  Improve cleanup condition to cover more cases.

	  ok gilles@

2008-12-18 00:09  jacekm

	* makemap.c: Warn if empty map is being created; this catches at
	  least usage error such as "makemap foo.db".

	  ok gilles@

2008-12-17 23:59  jacekm

	* Makefile, makemap.8, makemap.c, newaliases.8, newaliases.c: Merge
	  newaliases into makemap.

	  ok gilles@

2008-12-17 19:47  jacekm

	* queue.c, runner.c, smtpd.c, smtpd.h: Introduce /purge, where all
	  msgs scheduled for deletion are put by queue, and removed from
	  disk by runner.

	  On startup, clean /incoming by moving msgs within it to /purge.

	  ok gilles@

2008-12-14 20:27  jacekm

	* queue.c: Files under /incoming don't need flock(2)ing anymore.

	  ok gilles@

2008-12-14 20:24  jacekm

	* queue.c: O_TRUNC is redundant if O_EXCL is specified.

	  ok gilles@

2008-12-14 20:20  jacekm

	* queue.c: O_TRUNC is redundant if O_EXCL is specified.

	  ok gilles@

2008-12-14 20:16  jacekm

	* queue.c: queue_create_incoming_layout must return 0 on failure,
	  not -1.

	  ok gilles@

2008-12-14 00:19  jacekm

	* lka.c, mda.c, mfa.c, mta.c, queue.c, runner.c, smtp.c,
	  smtp_session.c, smtpd.h: IMSG_* namespace cleanup.

	  ok gilles@

2008-12-13 20:18  jacekm

	* newaliases.c: Detect alias duplicates.

	  ok gilles@

2008-12-13 20:15  jacekm

	* newaliases.c: Fix few parsing bugs in parse_entry, most severe of
	  which was segv on lines consisting exclusively of whitespace.

	  ok gilles@

2008-12-13 20:11  jacekm

	* newaliases.c: Simplify parse_entry; streamline the code to call
	  db->put in one place, regardless of number of preexisting
	  aliases.

	  Don't call db->sync; it's covered by db->close shortly before
	  rename.

	  ok chl@ gilles@

2008-12-13 20:05  jacekm

	* newaliases.c: If parse_aliases fails, don't warn about syntax
	  errors; it may fail for other reasons.

	  Never exit outside main; we need to return to main to clean the
	  temp file.

	  Check parse_entry return code; otherwise $? == 0 even when
	  invalid entries were found.

	  ok gilles@

2008-12-13 20:02  jacekm

	* newaliases.c: Use mkstemp instead of mkdtemp; also, add more X's.

	  Do chmod before rename to eliminate short time window when
	  aliases.db is "official" but not readable.

	  Use PATH_ALIASESDB instead of hardcoding "/etc/mail/.."

	  Check db->close return code.

	  ok gilles@ henning@

2008-12-13 19:58  jacekm

	* newaliases.c: - Correct usage text.  - Drop static qualifiers.  -
	  Drop unused -d switch.  - Use 0/1 exit codes instead of
	  <sysexits.h> defines.

	  ok gilles@

2008-12-13 14:15  jacekm

	* aliases.c, forward.c, makemap.c, newaliases.c, smtpd.h: Declare
	  alias_parse in smtpd.h, and fix callers that pass it wrong number
	  of arguments.

	  ok gilles@

2008-12-12 21:19  jacekm

	* smtpd.h: Format string checking for bsnprintf.

	  ok gilles@

2008-12-12 18:24  jacekm

	* smtpd.8, smtpd.conf.5: Kill references to smtpdb(8).

	  ok gilles@

2008-12-12 00:19  gilles

	* parse.y, queue.c: - last snprintf -> bsnprintf

2008-12-12 00:17  gilles

	* queue.c: - snprintf -> bsnprintf

2008-12-12 00:10  gilles

	* smtpd.c: - snprintf -> bsnprintf

2008-12-12 00:06  gilles

	* parse.y: - snprintf -> bsnprintf

2008-12-12 00:04  gilles

	* aliases.c: - snprintf -> bsnprintf - makemap and newaliases need
	  util.c now

2008-12-11 23:59  gilles

	* runner.c, ssl.c: - snprintf -> bsnprintf

2008-12-11 23:32  gilles

	* runner.c: - fix a bug that would cause the runner to hit a
	  fatal() when running out   of luck under load. Long story made
	  short: the runner process opens     the queue and sequentially
	  opens each bucket to process messages.       If a message is
	  delivered by MDA/MTA after the opendir(), then the	  queue
	  process will garbage collect the message from the queue and
	  the runner will attempt to opendir() a path that no longer
	  exists.

		  Reported by Daniel Lidberg <daniel.lidberg@gmail.com>,
	  observed by
		  jacekm@ and debugged by me, that's collaborative work ;-)

2008-12-11 23:19  gilles

	* smtpctl.8: - document showqueue and showrunqueue

2008-12-11 23:18  gilles

	* smtpd.h: - missing prototype

2008-12-11 23:17  gilles

	* util.c: - bsnprintf() is a wrapper to snprintf() that can be used
	  when we handle an   encoding error or a truncation the same way.
	  This will turn many of     our snprintf() checks into boolean
	  checks.

2008-12-11 00:04  jacekm

	* aliases.c, parse.y: That the "aliases" and "virtual" maps satisfy
	  m_src == S_DB is checked too late, ie. at alias resolution time,
	  and it's only a log_info.

	  Move the check to parse.y, and make daemon die if m_src != S_DB.

	  ok gilles@

2008-12-07 17:00  jacekm

	* queue.c: Simplify queue_record_incoming_envelope.

	  ok gilles@

2008-12-07 16:41  jacekm

	* smtp_session.c: Disable EV_READ when sending
	  IMSG_PARENT_AUTHENTICATE.

	  This is for consistency, code is not reached yet.

	  ok gilles@

2008-12-07 16:38  jacekm

	* smtp_session.c, smtpd.h: Replace evbuffer_add_printf calls with
	  wrapper function, session_respond, which additionally suffixes
	  <CRLF>, and enables EV_WRITE.

	  Remove bufferevent_enable(.., EV_WRITE) from session_command and
	  session_pickup so that EV_WRITE is enabled in exactly one place,
	  session_respond.

	  Change some responses slightly to make code fit 80 columns.

	  ok gilles@

2008-12-07 04:14  gilles

	* runner.c, smtpd.h: - getaddrinfo() uses negative values for its
	  error defines, our use of an	u_int8_t to hold the value leads to
	  invalid checking in	      runner_batch_resolved(), this lead to
	  a crash in MTA because we	    assumed a batch had its mx
	  resolved when it had not. while at it,       be more strict about
	  errors we don't know and fatal(), it should	     not happen.

		  ok jacekm@, ok chl@

2008-12-07 02:55  gilles

	* runner.c: - fix function name in fatal()

2008-12-07 02:03  jacekm

	* smtp_session.c: Don't check / reset s->s_msg.datafp where its
	  state is obviously known.

2008-12-07 00:49  jacekm

	* queue.c: Make queue_delete_incoming_message not fatal on ENOENT
	  condition.  Also, fix function name in fatals.

	  ok gilles@

2008-12-06 16:18  weerd

	* smtpd.h: Get rid of anonymous unions. Discussed with and ok
	  gilles@

2008-12-06 15:58  jacekm

	* smtp_session.c: In session_destroy, use "if (s->s_state >=
	  S_MAIL)", and not "if (s->s_state > S_MAIL)". Otherwise, session
	  timeout after MAIL FROM would leave mess in queue.

	  ok gilles@

2008-12-06 15:30  jacekm

	* forward.c, map.c, queue.c, smtp_session.c, store.c: Don't include
	  <err.h> where log.c API must be used.

	  ok gilles@

2008-12-06 15:24  gilles

	* store.c: - fix spelling and grammar, From Nicholas Marriott
	  <nicm__@ntlworld.com>

2008-12-06 15:23  jacekm

	* parse.y: Unbreak -Werror.

	  ok gilles

2008-12-06 14:18  sobrado

	* smtpctl.8: the ellipsis allows more than one argument being
	  specified.

	  discussed with gilles@

	  ok jmc@

2008-12-06 11:54  sobrado

	* smtpctl.8: smtpctl(8) was committed after 4.4.

	  ok gilles@

2008-12-06 05:49  jacekm

	* smtp_session.c: NULL-ify s_msg.datafp upon fclose
	  unconditionally.

	  ok gilles

2008-12-06 03:44  gilles

	* parser.c, parser.h, showqueue.c, smtpctl.c: - teach smtpctl how
	  to inspect queue and runqueue, it supports two commands
	  `showqueue' which displays the content of the queue (all
	  envelopes)	 `showrunqueue` which displays envelopes scheduled
	  for delivery. The	utility will be improved and extended, but
	  for now we need at least     this basic support to help debug
	  queue-related issues.

		  Output format is spamdb-alike:
		  type|envelope uid|sender|recipient|last delivery
	  date|retry count

		  ok jacek@

2008-12-06 03:43  jacekm

	* mta.c, smtp_session.c: evbuffer_readline already strips <CRLF> so
	  that callers don't have to.

	  ok gilles

2008-12-06 03:04  gilles

	* parse.y, smtpd.conf, smtpd.conf.5: - it is now possible to
	  specify an interface instead of an address or a    hostname in a
	  listen statement (ie: listen on lo0)	    request by deraadt@ a
	  while ago, ok jacekm@

2008-12-05 20:09  gilles

	* aliases.c, dns.c, lka.c, mda.c, mta.c, runner.c: - more err/errx
	  -> fatal/fatalx, warn/warnx -> log_warn/log_warnx    contains
	  bits based on an old diff from Jacek Masiulaniec and	 other bits
	  from me.

2008-12-05 18:31  gilles

	* aliases.c: - err -> fatal(), old diff from Jacek Masiulaniec
	  <jacekm@dobremiasto.net>

2008-12-05 18:29  gilles

	* smtp_session.c: - cosmethic, no functionnal change

2008-12-05 07:56  jmc

	* smtpctl.8: tweaks;

2008-12-05 04:28  gilles

	* Makefile, parser.c, parser.h, smtpctl.8, smtpctl.c: - smtpctl
	  utility to control the smtpd, don't expect too much yet as it is
		just an empty clone of relayctl with the glue needed to
	  have it	  exchange imsg with smtpd correctly. code mostly
	  by pyr@, reviewed	  by chl@ and I a while ago.

2008-12-05 03:51  gilles

	* control.c, lka.c, mda.c, mta.c, queue.c, runner.c, smtpd.c,
	  smtpd.h: - last part of the new queue code: the runner process
	  (unprivileged and  chrooted) is now in charge of doing the
	  scheduling of deliveries,	  and the dispatching of messages
	  to MDA and MTA. queue process only	  does
	  inserts/updates/removals from the queue and can no longer be
	  so busy that it delays answers to imsg from smtp server.

2008-12-05 00:02  gilles

	* smtp_session.c: - in session_read(), set EV_WRITE if we are going
	  to send a "transaction      failed" error. found by Jacek
	  Masiulaniec <jacekm@dobremiasto.net>

2008-12-04 18:24  cloder

	* imsg.c, log.c, parse.y, smtpd.h: Declare printf-style functions
	  with __attribute__((format(printf,x,x))) and fix some of the
	  errors caught by this. Part of a general push to make yyerror()
	  -Wformat clean throughout the tree.

2008-12-04 16:16  gilles

	* Makefile: - allow smtpd to build again

2008-12-04 14:36  todd

	* Makefile: move smtpd build to smtpd subdir so we can traverse to
	  newaliases and makemap ok gilles@

2008-12-04 07:22  jmc

	* makemap.8, newaliases.8: some basic cleanup;

2008-12-04 05:09  gilles

	* smtp_session.c: - when in state S_DATACONTENT, do not disable
	  EV_READ if the last line we	  read is empty, instead return and
	  only disable EV_READ when we read	"."

2008-12-04 03:04  gilles

	* smtp_session.c: - when doing the session timeout lookup, do not
	  remove the last session	that timed out twice.

2008-12-04 02:16  gilles

	* smtp_session.c, smtpd.h: - fix event masking for DATA and make
	  DATA look more like MAIL and RCPT	 with regard to
	  communication with queue process (one state before	   sending
	  imsg, another state when imsg has returned). this fixes an
	  issue that I observed when clients send DATA and content without
		even looking at server replies.

2008-12-04 01:10  ian

	* parse.y: obvious 'missing space' typo in message, ok gilles@ krw@

2008-12-03 22:20  gilles

	* makemap.8, makemap.c: - smtpd's db maps are incompatible with
	  sendmail's and needs a distinct	  makemap utility, this is
	  needed for virtual users support amongst	 other things.
	  links to smtpd's aliases.c and only provides a    frontent to
	  parse map descriptions. contains code from pyr@, chl@       and
	  I. Should have also been imported with smtpd.

2008-12-03 22:13  gilles

	* newaliases.8, newaliases.c: smtpd's aliases db is incompatible
	  with sendmail's and requires a distinct	 newaliases
	  utility. newaliases links to the aliases.c file from
	  smtpd and only provides a frontend to parse aliases file.
	  contains code from pyr@, chl@ and I, it should have been imported
		with smtpd.

2008-12-03 21:11  gilles

	* Makefile, debug.c: - these were used to debug the previous queue
	  scheduler, they are no longer        needed and aren't referenced
	  anywhere any longer

2008-12-03 21:08  gilles

	* queue.c: - remove log_debug() that's no longer needed

2008-12-03 18:58  gilles

	* queue.c, smtp.c, smtp_session.c, smtpd.c, smtpd.h: - fix event
	  masking issues in smtp process which could lead to a fatal() if
	  queue process did not answer fast enough to an imsg. spotted
	  by	     Jacek Masiulaniec <jacekm@dobremiasto.net> - queue
	  layout was mostly to bootstrap the project, it does not behave
	  good	under load, it does complex things to stay in a recoverable
	  state       and it probably didnt do it too well. New queue code
	  is simpler,	     smaller and allows for atomic submissions (a
	  mail can never be in a     state where it needs to be recovered).
	  It still needs some work but	   works better than previous code,
	  no regression.

2008-12-01 23:54  gilles

	* dns.c: - in mxsort, fix type of loop counter, it will never be <
	  0 if it is   unsigned and when running out of luck it will cause
	  the lookup  process to crash.

2008-11-26 00:06  gilles

	* forward.c, smtpd.h: - more prototype moving to smtpd.h

2008-11-26 00:03  gilles

	* dns.c, smtpd.h: - move prototype to smtpd.h

2008-11-26 00:01  gilles

	* aliases.c, smtpd.h: - move prototypes to smtpd.h

2008-11-25 21:35  gilles

	* smtp_session.c: - plug memory leak

2008-11-25 21:26  gilles

	* lka.c, mta.c, parse.y, queue.c, smtpd.h: - recent change in
	  parse.y caused htons() to be called twice on the port
	  provided to "relay via" rules, once in parse.y once in lka.c,
	  fix.	- rename struct address to struct relayhost, introduce
	  struct mxhost which  not only holds the sockaddr_storage, but
	  also additionnal flags we	 want forwarded to the mta process.
	  - propagate the change

2008-11-25 16:58  gilles

	* smtp_session.c: - update email address for bug reports when
	  replying to HELP

2008-11-25 16:55  gilles

	* smtp_session.c, smtpd.h: - F_IMSG_SENT is no longer used, kill
	  suggested by Jacek Masiulaniec <jacekm@dobremiasto.net>

2008-11-25 00:55  gilles

	* queue.c, smtp_session.c: - when using fread/fwrite, do not swap
	  the size and nmemb arguments. no	functionnal change here,
	  just making use of fonctions the way C	 intended it ;-)
	  From Jacek Masiulaniec <jacekm@dobremiasto.net>

2008-11-24 23:30  gilles

	* mta.c, smtp.c: - not really a bug since we don't use other
	  descriptor flags, but in   smtp_setup_events() and mta_connect(),
	  our fcntl() use clears   flags. use session_socket_blockmode()
	  instead, it makes more    sense anyway. From Jacek Masiulaniec
	  <jacekm@dobremiasto.net>

2008-11-22 23:22  gilles

	* smtpd.c: - do not set nochdir in daemon() call, we want parent
	  and lka to have their  wd reset to / rather than current working
	  directory.	From Jacek Masiulaniec <jacekm@dobremiasto.net>

2008-11-22 21:26  gilles

	* parse.y: - allow the optionnal ssmtp keywork in "relay via"
	  rules, while at it	    allow port to become optionnal
	  (implicit 25) or provided by value	   or name.

2008-11-17 22:56  chl

	* log.c, smtp.c, smtp_session.c, store.c: add missing header needed
	  by time(), ctime_r() and tzset().

	  ok gilles@

2008-11-17 22:52  gilles

	* smtp_session.c: - clear session flags upon helo/ehlo

2008-11-17 22:50  gilles

	* smtp_session.c, smtpd.h: - until now a client could issue a
	  command from an extension even though it  greeted with helo and
	  not ehlo. introduce session flag F_EHLO and	    make sure the
	  session_command() dispatch only looks at extensions	    when a
	  session does not have the F_EHLO flag.

2008-11-17 22:32  gilles

	* forward.c: - err() -> fatal() - printf() -> log_debug() - be more
	  verbose in debug mode

2008-11-17 22:27  gilles

	* smtpd.h: - remove prototypes for the atomic API, we don't use it
	  anymore

2008-11-17 22:27  chl

	* control.c: add missing header needed by signal().

2008-11-17 22:23  gilles

	* Makefile, atomic.c: - we don't need this anymore

2008-11-17 22:05  gilles

	* queue.c: - remove some unused prototypes

2008-11-17 22:03  gilles

	* queue.c: - queue_record_daemon() no longer used, remove
	  definition

2008-11-17 21:37  gilles

	* queue.c, smtpd.c: - replace uses of O_EXLOCK and
	  O_EXLOCK|O_NONBLOCK with the corresponding   open()/flock()
	  constructs as chl@ says it prevents him from doing	   a
	  portable build.

	  discussed with chl@, diff is common work from him and myself

2008-11-17 21:16  gilles

	* aliases.c: - fix error message in aliases_virtual_exist()

	  By Alexander Hall <alexander@beard.se>

2008-11-17 21:14  gilles

	* smtpd.c: - exit() -> _exit() - err()	-> fatal()

	  Both by Jacek Masiulaniec <jacekm@dobremiasto.net>

2008-11-17 21:11  gilles

	* smtp_session.c: - remove several constructs where format strings
	  are used in an evbuffer      printf with constant parameters,
	  turn them into a constant string.  - when client sends EHLO
	  without a parameter, send the appropriate error    message ("EHLO
	  takes ..." instead of "HELO takes ...")

	  From Jacek Masiulaniec <jacekm@dobremiasto.net>

2008-11-14 00:24  gilles

	* parse.y, smtp.c: - rephrase the "cannot load cert" warning that
	  is output at startup when a	listen directive has no matching
	  certificate. it sounds like a  critical failure when it just
	  means "no tls support".  - minor log_debug() addition in smtp.c

2008-11-11 22:17  gilles

	* queue.c: - mistakenly removed this lock

2008-11-11 22:13  gilles

	* queue.c: - introduce queue_init_submissions() which will sanitize
	  the disk-based      queue at startup: catches left overs from
	  interrupted sessions, 	reset F_MESSAGE_INPROCESS so that
	  messages which were in MTA or 	MDA gets scheduled again.
	  - temporarily comment chl@'s O_EXLOCK -> fcntl change until we
	  figure	why it locks my mailbox under load

2008-11-11 22:02  gilles

	* smtpd.c: - temporarily comment chl@'s O_EXLOCK -> fcntl() change
	  until we understand  what causes the mailbox lock bug i'm
	  observing under heavy load.

2008-11-11 21:59  gilles

	* store.c: - now that we fdopen() message file descriptor, do not
	  forget to fclose()

2008-11-11 03:14  tedu

	* mta.c, smtp.c: some small improvements.  ok gilles

2008-11-11 02:08  gilles

	* queue.c, smtp.c, smtp_session.c, smtpd.h: - queue process no
	  longer schedules messages which do not have flag
	  F_MESSAGE_COMPLETE - submit recipients to the queue as we read
	  them from RCPT instead of	   submiting them all at once when
	  DATA is over. this prevents us  from having to keep a potentially
	  large number of recipients in 	memory during the whole
	  session.  - remove all code that dealt with the recipients queue
	  of a message as	 it is no longer used.	- several small
	  changes to make sure the server is always in a recoverable
	  state in case of an unexpected shutdown.

2008-11-11 02:01  chl

	* queue.c, smtpd.c: remove the use of O_EXLOCK, when open()ing a
	  file, and use flock() instead.

	  ok gilles@

2008-11-11 00:18  gilles

	* smtp_session.c, smtpd.h: - open the message file earlier after a
	  successful MAIL command instead of   waiting for the DATA
	  command. this currently has no impact on the	     session but is
	  needed for another change that will make submission	   of
	  recipients safer with regard to "unexpected shutdowns at bad
	  timings"

2008-11-10 23:35  gilles

	* aliases.c, mta.c, parse.y, smtpd.h: - define MAX_LINE_SIZE which
	  is the maximum length of a line we allow from        a client. it
	  must be set to the highest value we have from all of	     the
	  extensions which are/will be implemented.  - replace all
	  occurences of STRLEN define with MAX_LINE_SIZE, kill STRLEN

2008-11-10 22:29  chl

	* lka.c, queue.c, smtpd.h: rename h_errno field into
	  getaddrinfo_error, to avoid confusion with errno.

	  h_errno has been obsoleted since the gethostbyname() -->
	  getaddrinfo() replacement.

	  ok gilles@

2008-11-10 21:10  chl

	* smtpd.h: fix store_write_header() prototype.

	  ok gilles@

2008-11-10 18:24  deraadt

	* Makefile, parse.y, queue.c, smtp_session.c, smtpd.c, smtpd.h,
	  ssl_privsep.c: spaces fixed while reading code

2008-11-10 17:33  gilles

	* store.c: - remove last occurences of the atomic api in store.c,
	  smtpd no longer uses	atomic api when dealing with files but uses
	  stdio instead

2008-11-10 04:55  tedu

	* aliases.c: last character in line is at len - 1. ok gilles

2008-11-10 04:54  tedu

	* dns.c: insertion sort is faster than bubble sort.  ok gilles

2008-11-10 04:41  gilles

	* smtpd.c: - simplify the passing of ssl cert/key during ssl
	  configuration,     from Jacek Masiulaniec
	  <jacekm@dobremiasto.net>

2008-11-10 04:16  gilles

	* queue.c: - in queue, do not use the atomic api when dealing with
	  real files   change based on a comment from deraadt@

	  - in queue_register_submission(), if an envelope cannot be fully
	  written	 because of some error (ie: disk full), not only
	  return error but	  also remove the partial envelope from
	  file system. this prevents	    the queue process from trying
	  (failing) to reload it over and   over.

2008-11-10 03:34  gilles

	* mta.c: - plug a descriptor leak when session is aborted by a
	  server error instead	   of a client QUIT or client timeout

2008-11-10 03:13  gilles

	* parse.y: - move '=>' into the lex loop, requested by and with
	  help from deraadt@

2008-11-10 02:14  gilles

	* queue.c: - in queue_load_submissions(), if
	  queue_message_from_id() fails for some     reason just warn
	  instead of aborting the whole smtpd.

2008-11-10 01:57  gilles

	* aliases.c, parse.y, queue.c, smtpd.c, ssl.c: - snprintf() can
	  return -1, make sure every call is checked properly

2008-11-10 01:29  gilles

	* parse.y: - recognize '=>' as one token instead of trying to match
	  '=' and '>'. this   prevents:  "foo  =      >  bar" from being
	  valid

2008-11-10 01:22  gilles

	* smtpd.h: - make READ_BUF_SIZE a power of 2

2008-11-05 13:49  sobrado

	* atomic.c: add gilles@ as copyright holder for this file.

2008-11-05 13:14  sobrado

	* aliases.c, atomic.c, config.c, control.c, debug.c, dns.c,
	  forward.c, lka.c, map.c, mda.c, mfa.c, mta.c, parse.y, queue.c,
	  smtp.c, smtp_session.c, smtpd.c, smtpd.conf, smtpd.h, ssl.c,
	  store.c: add a few missing id tags; there are a bunch of files,
	  and developers will probably miss this change when working on
	  more important matters, so it is probably better to sort them
	  now.	there is a risk of losing the tags if a change needs to be
	  reverted too.

	  written with excellent advice from jmc@

	  ok gilles@

2008-11-02 09:19  jmc

	* ARCHITECTURE, smtpd.8, smtpd.c, smtpd.conf.5: various minor
	  tweaks, including spelling fixes from Brian Keefer and Jim
	  Razmus;

2008-11-02 01:01  sobrado

	* smtpd.conf.5: write the command description (the .Nd macro) in a
	  more usual way; improve spacing in the FILES section.

	  ok gilles@

2008-11-02 00:42  sobrado

	* smtpd.8: remove a superfluous .Pq macro; cites bibliography in a
	  more standard way; fix the reference to RFC 5321.

	  ok gilles@

2008-11-01 22:41  gilles

	* parse.y: - put back all copyright holders - add myself as a
	  copyright holder

2008-11-01 22:41  deraadt

	* store.c: correct order of includes

2008-11-01 22:35  gilles

	* ARCHITECTURE, Makefile, aliases.c, atomic.c, buffer.c, config.c,
	  control.c, debug.c, dns.c, forward.c, imsg.c, lka.c, log.c,
	  map.c, mda.c, mfa.c, mta.c, parse.y, queue.c, smtp.c,
	  smtp_session.c, smtpd.8, smtpd.c, smtpd.conf, smtpd.conf.5,
	  smtpd.h, ssl.c, ssl_privsep.c, store.c: smtpd is a smtp server
	  implementation for OpenBSD. It is a work in progress which still
	  lacks many features. bringing it in tree will help working on it
	  more easily.

	  "at this stage it should go in" henning@, "move ahead" deraadt@

